%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 192.eps
%%Creator: Adobe Illustrator(R) 15.1
%%For: Ленка
%%CreationDate: 7/2/2013
%%BoundingBox: 0 0 2000 2000
%%HiResBoundingBox: 0 0 2000 2000
%%CropBox: 0 0 2000 2000
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.1.0 x39 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:CreateDate>2013-07-02T18:57:49+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2013-07-02T18:57:49+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2013-07-02T18:57:49+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9G5pXNdiqjeXlpZW0l1d&#xA;zJb20QrJNIwVVFabk++EC0SkALPJI5vO1kCpttP1G8jIr6sNpIqg1O3730m9+lMlwd5HzcY6yHSz&#xA;8Cs/xwn/AFZNW/6Rh/zXg4R3j5r+cj3S+Tv8cJ/1ZNW/6Rh/zXjwjvHzX85Hul8nf44T/qyat/0j&#xA;D/mvHhHePmv5yPdL5O/xwn/Vk1b/AKRh/wA148I7x81/OR7pfJ3+OE/6smrf9Iw/5rx4R3j5r+cj&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">menu buttons</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:4F59D981EBE2E211B2AAEC8081284D07</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:4F59D981EBE2E211B2AAEC8081284D07</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:0C8C6F9963D4E211BC2BECBC79AF619D</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:4E59D981EBE2E211B2AAEC8081284D07</stRef:instanceID>
            <stRef:documentID>xmp.did:4E59D981EBE2E211B2AAEC8081284D07</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:0C8C6F9963D4E211BC2BECBC79AF619D</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0C8C6F9963D4E211BC2BECBC79AF619D</stEvt:instanceID>
                  <stEvt:when>2013-06-13T23:58:21+04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1AA9839F03D8E211B7F8A8F64DDDEF2D</stEvt:instanceID>
                  <stEvt:when>2013-06-18T13:41:24+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4A59D981EBE2E211B2AAEC8081284D07</stEvt:instanceID>
                  <stEvt:when>2013-07-02T11:06:41+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4D59D981EBE2E211B2AAEC8081284D07</stEvt:instanceID>
                  <stEvt:when>2013-07-02T14:49:39+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4E59D981EBE2E211B2AAEC8081284D07</stEvt:instanceID>
                  <stEvt:when>2013-07-02T18:53:16+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4F59D981EBE2E211B2AAEC8081284D07</stEvt:instanceID>
                  <stEvt:when>2013-07-02T18:57:49+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>2000.000000</stDim:w>
            <stDim:h>2000.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=33 G=196 B=158 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>33</xmpG:red>
                           <xmpG:green>196</xmpG:green>
                           <xmpG:blue>158</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=66 B=87 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>66</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=94 G=87 B=94 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>94</xmpG:red>
                           <xmpG:green>87</xmpG:green>
                           <xmpG:blue>94</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=195 B=88 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>195</xmpG:green>
                           <xmpG:blue>88</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=74 B=59 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>74</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=122 G=220 B=197 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>122</xmpG:red>
                           <xmpG:green>220</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=168 G=92 B=119 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>168</xmpG:red>
                           <xmpG:green>92</xmpG:green>
                           <xmpG:blue>119</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=243 G=200 B=99 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>243</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=194 B=179 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=108 G=52 B=38 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>108</xmpG:red>
                           <xmpG:green>52</xmpG:green>
                           <xmpG:blue>38</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=245 G=145 B=59 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>245</xmpG:red>
                           <xmpG:green>145</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=184 G=232 B=184 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>184</xmpG:red>
                           <xmpG:green>232</xmpG:green>
                           <xmpG:blue>184</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -2000 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 2000 li
2000 2000 li
2000 0 li
cp
clp
[1 0 0 1 0 0 ]ct
2e3 2e3 mo
0 2e3 li
0 0 li
2e3 0 li
2e3 2e3 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.980392 .913725 .756863 rgb
f
850.864 509.989 mo
244.312 509.989 li
157.662 509.989 li
149.719 509.989 143.22 516.488 143.22 524.431 cv
143.22 582.198 li
143.22 639.966 li
143.22 647.908 149.719 654.407 157.662 654.407 cv
244.312 654.407 li
850.864 654.407 li
858.807 654.407 865.306 647.908 865.306 639.966 cv
865.306 582.198 li
865.306 524.431 li
865.306 516.488 858.807 509.989 850.864 509.989 cv
.827451 .752941 .572549 rgb
f
811.169 746.87 mo
811.169 746.87 808.453 744.154 805.133 740.834 cv
801.814 737.516 793.139 734.8 785.856 734.8 cv
778.573 734.8 766.115 734.8 758.172 734.8 cv
753.718 734.8 li
745.776 734.8 732.778 734.8 724.835 734.8 cv
244.781 734.8 li
157.662 734.8 li
149.719 734.8 143.22 741.298 143.22 749.241 cv
143.22 807.008 li
143.22 864.775 li
143.22 872.719 149.719 879.217 157.662 879.217 cv
244.781 879.217 li
724.835 879.217 li
732.778 879.217 745.776 879.217 753.718 879.217 cv
758.172 879.217 li
766.115 879.217 778.573 879.217 785.856 879.217 cv
793.139 879.217 801.26 877.052 803.905 874.406 cv
806.552 871.762 808.715 869.597 808.715 869.597 cv
861.094 817.219 li
863.901 814.412 865.306 810.714 865.306 807.015 cv
865.306 807.008 li
865.306 807 li
865.306 803.3 863.901 799.603 861.094 796.794 cv
811.169 746.87 li
f
811.169 1396.61 mo
811.169 1396.61 808.453 1393.89 805.133 1390.57 cv
801.814 1387.25 793.139 1384.54 785.856 1384.54 cv
778.573 1384.54 766.115 1384.54 758.172 1384.54 cv
753.718 1384.54 li
745.776 1384.54 732.778 1384.54 724.835 1384.54 cv
244.781 1384.54 li
157.662 1384.54 li
149.719 1384.54 143.22 1391.04 143.22 1398.98 cv
143.22 1456.75 li
143.22 1514.51 li
143.22 1522.46 149.719 1528.96 157.662 1528.96 cv
244.781 1528.96 li
724.835 1528.96 li
732.778 1528.96 745.776 1528.96 753.718 1528.96 cv
758.172 1528.96 li
766.115 1528.96 778.573 1528.96 785.856 1528.96 cv
793.139 1528.96 801.26 1526.79 803.905 1524.14 cv
806.552 1521.5 808.715 1519.33 808.715 1519.33 cv
861.094 1466.96 li
863.901 1464.15 865.306 1460.46 865.306 1456.75 cv
865.306 1456.75 li
865.306 1456.74 li
865.306 1453.04 863.901 1449.34 861.094 1446.53 cv
811.169 1396.61 li
f
821.98 285.04 mo
186.546 285.04 li
162.798 285.04 143.359 304.405 143.226 328.124 cv
143.22 328.366 li
143.22 339.197 143.221 344.951 143.221 355.147 cv
143.221 357.249 li
143.221 386.133 li
143.221 409.962 162.716 429.458 186.546 429.458 cv
821.98 429.458 li
845.809 429.458 865.306 409.962 865.306 386.133 cv
865.306 357.249 li
865.306 328.366 li
865.306 304.536 845.809 285.04 821.98 285.04 cv
f
1778.63 285.04 mo
1126.33 285.04 li
1126.33 359.67 li
1126.33 360.008 li
1126.34 360.008 li
1126.52 398.394 1157.69 429.458 1196.12 429.458 cv
1848.41 429.458 li
1848.41 354.831 li
1848.41 316.288 1817.17 285.04 1778.63 285.04 cv
f
1196.12 1384.54 mo
1157.58 1384.54 1126.33 1415.79 1126.33 1454.33 cv
1126.33 1457.09 li
1126.33 1528.96 li
1244.66 1528.96 li
1778.62 1528.96 li
1817.17 1528.96 1848.41 1497.71 1848.41 1459.17 cv
1848.41 1457.09 li
1848.41 1384.54 li
1244.66 1384.54 li
1196.12 1384.54 li
f
1767.88 501.667 mo
1755.66 501.667 1744.08 504.403 1733.7 509.276 cv
1133.34 509.276 li
1129.48 509.276 1126.33 512.43 1126.33 516.287 cv
1126.33 581.485 li
1126.33 646.684 li
1126.33 650.539 1129.48 653.693 1133.34 653.693 cv
1730.83 653.693 li
1741.93 659.454 1754.52 662.729 1767.88 662.729 cv
1812.36 662.729 1848.41 626.673 1848.41 582.197 cv
1848.41 537.722 1812.36 501.667 1767.88 501.667 cv
cp
f
261.099 1601.16 mo
162.297 1601.16 li
156.535 1601.16 li
146.044 1601.16 143.22 1607.47 143.22 1615.19 cv
143.22 1673.37 li
143.22 1731.56 li
143.22 1739.27 146.044 1745.58 156.535 1745.58 cv
162.297 1745.58 li
261.099 1745.58 li
339.718 1745.58 li
865.306 1745.58 li
865.306 1673.37 li
865.306 1601.16 li
339.718 1601.16 li
261.099 1601.16 li
cp
f
793.097 1818.03 mo
791.083 1818.03 li
791.083 1817.27 li
787.487 1817.27 li
721.949 1817.27 li
718.352 1817.27 li
718.352 1818.03 li
215.429 1818.03 li
175.714 1818.03 143.22 1850.53 143.22 1890.24 cv
143.22 1929.96 175.714 1962.45 215.429 1962.45 cv
793.097 1962.45 li
832.651 1962.45 865.031 1930.22 865.294 1890.72 cv
865.294 1890.72 li
865.294 1890.56 865.306 1890.4 865.306 1890.24 cv
865.306 1850.53 832.812 1818.03 793.097 1818.03 cv
f
793.097 68.553 mo
726.601 68.553 li
215.429 68.553 li
175.714 68.553 143.22 101.047 143.22 140.762 cv
143.22 180.476 175.714 212.97 215.429 212.97 cv
726.601 212.97 li
793.097 212.97 li
832.652 212.97 865.032 180.735 865.294 141.24 cv
865.294 141.24 li
865.294 141.079 865.306 140.922 865.306 140.762 cv
865.306 101.047 832.812 68.553 793.097 68.553 cv
f
1848.4 1239.64 mo
1848.14 1200.15 1815.76 1167.91 1776.21 1167.91 cv
1198.54 1167.91 li
1170.62 1167.91 1146.29 1183.98 1134.29 1207.31 cv
1134.27 1207.35 li
1134.27 1207.35 li
1134.2 1207.49 1134.13 1207.62 1134.06 1207.76 cv
1134 1207.88 li
1133.66 1208.54 1133.34 1209.21 1133.03 1209.88 cv
1132.98 1209.98 1132.94 1210.08 1132.89 1210.18 cv
1132.35 1211.36 1131.84 1212.55 1131.36 1213.76 cv
1131.27 1213.99 1131.18 1214.22 1131.09 1214.45 cv
1130.86 1215.04 1130.64 1215.63 1130.43 1216.22 cv
1130.3 1216.59 1130.18 1216.96 1130.06 1217.32 cv
1129.78 1218.16 1129.51 1219.02 1129.26 1219.87 cv
1129.11 1220.38 1128.96 1220.89 1128.82 1221.41 cv
1128.69 1221.87 1128.57 1222.34 1128.45 1222.82 cv
1128.28 1223.5 1128.12 1224.2 1127.97 1224.89 cv
1127.87 1225.33 1127.78 1225.78 1127.69 1226.23 cv
1127.53 1227.02 1127.39 1227.82 1127.26 1228.62 cv
1127.2 1228.97 1127.15 1229.33 1127.1 1229.68 cv
1126.96 1230.64 1126.83 1231.6 1126.73 1232.57 cv
1126.71 1232.69 1126.7 1232.82 1126.69 1232.94 cv
1126.59 1233.95 1126.52 1234.97 1126.46 1235.99 cv
1126.44 1236.27 1126.42 1236.56 1126.41 1236.84 cv
1126.36 1237.93 1126.33 1239.02 1126.33 1240.12 cv
1126.33 1241.22 1126.36 1242.31 1126.41 1243.4 cv
1126.42 1243.68 1126.44 1243.97 1126.46 1244.25 cv
1126.52 1245.27 1126.59 1246.29 1126.69 1247.3 cv
1126.7 1247.43 1126.71 1247.55 1126.73 1247.67 cv
1126.83 1248.64 1126.96 1249.6 1127.1 1250.56 cv
1127.15 1250.91 1127.21 1251.27 1127.26 1251.62 cv
1127.39 1252.42 1127.53 1253.22 1127.69 1254.01 cv
1127.78 1254.46 1127.87 1254.91 1127.97 1255.36 cv
1128.12 1256.05 1128.28 1256.74 1128.45 1257.42 cv
1128.57 1257.9 1128.69 1258.37 1128.82 1258.84 cv
1128.96 1259.35 1129.11 1259.86 1129.26 1260.37 cv
1129.51 1261.22 1129.78 1262.08 1130.06 1262.92 cv
1130.19 1263.29 1130.3 1263.65 1130.43 1264.02 cv
1130.64 1264.61 1130.86 1265.2 1131.09 1265.79 cv
1131.18 1266.02 1131.27 1266.26 1131.36 1266.49 cv
1131.84 1267.69 1132.35 1268.88 1132.88 1270.05 cv
1132.93 1270.15 1132.98 1270.26 1133.03 1270.37 cv
1133.34 1271.03 1133.66 1271.7 1133.99 1272.35 cv
1134.07 1272.51 li
1134.14 1272.64 1134.2 1272.76 1134.27 1272.89 cv
1134.27 1272.89 li
1134.28 1272.91 li
1134.89 1274.1 1135.54 1275.28 1136.21 1276.44 cv
1136.24 1276.49 li
1148.81 1297.88 1172.06 1312.33 1198.54 1312.33 cv
1776.21 1312.33 li
1815.92 1312.33 1848.41 1279.84 1848.41 1240.12 cv
1848.41 1239.96 1848.4 1239.8 1848.4 1239.64 cv
f
1834.42 734.937 mo
1256.47 734.937 li
1140.32 734.937 li
1132.63 734.937 1126.33 741.233 1126.33 748.932 cv
1126.33 807.008 li
1126.33 865.084 li
1126.33 872.781 1132.63 879.078 1140.32 879.078 cv
1256.47 879.078 li
1834.42 879.078 li
1842.12 879.078 1848.41 872.781 1848.41 865.084 cv
1848.41 807.008 li
1848.41 748.932 li
1848.41 741.233 1842.12 734.937 1834.42 734.937 cv
cp
f
1834.42 1817.79 mo
1256.47 1817.79 li
1140.32 1817.79 li
1132.63 1817.79 1126.33 1824.09 1126.33 1831.79 cv
1126.33 1889.86 li
1126.33 1947.94 li
1126.33 1955.64 1132.63 1961.93 1140.32 1961.93 cv
1256.47 1961.93 li
1834.42 1961.93 li
1842.12 1961.93 1848.41 1955.64 1848.41 1947.94 cv
1848.41 1889.86 li
1848.41 1831.79 li
1848.41 1824.09 1842.12 1817.79 1834.42 1817.79 cv
cp
f
1834.42 68.6909 mo
1256.47 68.6909 li
1140.32 68.6909 li
1132.63 68.6909 1126.33 74.9868 1126.33 82.6855 cv
1126.33 140.762 li
1126.33 198.838 li
1126.33 206.535 1132.63 212.832 1140.32 212.832 cv
1256.47 212.832 li
1834.42 212.832 li
1842.12 212.832 1848.41 206.535 1848.41 198.838 cv
1848.41 140.762 li
1848.41 82.6855 li
1848.41 74.9868 1842.12 68.6909 1834.42 68.6909 cv
cp
f
143.22 913.675 mo
143.22 993.823 li
143.22 1058.09 li
241.765 1058.09 li
429.036 1058.09 li
504.263 1133.32 li
579.49 1058.09 li
865.306 1058.09 li
865.306 993.823 li
865.306 913.675 li
241.765 913.675 li
143.22 913.675 li
f
1833.65 979.885 mo
1832.97 978.994 1832.27 978.119 1831.55 977.261 cv
1831.44 977.136 li
1830.74 976.303 1830.02 975.484 1829.29 974.682 cv
1829.11 974.495 li
1828.39 973.719 1827.66 972.956 1826.91 972.213 cv
1826.64 971.962 li
1825.91 971.246 1825.17 970.541 1824.41 969.857 cv
1824.29 969.752 1824.17 969.653 1824.05 969.549 cv
1823.32 968.892 1822.57 968.246 1821.8 967.62 cv
1821.65 967.495 1821.49 967.379 1821.34 967.255 cv
1820.6 966.66 1819.86 966.071 1819.09 965.505 cv
1818.9 965.363 1818.7 965.231 1818.51 965.093 cv
1817.78 964.557 1817.04 964.027 1816.28 963.516 cv
1816.05 963.362 1815.81 963.219 1815.58 963.067 cv
1814.85 962.589 1814.12 962.113 1813.37 961.661 cv
1813.1 961.495 1812.82 961.344 1812.54 961.183 cv
1811.82 960.76 1811.1 960.339 1810.37 959.94 cv
1810.05 959.768 1809.73 959.612 1809.41 959.445 cv
1808.7 959.077 1808 958.707 1807.28 958.361 cv
1806.91 958.187 1806.54 958.029 1806.17 957.859 cv
1805.49 957.544 1804.8 957.223 1804.1 956.928 cv
1803.69 956.754 1803.27 956.6 1802.86 956.435 cv
1802.19 956.167 1801.52 955.894 1800.85 955.646 cv
1800.39 955.478 1799.93 955.332 1799.46 955.175 cv
1798.82 954.953 1798.17 954.721 1797.52 954.518 cv
1797.02 954.362 1796.51 954.23 1796.01 954.087 cv
1795.38 953.905 1794.75 953.715 1794.11 953.55 cv
1793.56 953.409 1793 953.292 1792.45 953.163 cv
1791.85 953.024 1791.25 952.873 1790.65 952.749 cv
1790.03 952.623 1789.41 952.524 1788.79 952.415 cv
1788.23 952.315 1787.68 952.202 1787.12 952.116 cv
1786.44 952.013 1785.76 951.94 1785.08 951.856 cv
1784.56 951.791 1784.05 951.711 1783.53 951.659 cv
1782.75 951.58 1781.97 951.533 1781.18 951.479 cv
1780.75 951.448 1780.33 951.402 1779.89 951.381 cv
1778.67 951.319 1777.44 951.287 1776.21 951.287 cv
1271.44 951.287 li
1126.33 951.287 li
1126.33 1022.53 li
1126.33 1095.7 li
1271.44 1095.7 li
1776.21 1095.7 li
1815.92 1095.7 1848.41 1063.21 1848.41 1023.5 cv
1848.41 1007.17 1842.92 992.074 1833.69 979.944 cv
1833.65 979.885 li
f
852.593 1199.35 mo
851.945 1198.41 851.275 1197.48 850.584 1196.57 cv
850.53 1196.5 li
849.853 1195.62 849.158 1194.74 848.442 1193.89 cv
848.328 1193.76 li
847.628 1192.92 846.914 1192.11 846.178 1191.31 cv
845.995 1191.12 li
845.277 1190.34 844.547 1189.58 843.796 1188.84 cv
843.529 1188.59 li
842.799 1187.87 842.06 1187.17 841.3 1186.48 cv
841.182 1186.38 841.059 1186.28 840.94 1186.17 cv
840.202 1185.52 839.458 1184.87 838.694 1184.25 cv
838.543 1184.12 838.386 1184.01 838.234 1183.88 cv
837.493 1183.29 836.747 1182.7 835.983 1182.13 cv
835.794 1181.99 835.597 1181.86 835.407 1181.72 cv
834.67 1181.18 833.928 1180.65 833.171 1180.14 cv
832.941 1179.99 832.704 1179.85 832.474 1179.7 cv
831.743 1179.22 831.01 1178.74 830.261 1178.29 cv
829.99 1178.12 829.709 1177.97 829.435 1177.81 cv
828.715 1177.39 827.994 1176.97 827.259 1176.57 cv
826.945 1176.4 826.623 1176.24 826.308 1176.08 cv
825.598 1175.71 824.89 1175.34 824.167 1174.99 cv
823.81 1174.82 823.444 1174.66 823.083 1174.5 cv
822.389 1174.18 821.698 1173.85 820.992 1173.55 cv
820.589 1173.38 820.175 1173.23 819.769 1173.07 cv
819.093 1172.8 818.422 1172.52 817.736 1172.27 cv
817.288 1172.11 816.829 1171.96 816.376 1171.81 cv
815.721 1171.59 815.07 1171.35 814.406 1171.14 cv
813.907 1170.99 813.4 1170.86 812.897 1170.71 cv
812.268 1170.53 811.642 1170.34 811.005 1170.18 cv
810.454 1170.03 809.893 1169.92 809.338 1169.79 cv
808.738 1169.65 808.143 1169.5 807.537 1169.38 cv
806.932 1169.25 806.319 1169.15 805.709 1169.05 cv
805.142 1168.95 804.579 1168.83 804.008 1168.74 cv
803.331 1168.64 802.645 1168.57 801.961 1168.48 cv
801.447 1168.42 800.939 1168.34 800.422 1168.29 cv
799.636 1168.2 798.841 1168.16 798.048 1168.1 cv
797.625 1168.07 797.207 1168.03 796.782 1168.01 cv
795.562 1167.94 794.332 1167.91 793.097 1167.91 cv
712.457 1167.91 li
143.22 1167.91 li
143.22 1239.16 li
143.22 1312.33 li
712.457 1312.33 li
793.097 1312.33 li
832.812 1312.33 865.306 1279.84 865.306 1240.12 cv
865.306 1225.02 860.601 1210.98 852.599 1199.36 cv
852.593 1199.35 li
f
1805.09 1601.16 mo
1245.07 1601.16 li
1169.65 1601.16 li
1145.82 1601.16 1126.33 1620.66 1126.33 1644.49 cv
1126.33 1673.37 li
1126.33 1702.26 li
1126.33 1726.09 1145.82 1745.58 1169.65 1745.58 cv
1245.07 1745.58 li
1805.09 1745.58 li
1828.92 1745.58 1848.41 1726.09 1848.41 1702.26 cv
1848.41 1673.37 li
1848.41 1644.49 li
1848.41 1620.66 1828.92 1601.16 1805.09 1601.16 cv
cp
f
856.018 487.678 mo
249.466 487.678 li
249.466 632.096 li
856.018 632.096 li
863.96 632.096 870.459 625.596 870.459 617.653 cv
870.459 502.12 li
870.459 494.177 863.96 487.678 856.018 487.678 cv
.478431 .862745 .772549 rgb
f
162.815 487.678 mo
154.873 487.678 148.374 494.177 148.374 502.12 cv
148.374 617.653 li
148.374 625.596 154.873 632.096 162.815 632.096 cv
249.466 632.096 li
249.466 487.678 li
162.815 487.678 li
.423529 .203922 .14902 rgb
f
177.979 600.821 mo
176.616 600.821 175.256 600.284 174.244 599.218 cv
172.282 597.156 172.364 593.894 174.427 591.932 cv
206.606 561.331 li
174.426 530.726 li
172.364 528.765 172.282 525.503 174.244 523.44 cv
176.205 521.379 179.467 521.297 181.53 523.257 cv
217.637 557.597 li
218.66 558.569 219.239 559.919 219.239 561.331 cv
219.239 562.743 218.66 564.093 217.636 565.065 cv
181.529 599.401 li
180.533 600.35 179.255 600.821 177.979 600.821 cv
0 0 0 rgb
f
180.867 599.376 mo
179.504 599.376 178.144 598.839 177.131 597.773 cv
175.17 595.711 175.252 592.449 177.314 590.487 cv
209.495 559.887 li
177.314 529.283 li
175.252 527.321 175.17 524.059 177.132 521.997 cv
179.093 519.935 182.354 519.853 184.418 521.813 cv
220.525 556.152 li
221.548 557.125 222.127 558.474 222.127 559.887 cv
222.127 561.298 221.548 562.649 220.525 563.621 cv
184.417 597.957 li
183.42 598.905 182.143 599.376 180.867 599.376 cv
.972549 .972549 .972549 rgb
f
856.018 487.678 mo
249.466 487.678 li
162.815 487.678 li
154.873 487.678 148.374 494.177 148.374 502.12 cv
148.374 617.653 li
148.374 625.596 154.873 632.096 162.815 632.096 cv
249.466 632.096 li
856.018 632.096 li
863.96 632.096 870.459 625.596 870.459 617.653 cv
870.459 502.12 li
870.459 494.177 863.96 487.678 856.018 487.678 cv
856.018 494.899 mo
860 494.899 863.238 498.138 863.238 502.12 cv
863.238 617.653 li
863.238 621.634 860 624.875 856.018 624.875 cv
249.466 624.875 li
162.815 624.875 li
158.834 624.875 155.595 621.634 155.595 617.653 cv
155.595 502.12 li
155.595 498.138 158.834 494.899 162.815 494.899 cv
249.466 494.899 li
856.018 494.899 li
0 .258824 .341176 rgb
f
856.018 623.431 mo
859.205 623.431 861.794 620.838 861.794 617.653 cv
861.794 502.12 li
861.794 498.933 859.205 496.344 856.018 496.344 cv
162.815 496.344 li
159.63 496.344 157.038 498.935 157.038 502.12 cv
157.038 617.653 li
157.038 620.838 159.63 623.431 162.815 623.431 cv
856.018 623.431 li
162.815 493.455 mo
856.018 493.455 li
860.796 493.455 864.682 497.342 864.682 502.12 cv
864.682 617.653 li
864.682 622.432 860.796 626.32 856.018 626.32 cv
162.815 626.32 li
158.037 626.32 154.151 622.432 154.151 617.653 cv
154.151 502.12 li
154.151 497.342 158.037 493.455 162.815 493.455 cv
.129412 .678431 .619608 rgb
f
813.868 847.286 mo
866.247 794.907 li
869.055 792.101 870.459 788.403 870.459 784.704 cv
870.459 784.688 li
870.459 780.989 869.055 777.291 866.247 774.483 cv
816.323 724.559 li
816.323 724.559 813.607 721.843 810.286 718.523 cv
806.967 715.204 798.293 712.489 791.011 712.489 cv
783.727 712.489 771.269 712.489 763.325 712.489 cv
758.872 712.489 li
750.929 712.489 737.931 712.489 729.988 712.489 cv
162.815 712.489 li
154.873 712.489 148.374 718.987 148.374 726.929 cv
148.374 842.464 li
148.374 850.407 154.873 856.906 162.815 856.906 cv
729.988 856.906 li
737.931 856.906 750.929 856.906 758.872 856.906 cv
763.325 856.906 li
771.269 856.906 783.727 856.906 791.011 856.906 cv
798.293 856.906 806.414 854.741 809.059 852.095 cv
811.705 849.451 813.868 847.286 813.868 847.286 cv
.952941 .784314 .388235 rgb
f
162.815 856.906 mo
249.934 856.906 li
249.934 712.489 li
162.815 712.489 li
154.873 712.489 148.374 718.987 148.374 726.929 cv
148.374 842.464 li
148.374 850.407 154.873 856.906 162.815 856.906 cv
.658824 .360784 .466667 rgb
f
190.7 759.111 mo
185.868 759.111 181.326 760.993 177.911 764.409 cv
170.858 771.462 170.858 782.937 177.911 789.992 cv
181.326 793.407 185.868 795.287 190.7 795.287 cv
195.531 795.287 200.073 793.407 203.489 789.99 cv
206.906 786.573 208.787 782.031 208.787 777.199 cv
208.787 772.368 206.906 767.825 203.489 764.409 cv
200.073 760.993 195.531 759.111 190.7 759.111 cv
190.7 803.533 mo
183.667 803.533 177.054 800.795 172.08 795.822 cv
161.812 785.552 161.812 768.846 172.08 758.578 cv
177.054 753.605 183.667 750.866 190.7 750.866 cv
197.734 750.866 204.347 753.605 209.32 758.578 cv
214.294 763.552 217.033 770.165 217.033 777.199 cv
217.033 784.234 214.294 790.847 209.32 795.821 cv
204.346 800.795 197.734 803.533 190.7 803.533 cv
0 0 0 rgb
f
232.118 822.741 mo
231.063 822.741 230.007 822.339 229.202 821.534 cv
203.489 795.822 li
201.879 794.211 201.879 791.602 203.489 789.991 cv
205.099 788.382 207.709 788.381 209.32 789.991 cv
235.033 815.702 li
236.643 817.313 236.643 819.923 235.033 821.534 cv
234.228 822.339 233.172 822.741 232.118 822.741 cv
cp
f
193.588 757.668 mo
188.758 757.668 184.215 759.55 180.799 762.966 cv
173.747 770.017 173.747 781.493 180.799 788.548 cv
184.215 791.962 188.758 793.843 193.588 793.843 cv
198.42 793.843 202.961 791.962 206.377 788.547 cv
209.794 785.13 211.676 780.587 211.676 775.756 cv
211.676 770.924 209.794 766.382 206.377 762.966 cv
202.961 759.55 198.42 757.668 193.588 757.668 cv
193.588 802.089 mo
186.554 802.089 179.942 799.351 174.968 794.378 cv
164.701 784.109 164.702 767.401 174.968 757.135 cv
179.942 752.161 186.555 749.422 193.588 749.422 cv
200.622 749.422 207.235 752.161 212.208 757.135 cv
217.183 762.108 219.922 768.722 219.922 775.756 cv
219.922 782.79 217.183 789.403 212.208 794.377 cv
207.234 799.351 200.622 802.089 193.588 802.089 cv
.972549 .972549 .972549 rgb
f
235.005 821.296 mo
233.951 821.296 232.896 820.894 232.091 820.088 cv
206.377 794.378 li
204.767 792.768 204.767 790.157 206.377 788.547 cv
207.989 786.937 210.6 786.938 212.208 788.547 cv
237.921 814.258 li
239.531 815.868 239.531 818.478 237.921 820.088 cv
237.116 820.894 236.061 821.296 235.005 821.296 cv
cp
f
791.011 712.489 mo
783.727 712.489 771.269 712.489 763.325 712.489 cv
758.872 712.489 li
750.929 712.489 737.931 712.489 729.988 712.489 cv
162.815 712.489 li
154.873 712.489 148.374 718.987 148.374 726.929 cv
148.374 842.464 li
148.374 850.407 154.873 856.906 162.815 856.906 cv
729.988 856.906 li
737.931 856.906 750.929 856.906 758.872 856.906 cv
763.325 856.906 li
771.269 856.906 783.727 856.906 791.011 856.906 cv
798.293 856.906 806.414 854.741 809.059 852.095 cv
811.705 849.451 813.868 847.286 813.868 847.286 cv
866.247 794.907 li
869.055 792.101 870.459 788.403 870.459 784.704 cv
870.459 784.688 li
870.459 780.989 869.055 777.291 866.247 774.483 cv
816.323 724.559 li
816.323 724.559 813.607 721.843 810.286 718.523 cv
806.967 715.204 798.293 712.489 791.011 712.489 cv
791.011 719.709 mo
797.367 719.709 803.799 722.247 805.181 723.629 cv
811.217 729.667 li
861.14 779.588 li
862.494 780.942 863.238 782.753 863.238 784.701 cv
863.238 786.638 862.494 788.451 861.14 789.803 cv
808.763 842.18 li
804.026 846.919 li
802.749 847.873 797.103 849.684 791.011 849.684 cv
763.325 849.684 li
758.872 849.684 li
729.988 849.684 li
162.815 849.684 li
158.834 849.684 155.595 846.445 155.595 842.464 cv
155.595 726.929 li
155.595 722.947 158.834 719.709 162.815 719.709 cv
729.988 719.709 li
758.872 719.709 li
763.325 719.709 li
791.011 719.709 li
0 .290196 .231373 rgb
f
162.815 721.876 mo
160.029 721.876 157.761 724.141 157.761 726.929 cv
157.761 842.464 li
157.761 845.251 160.029 847.519 162.815 847.519 cv
791.011 847.519 li
796.666 847.519 801.632 845.845 802.637 845.243 cv
859.608 788.271 li
860.553 787.326 861.073 786.059 861.073 784.701 cv
861.073 783.337 860.553 782.065 859.608 781.119 cv
803.65 725.162 li
802.82 724.343 797.013 721.876 791.011 721.876 cv
162.815 721.876 li
791.011 851.851 mo
162.815 851.851 li
157.64 851.851 153.428 847.639 153.428 842.464 cv
153.428 726.929 li
153.428 721.754 157.64 717.543 162.815 717.543 cv
791.011 717.543 li
797.816 717.543 804.857 720.239 806.712 722.098 cv
862.672 778.057 li
864.434 779.82 865.405 782.18 865.405 784.701 cv
865.405 787.218 864.434 789.571 862.672 791.333 cv
805.322 848.652 li
803.579 849.959 797.478 851.851 791.011 851.851 cv
1 1 1 rgb
f
813.868 1497.02 mo
866.247 1444.65 li
869.055 1441.84 870.459 1438.14 870.459 1434.44 cv
870.459 1434.43 li
870.459 1430.73 869.055 1427.03 866.247 1424.22 cv
816.323 1374.3 li
816.323 1374.3 813.607 1371.58 810.286 1368.26 cv
806.967 1364.94 798.293 1362.23 791.011 1362.23 cv
783.727 1362.23 771.269 1362.23 763.325 1362.23 cv
758.872 1362.23 li
750.929 1362.23 737.931 1362.23 729.988 1362.23 cv
162.815 1362.23 li
154.873 1362.23 148.374 1368.73 148.374 1376.67 cv
148.374 1492.2 li
148.374 1500.15 154.873 1506.64 162.815 1506.64 cv
729.988 1506.64 li
737.931 1506.64 750.929 1506.64 758.872 1506.64 cv
763.325 1506.64 li
771.269 1506.64 783.727 1506.64 791.011 1506.64 cv
798.293 1506.64 806.414 1504.48 809.059 1501.83 cv
811.705 1499.19 813.868 1497.02 813.868 1497.02 cv
.721569 .909804 .721569 rgb
f
162.815 1506.64 mo
249.934 1506.64 li
249.934 1362.23 li
162.815 1362.23 li
154.873 1362.23 148.374 1368.73 148.374 1376.67 cv
148.374 1492.2 li
148.374 1500.15 154.873 1506.64 162.815 1506.64 cv
0 .258824 .341176 rgb
f
791.011 1362.23 mo
783.727 1362.23 771.269 1362.23 763.325 1362.23 cv
758.872 1362.23 li
750.929 1362.23 737.931 1362.23 729.988 1362.23 cv
162.815 1362.23 li
154.873 1362.23 148.374 1368.73 148.374 1376.67 cv
148.374 1492.2 li
148.374 1500.15 154.873 1506.64 162.815 1506.64 cv
729.988 1506.64 li
737.931 1506.64 750.929 1506.64 758.872 1506.64 cv
763.325 1506.64 li
771.269 1506.64 783.727 1506.64 791.011 1506.64 cv
798.293 1506.64 806.414 1504.48 809.059 1501.83 cv
811.705 1499.19 813.868 1497.02 813.868 1497.02 cv
866.247 1444.65 li
869.055 1441.84 870.459 1438.14 870.459 1434.44 cv
870.459 1434.43 li
870.459 1430.73 869.055 1427.03 866.247 1424.22 cv
816.323 1374.3 li
816.323 1374.3 813.607 1371.58 810.286 1368.26 cv
806.967 1364.94 798.293 1362.23 791.011 1362.23 cv
791.011 1369.45 mo
797.367 1369.45 803.799 1371.99 805.181 1373.37 cv
811.217 1379.41 li
861.14 1429.33 li
862.494 1430.68 863.238 1432.49 863.238 1434.44 cv
863.238 1436.38 862.494 1438.19 861.14 1439.54 cv
808.763 1491.92 li
804.026 1496.66 li
802.749 1497.61 797.103 1499.42 791.011 1499.42 cv
763.325 1499.42 li
758.872 1499.42 li
729.988 1499.42 li
162.815 1499.42 li
158.834 1499.42 155.595 1496.18 155.595 1492.2 cv
155.595 1376.67 li
155.595 1372.68 158.834 1369.45 162.815 1369.45 cv
729.988 1369.45 li
758.872 1369.45 li
763.325 1369.45 li
791.011 1369.45 li
.423529 .203922 .14902 rgb
f
162.815 1371.61 mo
160.029 1371.61 157.761 1373.88 157.761 1376.67 cv
157.761 1492.2 li
157.761 1494.99 160.029 1497.26 162.815 1497.26 cv
791.011 1497.26 li
796.666 1497.26 801.632 1495.58 802.637 1494.98 cv
859.608 1438.01 li
860.553 1437.06 861.073 1435.8 861.073 1434.44 cv
861.073 1433.08 860.553 1431.8 859.608 1430.86 cv
803.65 1374.9 li
802.82 1374.08 797.013 1371.61 791.011 1371.61 cv
162.815 1371.61 li
791.011 1501.59 mo
162.815 1501.59 li
157.64 1501.59 153.428 1497.38 153.428 1492.2 cv
153.428 1376.67 li
153.428 1371.49 157.64 1367.28 162.815 1367.28 cv
791.011 1367.28 li
797.816 1367.28 804.857 1369.98 806.712 1371.84 cv
862.672 1427.8 li
864.434 1429.56 865.405 1431.92 865.405 1434.44 cv
865.405 1436.96 864.434 1439.31 862.672 1441.07 cv
805.322 1498.39 li
803.579 1499.7 797.478 1501.59 791.011 1501.59 cv
1 1 1 rgb
f
227.392 1464.7 mo
226.337 1464.7 225.282 1464.29 224.477 1463.49 cv
175.091 1414.1 li
173.481 1412.49 173.481 1409.88 175.091 1408.27 cv
176.702 1406.66 179.313 1406.66 180.923 1408.27 cv
230.308 1457.66 li
231.919 1459.27 231.919 1461.88 230.308 1463.49 cv
229.502 1464.29 228.448 1464.7 227.392 1464.7 cv
0 0 0 rgb
f
178.01 1464.7 mo
176.954 1464.7 175.899 1464.29 175.093 1463.49 cv
173.483 1461.88 173.483 1459.27 175.093 1457.66 cv
224.479 1408.27 li
226.09 1406.66 228.7 1406.66 230.31 1408.27 cv
231.921 1409.88 231.921 1412.49 230.31 1414.1 cv
180.925 1463.49 li
180.12 1464.29 179.064 1464.7 178.01 1464.7 cv
f
230.282 1463.25 mo
229.226 1463.25 228.171 1462.85 227.365 1462.04 cv
177.981 1412.66 li
176.371 1411.05 176.371 1408.44 177.981 1406.83 cv
179.592 1405.22 182.201 1405.22 183.811 1406.83 cv
233.197 1456.21 li
234.807 1457.82 234.807 1460.43 233.197 1462.04 cv
232.392 1462.85 231.336 1463.25 230.282 1463.25 cv
.972549 .972549 .972549 rgb
f
180.897 1463.25 mo
179.842 1463.25 178.786 1462.85 177.982 1462.04 cv
176.372 1460.43 176.372 1457.82 177.982 1456.21 cv
227.367 1406.83 li
228.978 1405.22 231.588 1405.22 233.198 1406.83 cv
234.808 1408.44 234.808 1411.05 233.198 1412.66 cv
183.812 1462.04 li
183.007 1462.85 181.953 1463.25 180.897 1463.25 cv
f
870.459 363.822 mo
870.459 387.65 850.963 407.147 827.134 407.147 cv
191.7 407.147 li
167.871 407.147 148.374 387.65 148.374 363.822 cv
148.374 306.055 li
148.374 282.226 167.871 262.729 191.7 262.729 cv
827.134 262.729 li
850.963 262.729 870.459 282.226 870.459 306.055 cv
870.459 363.822 li
.960784 .462745 .423529 rgb
f
178.859 341.524 mo
177.803 341.524 176.748 341.122 175.943 340.317 cv
174.332 338.707 174.332 336.096 175.943 334.486 cv
217.714 292.713 li
219.324 291.102 221.935 291.103 223.544 292.713 cv
265.323 334.486 li
266.933 336.096 266.933 338.706 265.323 340.317 cv
263.713 341.927 261.102 341.926 259.492 340.317 cv
220.629 301.458 li
181.774 340.317 li
180.969 341.122 179.913 341.524 178.859 341.524 cv
0 0 0 rgb
f
250.982 379.628 mo
190.283 379.628 li
188.005 379.628 186.16 377.782 186.16 375.505 cv
186.16 341.673 li
186.16 339.396 188.005 337.55 190.283 337.55 cv
192.559 337.55 194.405 339.396 194.405 341.673 cv
194.405 371.382 li
246.859 371.382 li
246.859 341.673 li
246.859 339.396 248.705 337.55 250.982 337.55 cv
253.259 337.55 255.105 339.396 255.105 341.673 cv
255.105 375.505 li
255.105 377.782 253.259 379.628 250.982 379.628 cv
f
222.113 345.189 mo
219.15 345.189 li
209.684 345.189 li
209.684 377.135 li
219.15 377.135 li
222.113 377.135 li
231.58 377.135 li
231.58 345.189 li
222.113 345.189 li
.972549 .972549 .972549 rgb
f
210.2 376.62 mo
231.064 376.62 li
231.064 345.704 li
210.2 345.704 li
210.2 376.62 li
232.095 377.65 mo
209.169 377.65 li
209.169 344.673 li
232.095 344.673 li
232.095 377.65 li
0 0 0 rgb
f
265.296 340.08 mo
264.241 340.08 263.186 339.677 262.381 338.872 cv
223.518 300.014 li
184.663 338.872 li
183.053 340.482 180.442 340.481 178.832 338.872 cv
177.222 337.262 177.222 334.651 178.832 333.041 cv
220.603 291.269 li
222.213 289.658 224.824 289.659 226.434 291.268 cv
268.211 333.041 li
269.822 334.651 269.822 337.262 268.211 338.871 cv
267.407 339.677 266.351 340.08 265.296 340.08 cv
.972549 .972549 .972549 rgb
f
253.871 378.184 mo
193.171 378.184 li
190.894 378.184 189.047 376.338 189.047 374.061 cv
189.047 340.229 li
189.047 337.952 190.894 336.106 193.171 336.106 cv
195.447 336.106 197.294 337.952 197.294 340.229 cv
197.294 369.938 li
249.748 369.938 li
249.748 340.229 li
249.748 337.952 251.595 336.106 253.871 336.106 cv
256.148 336.106 257.994 337.952 257.994 340.229 cv
257.994 374.061 li
257.994 376.338 256.148 378.184 253.871 378.184 cv
f
225.003 343.745 mo
222.039 343.745 li
212.573 343.745 li
212.573 375.692 li
222.039 375.692 li
225.003 375.692 li
234.467 375.692 li
234.467 343.745 li
225.003 343.745 li
f
827.134 262.729 mo
191.7 262.729 li
167.871 262.729 148.374 282.226 148.374 306.055 cv
148.374 363.822 li
148.374 387.65 167.871 407.147 191.7 407.147 cv
827.134 407.147 li
850.963 407.147 870.459 387.65 870.459 363.822 cv
870.459 306.055 li
870.459 282.226 850.963 262.729 827.134 262.729 cv
827.134 269.95 mo
847.043 269.95 863.238 286.147 863.238 306.055 cv
863.238 363.822 li
863.238 383.729 847.043 399.925 827.134 399.925 cv
191.7 399.925 li
171.792 399.925 155.596 383.729 155.596 363.822 cv
155.596 306.055 li
155.596 286.147 171.792 269.95 191.7 269.95 cv
827.134 269.95 li
0 .258824 .341176 rgb
f
191.7 272.116 mo
172.986 272.116 157.761 287.34 157.761 306.055 cv
157.761 363.822 li
157.761 382.535 172.986 397.76 191.7 397.76 cv
827.134 397.76 li
845.849 397.76 861.073 382.535 861.073 363.822 cv
861.073 306.055 li
861.073 287.34 845.849 272.116 827.134 272.116 cv
191.7 272.116 li
827.134 402.092 mo
191.7 402.092 li
170.597 402.092 153.43 384.924 153.43 363.822 cv
153.43 306.055 li
153.43 284.951 170.597 267.784 191.7 267.784 cv
827.134 267.784 li
848.238 267.784 865.405 284.951 865.405 306.055 cv
865.405 363.822 li
865.405 384.924 848.238 402.092 827.134 402.092 cv
.945098 .760784 .701961 rgb
f
1853.57 407.147 mo
1201.27 407.147 li
1162.73 407.147 1131.48 375.901 1131.48 337.358 cv
1131.48 262.729 li
1783.78 262.729 li
1822.32 262.729 1853.57 293.977 1853.57 332.52 cv
1853.57 407.147 li
level3{
gsave
clp
[-6.31271e-6 -144.418 144.418 -6.31271e-6 1492.53 407.147 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [0 .258824 .341176 ]
/C1 [.231373 .541176 .631373 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-6.31271e-6 -144.418 144.418 -6.31271e-6 1492.53 407.147 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~z!!**$!<N<(!WiH+!s8Z/"9\l3"U,&6"pP8:#6tJ>#RC\A#mgnE$47+I$O[=M$OdFP$k3XT%1WjX%Ls!
[%hB3_&.fEc&J5Tf&eYfj',)#n'GM5q'bqGu()@Z$(Ddl((Dmu+(`=2/)&aD3)B'P6)]Kb:*#ot>*??.
A*Zc@E+!2RI+<VdL+X&!P+sJ3T,9nEX,:"N[,UF`_,pjrc-71)f-RU;j-n$Mn.4H\q.Olnu.k<,$/1`>
'/M/P+/hSb/0/"t30/,(60JP::0etL>1,:XA1G^jE1c.'I2)R6L2E!HP2`EZT3&ilW3B9)[3]];_~>
<~6:+"*6UO4.6psF377BX77Rfm<7n6*@84cBE8P2TI91qoN9MA,R9he>W:/4P[:JXe`:f("d;,U:i;H$Lm
<)cgr<E3%!<`W7&='&I*=BJ^/=]np3>$G38>?kE<?!U`A?=$rE?XI/J?smAN@:<VS@U`hW@q9+\A7]=`
AnGXeB4kjiBP;'nBk_9rC2.O"CMRa&Ci+$+D/O6/Df9Q4E,]c8EH,u=EcQ2AF)uGFFEDYJF`qqOG'A.S
G^+IXH$O[\H?smaH[C*eI!g?jI=6QnIXcisIt3'"J:W9&JqAT+K7ef0KS5#4KnY89L5(J=LPUbBLl$tF
~>
<~='&I)=BJ[.=]nm2>$>-7>?b?;>[:W@?!^iD?XI/I?smAN@:<SR@U`hW@q9+\A7]=`AnGXeB4kjjBP;'n
Bk_<sC2.O"CM[g'Ci+$+DJj?0Df9Q5E,]f:EH-#>EcZ;CF*)MGF`hhLG'8%QGB\7UG^+LZH$O^^H@(!c
I!g<hI=6NmIXZ`qIt*!!J:N3%JV&K*JqJ].KS5#3KnY58L5(G<LPL\ALl$tFM2I1JMi3LON/W^TNK&pX
NfK0]O,oBaOHGZfOckljPEV2oPa%DtQ'IZ$QBml(Q^F/-R$jA1R[T\6S"#n;S=H+?SXl@DSt;RHT:hjM
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
1783.78 262.729 mo
1131.48 262.729 li
1131.48 337.358 li
1131.48 375.901 1162.73 407.147 1201.27 407.147 cv
1853.57 407.147 li
1853.57 332.52 li
1853.57 293.977 1822.32 262.729 1783.78 262.729 cv
1783.78 269.95 mo
1818.28 269.95 1846.35 298.018 1846.35 332.52 cv
1846.35 399.925 li
1201.27 399.925 li
1166.77 399.925 1138.7 371.858 1138.7 337.358 cv
1138.7 269.95 li
1783.78 269.95 li
0 .258824 .341176 rgb
f
1140.87 272.116 mo
1140.87 337.358 li
1140.87 370.664 1167.97 397.76 1201.27 397.76 cv
1844.18 397.76 li
1844.18 332.52 li
1844.18 299.213 1817.08 272.116 1783.78 272.116 cv
1140.87 272.116 li
1848.51 402.092 mo
1201.27 402.092 li
1165.58 402.092 1136.54 373.052 1136.54 337.358 cv
1136.54 267.784 li
1783.78 267.784 li
1819.47 267.784 1848.51 296.823 1848.51 332.52 cv
1848.51 402.092 li
level3{
gsave
clp
[-5.87079e-6 -134.308 134.308 -5.87079e-6 1492.53 402.092 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.121569 .411765 .505882 ]
/C1 [.482353 .72549 .796078 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-5.87079e-6 -134.308 134.308 -5.87079e-6 1492.53 402.092 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~+!2RI+<VgN+X/*S,9nHZ,UF`_-71&e-RU;j.4H\q.Olr!.kE5'/M/S-/h\k20JG180etL>1G^gD1c.'I
2)[?O2`E]U3&ruZ3]]>a4$5Vf4Ztql5!D1q5X7S#5s[h(6:4+.6psI477Ka97n6'?84cBE8kM]K91qrP
9MJ5V:/4S\:Jaka;,L4h;H$Lm<)cgs<E3(#='&I*=BJ^/=^#!5>?b?;>[:W@?=$rF?XR8L@:<SR@U`hW
@q9+]AS#IcAnPahBP;*oBkhBtCMR^%Ci!s*DJj?1Df9T6E,fl<EcQ5BF*)MGF`hhMG'A.SG^+IYH$O^^
~>
<~Bk_9qC2.L!CMRa&Ci+$+DJj?0Df9Q5E,]f:EH6)?F)uDDFEDVIF`hkNG'A.SG^+IXH$O[]H?spbH[L3g
I=6NlIXZ`qIt*!!J:W9&JV&K*K7ef0KS5&5Knb>:L51P>LkpkDM2@+IMMmCNMi<URNK&pXNfK0]O-#Hb
OHGZfP*1ulPEV5qPa.N!Q'R`%Q^=&+R$a;0R@9S5R[]e9S=H+?SXl@DStDXIT:hjMTqS0SU8"EXUSO]]
UnsoaVP^5gVl-JlW2ZbqWN)tuX/i;&XK8P+Xfeh0Y-5%4Yct@:Z*CU?ZEpmDZa@*H[C*EN[^NZS\%&rX
~>
<~JUrB'JqAT,K7ef0KS5&5KnY89L51P>LPUbBM2@(GMMd:LMi3LPN/WaUNK0$ZNfT6^OH>QcOcbchP*1ul
PEV5qPa%GuQ'R`%QC!r)R$a8.R@0J3R[T_8S"#q<S=Q4ASXuFET:_aJTV.sOTqS0SU8"EXUSFW\Unsoa
VP^5fVl-GkW2QYoWMuntWiE,#X/rD(XKAV,Y-+q1YHP.6Yct@:Z*CU?ZEpmDZa@*H[C*EM[^NWR\$riV
\@B)[\[f;_]">Sd]=beh]tM+m^:q=r^V@S"^qde&_8=(+_Sa:/`5KU4`Pog9`l?$=a2c9BaN2KFai_cK
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
1406.07 313.113 mo
1406.07 350.705 li
1426.28 350.705 li
1426.28 356.117 li
1399.21 356.117 li
1399.21 313.113 li
1406.07 313.113 li
1 1 1 rgb
f
1466.74 334.408 mo
1466.74 331.924 1466.43 329.666 1465.82 327.635 cv
1465.21 325.605 1464.31 323.874 1463.13 322.444 cv
1461.94 321.014 1460.47 319.905 1458.72 319.117 cv
1456.96 318.328 1454.94 317.934 1452.66 317.934 cv
1450.29 317.934 1448.23 318.328 1446.46 319.117 cv
1444.7 319.905 1443.22 321.014 1442.04 322.444 cv
1440.86 323.874 1439.97 325.605 1439.38 327.635 cv
1438.79 329.666 1438.49 331.924 1438.49 334.408 cv
1438.49 336.873 1438.79 339.139 1439.41 341.21 cv
1440.02 343.281 1440.91 345.066 1442.1 346.564 cv
1443.28 348.063 1444.75 349.226 1446.51 350.054 cv
1448.26 350.882 1450.29 351.295 1452.6 351.295 cv
1455.06 351.295 1457.19 350.871 1458.97 350.024 cv
1460.76 349.177 1462.22 348.004 1463.38 346.504 cv
1464.53 345.006 1465.38 343.227 1465.92 341.166 cv
1466.46 339.105 1466.74 336.852 1466.74 334.408 cv
1473.66 334.408 mo
1473.66 337.779 1473.18 340.836 1472.22 343.576 cv
1471.27 346.317 1469.89 348.664 1468.08 350.616 cv
1466.28 352.568 1464.07 354.071 1461.46 355.126 cv
1458.84 356.181 1455.89 356.708 1452.6 356.708 cv
1449.11 356.708 1446.05 356.156 1443.41 355.052 cv
1440.78 353.948 1438.59 352.404 1436.83 350.424 cv
1435.08 348.442 1433.76 346.09 1432.88 343.37 cv
1432.01 340.649 1431.57 337.661 1431.57 334.408 cv
1431.57 331.056 1432.03 328.03 1432.96 325.329 cv
1433.89 322.627 1435.25 320.329 1437.04 318.436 cv
1438.84 316.543 1441.05 315.085 1443.67 314.059 cv
1446.29 313.034 1449.29 312.521 1452.66 312.521 cv
1456.03 312.521 1459.02 313.039 1461.63 314.074 cv
1464.25 315.109 1466.44 316.578 1468.21 318.481 cv
1469.99 320.384 1471.34 322.681 1472.26 325.372 cv
1473.19 328.064 1473.66 331.076 1473.66 334.408 cv
f
1515.95 352.168 mo
1514.73 353.066 1513.36 353.849 1511.84 354.52 cv
1510.32 355.19 1508.66 355.722 1506.87 356.117 cv
1505.08 356.511 1503.16 356.708 1501.13 356.708 cv
1497.66 356.708 1494.65 356.156 1492.08 355.052 cv
1489.52 353.948 1487.39 352.404 1485.69 350.424 cv
1484 348.442 1482.73 346.09 1481.89 343.37 cv
1481.05 340.649 1480.64 337.661 1480.64 334.408 cv
1480.64 331.056 1481.05 328.03 1481.88 325.329 cv
1482.71 322.627 1483.96 320.329 1485.63 318.436 cv
1487.31 316.543 1489.41 315.085 1491.93 314.059 cv
1494.46 313.034 1497.41 312.521 1500.78 312.521 cv
1503.22 312.521 1505.38 312.787 1507.24 313.32 cv
1509.1 313.853 1510.73 314.576 1512.12 315.493 cv
1513.51 316.41 1514.69 317.501 1515.67 318.762 cv
1516.65 320.024 1517.47 321.374 1518.14 322.814 cv
1511.96 325.032 li
1511.52 324.086 1510.99 323.183 1510.35 322.326 cv
1509.7 321.469 1508.93 320.714 1508.02 320.064 cv
1507.12 319.413 1506.07 318.895 1504.87 318.51 cv
1503.68 318.126 1502.32 317.934 1500.78 317.934 cv
1498.47 317.934 1496.49 318.328 1494.83 319.117 cv
1493.18 319.905 1491.81 321.014 1490.72 322.444 cv
1489.64 323.874 1488.84 325.605 1488.33 327.635 cv
1487.81 329.666 1487.56 331.924 1487.56 334.408 cv
1487.56 336.873 1487.84 339.139 1488.41 341.21 cv
1488.99 343.281 1489.84 345.066 1490.97 346.564 cv
1492.11 348.063 1493.52 349.226 1495.22 350.054 cv
1496.91 350.882 1498.88 351.295 1501.13 351.295 cv
1502.55 351.295 1503.86 351.158 1505.05 350.882 cv
1506.24 350.606 1507.33 350.256 1508.3 349.831 cv
1509.28 349.408 1510.15 348.93 1510.91 348.397 cv
1511.67 347.865 1512.3 347.333 1512.81 346.8 cv
1512.81 339.347 li
1501.25 339.347 li
1501.25 334.23 li
1519.11 334.23 li
1519.11 349.344 li
1518.23 350.33 1517.17 351.271 1515.95 352.168 cv
f
1535.88 356.117 mo
1529.02 356.117 li
1529.02 313.113 li
1535.88 313.113 li
1535.88 356.117 li
f
1577.56 356.117 mo
1553.07 320.744 li
1553.19 323.583 1553.25 326.185 1553.25 328.552 cv
1553.25 356.117 li
1547.12 356.117 li
1547.12 313.113 li
1555.14 313.113 li
1579.95 348.722 li
1579.79 345.529 1579.72 342.729 1579.72 340.323 cv
1579.72 313.113 li
1585.81 313.113 li
1585.81 356.117 li
1577.56 356.117 li
f
1853.57 1362.23 mo
1201.27 1362.23 li
1162.73 1362.23 1131.48 1393.47 1131.48 1432.01 cv
1131.48 1506.64 li
1783.78 1506.64 li
1822.32 1506.64 1853.57 1475.4 1853.57 1436.85 cv
1853.57 1362.23 li
.741176 .831373 .85098 rgb
f
1249.82 1362.23 mo
1201.27 1362.23 li
1162.73 1362.23 1131.48 1393.47 1131.48 1432.01 cv
1131.48 1506.64 li
1249.82 1506.64 li
1249.82 1362.23 li
.960784 .462745 .423529 rgb
f
1853.57 1362.23 mo
1201.27 1362.23 li
1162.73 1362.23 1131.48 1393.47 1131.48 1432.01 cv
1131.48 1506.64 li
1783.78 1506.64 li
1822.32 1506.64 1853.57 1475.4 1853.57 1436.85 cv
1853.57 1362.23 li
1846.35 1369.45 mo
1846.35 1436.85 li
1846.35 1471.35 1818.28 1499.42 1783.78 1499.42 cv
1138.7 1499.42 li
1138.7 1432.01 li
1138.7 1397.52 1166.77 1369.45 1201.27 1369.45 cv
1846.35 1369.45 li
0 .290196 .231373 rgb
f
1140.87 1497.26 mo
1783.78 1497.26 li
1817.08 1497.26 1844.18 1470.16 1844.18 1436.85 cv
1844.18 1371.61 li
1201.27 1371.61 li
1167.97 1371.61 1140.87 1398.71 1140.87 1432.01 cv
1140.87 1497.26 li
1783.78 1501.59 mo
1136.54 1501.59 li
1136.54 1432.01 li
1136.54 1396.32 1165.58 1367.28 1201.27 1367.28 cv
1848.51 1367.28 li
1848.51 1436.85 li
1848.51 1472.55 1819.47 1501.59 1783.78 1501.59 cv
.478431 .862745 .772549 rgb
f
1221.58 1417.38 mo
1212.62 1408.92 1198.08 1408.92 1189.11 1417.38 cv
1189.11 1417.38 li
1189.11 1417.38 li
1180.15 1408.92 1165.61 1408.92 1156.64 1417.38 cv
1147.68 1425.84 1147.68 1439.56 1156.64 1448.02 cv
1189.11 1478.66 li
1221.58 1448.02 li
1230.55 1439.56 1230.55 1425.84 1221.58 1417.38 cv
.176471 .176471 .176471 rgb
f
1224.66 1414.3 mo
1215.69 1405.84 1201.16 1405.84 1192.19 1414.3 cv
1192.19 1414.3 li
1192.19 1414.3 li
1183.23 1405.84 1168.68 1405.84 1159.72 1414.3 cv
1150.75 1422.76 1150.75 1436.48 1159.72 1444.94 cv
1192.19 1475.58 li
1224.66 1444.94 li
1233.62 1436.48 1233.62 1422.76 1224.66 1414.3 cv
1 1 1 rgb
f
1762.64 486.966 mo
1138.49 486.966 li
1134.64 486.966 1131.48 490.119 1131.48 493.976 cv
1131.48 559.173 li
1762.64 559.173 li
1762.64 486.966 li
cp
.945098 .760784 .701961 rgb
f
1138.49 631.383 mo
1762.64 631.383 li
1762.64 559.173 li
1131.48 559.173 li
1131.48 624.372 li
1131.48 628.228 1134.64 631.383 1138.49 631.383 cv
cp
.960784 .462745 .423529 rgb
f
1762.64 486.966 mo
1138.49 486.966 li
1134.64 486.966 1131.48 490.119 1131.48 493.976 cv
1131.48 559.173 li
1131.48 624.372 li
1131.48 628.228 1134.64 631.383 1138.49 631.383 cv
1762.64 631.383 li
1762.64 559.173 li
1762.64 486.966 li
cp
1755.42 494.186 mo
1755.42 559.173 li
1755.42 624.162 li
1138.7 624.162 li
1138.7 559.173 li
1138.7 494.186 li
1755.42 494.186 li
0 .290196 .231373 rgb
f
1692.51 559.886 mo
1692.51 515.41 1728.56 479.355 1773.04 479.355 cv
1817.51 479.355 1853.57 515.41 1853.57 559.886 cv
1853.57 604.362 1817.51 640.417 1773.04 640.417 cv
1728.56 640.417 1692.51 604.362 1692.51 559.886 cv
cp
.368627 .341176 .4 rgb
f
1773.04 479.355 mo
1728.56 479.355 1692.51 515.41 1692.51 559.886 cv
1692.51 604.362 1728.56 640.417 1773.04 640.417 cv
1817.51 640.417 1853.57 604.362 1853.57 559.886 cv
1853.57 515.41 1817.51 479.355 1773.04 479.355 cv
cp
1773.04 486.576 mo
1813.46 486.576 1846.35 519.462 1846.35 559.886 cv
1846.35 600.31 1813.46 633.196 1773.04 633.196 cv
1732.61 633.196 1699.73 600.31 1699.73 559.886 cv
1699.73 519.462 1732.61 486.576 1773.04 486.576 cv
.219608 .172549 .231373 rgb
f
1815.2 556.26 mo
1808.42 549.489 li
1805.34 546.403 1800.28 541.347 1797.2 538.258 cv
1783.89 524.942 li
1780.8 521.854 1775.74 521.854 1772.66 524.942 cv
1765.88 531.713 li
1762.8 534.801 1762.8 539.856 1765.88 542.943 cv
1771.51 548.566 li
1732.53 548.566 li
1728.17 548.566 1724.59 552.142 1724.59 556.508 cv
1724.59 567.235 li
1724.59 571.601 1728.17 575.178 1732.53 575.178 cv
1771.51 575.178 li
1765.88 580.801 li
1762.8 583.887 1762.8 588.944 1765.88 592.032 cv
1772.66 598.802 li
1775.74 601.89 1780.8 601.89 1783.89 598.802 cv
1797.2 585.485 li
1800.28 582.399 1805.34 577.342 1808.42 574.254 cv
1815.2 567.492 li
1818.28 564.404 1818.28 559.348 1815.2 556.26 cv
cp
.176471 .176471 .176471 rgb
f
1819.17 552.29 mo
1812.4 545.519 li
1809.31 542.432 1804.25 537.375 1801.17 534.289 cv
1787.86 520.971 li
1784.77 517.884 1779.71 517.884 1776.63 520.971 cv
1769.85 527.742 li
1766.77 530.829 1766.77 535.885 1769.85 538.973 cv
1775.48 544.595 li
1736.51 544.595 li
1732.14 544.595 1728.56 548.172 1728.56 552.538 cv
1728.56 563.264 li
1728.56 567.631 1732.14 571.207 1736.51 571.207 cv
1775.48 571.207 li
1769.85 576.83 li
1766.77 579.917 1766.77 584.972 1769.85 588.06 cv
1776.63 594.831 li
1779.71 597.918 1784.77 597.918 1787.86 594.831 cv
1801.17 581.515 li
1804.25 578.428 1809.31 573.37 1812.4 570.283 cv
1819.17 563.521 li
1822.25 560.433 1822.25 555.377 1819.17 552.29 cv
cp
1 1 1 rgb
f
266.253 1578.85 mo
266.253 1651.06 li
870.459 1651.06 li
870.459 1578.85 li
266.253 1578.85 li
cp
.721569 .909804 .721569 rgb
f
266.253 1723.27 mo
870.459 1723.27 li
870.459 1651.06 li
266.253 1651.06 li
266.253 1723.27 li
cp
.588235 .819608 .509804 rgb
f
266.253 1578.85 mo
161.688 1578.85 li
151.198 1578.85 148.374 1585.16 148.374 1592.87 cv
148.374 1651.06 li
148.374 1709.25 li
148.374 1716.96 151.198 1723.27 161.688 1723.27 cv
266.253 1723.27 li
266.253 1651.06 li
266.253 1578.85 li
cp
.960784 .568627 .231373 rgb
f
870.459 1578.85 mo
344.872 1578.85 li
167.451 1578.85 li
156.96 1578.85 148.374 1585.16 148.374 1592.87 cv
148.374 1651.06 li
148.374 1709.25 li
148.374 1716.96 156.96 1723.27 167.451 1723.27 cv
344.872 1723.27 li
870.459 1723.27 li
870.459 1651.06 li
870.459 1578.85 li
cp
863.238 1586.07 mo
863.238 1651.06 li
863.238 1716.05 li
344.872 1716.05 li
167.451 1716.05 li
160.773 1716.05 155.595 1712.39 155.595 1709.25 cv
155.595 1651.06 li
155.595 1592.87 li
155.595 1589.73 160.773 1586.07 167.451 1586.07 cv
344.872 1586.07 li
863.238 1586.07 li
.423529 .203922 .14902 rgb
f
167.451 1588.24 mo
161.421 1588.24 157.761 1591.46 157.761 1592.87 cv
157.761 1709.25 li
157.761 1710.67 161.421 1713.88 167.451 1713.88 cv
861.073 1713.88 li
861.073 1588.24 li
167.451 1588.24 li
cp
865.405 1718.22 mo
167.451 1718.22 li
159.981 1718.22 153.428 1714.02 153.428 1709.25 cv
153.428 1592.87 li
153.428 1588.1 159.981 1583.91 167.451 1583.91 cv
865.405 1583.91 li
865.405 1718.22 li
cp
.709804 .376471 .2 rgb
f
245.514 1686.2 mo
245.508 1686.21 li
245.507 1686.21 li
239.79 1691.84 233.676 1690.9 233.676 1690.9 cv
233.676 1690.9 216.083 1689.35 193.806 1667.08 cv
171.524 1644.8 169.977 1627.2 169.977 1627.2 cv
169.977 1627.2 169.041 1621.09 174.675 1615.37 cv
174.669 1615.37 li
174.685 1615.37 li
174.712 1615.34 li
177.475 1612.56 181.811 1614.34 181.811 1614.34 cv
184.526 1615.85 188.275 1618.81 192.057 1622.59 cv
195.837 1626.38 198.805 1630.12 200.303 1632.84 cv
200.303 1632.84 201.235 1633.8 199.951 1638.04 cv
199.476 1639.61 198.194 1640.98 197.649 1641.4 cv
196.831 1642.03 196.017 1642.54 195.23 1642.96 cv
191.804 1645.31 198.113 1655.34 201.828 1659.06 cv
205.543 1662.77 215.566 1669.08 217.917 1665.65 cv
218.334 1664.86 218.84 1664.05 219.479 1663.23 cv
219.899 1662.69 221.272 1661.41 222.837 1660.93 cv
227.08 1659.64 228.042 1660.57 228.042 1660.57 cv
230.753 1662.07 234.505 1665.04 238.285 1668.82 cv
242.07 1672.61 245.036 1676.35 246.534 1679.07 cv
246.534 1679.07 248.318 1683.4 245.541 1686.17 cv
245.514 1686.2 li
cp
.176471 .176471 .176471 rgb
f
248.135 1683.57 mo
248.129 1683.58 li
248.126 1683.58 li
242.41 1689.22 236.297 1688.28 236.297 1688.28 cv
236.297 1688.28 218.701 1686.73 196.425 1664.46 cv
174.146 1642.18 172.597 1624.58 172.597 1624.58 cv
172.597 1624.58 171.66 1618.47 177.294 1612.76 cv
177.29 1612.75 li
177.304 1612.75 li
177.333 1612.72 li
180.095 1609.94 184.432 1611.72 184.432 1611.72 cv
187.147 1613.23 190.896 1616.19 194.676 1619.97 cv
198.456 1623.75 201.425 1627.5 202.925 1630.22 cv
202.925 1630.22 203.855 1631.18 202.573 1635.42 cv
202.096 1636.99 200.814 1638.36 200.269 1638.78 cv
199.452 1639.42 198.638 1639.92 197.851 1640.34 cv
194.424 1642.7 200.734 1652.72 204.45 1656.44 cv
208.164 1660.14 218.185 1666.46 220.537 1663.03 cv
220.954 1662.24 221.461 1661.43 222.097 1660.61 cv
222.521 1660.07 223.891 1658.78 225.458 1658.31 cv
229.7 1657.02 230.662 1657.96 230.662 1657.96 cv
233.374 1659.46 237.126 1662.42 240.905 1666.2 cv
244.689 1669.99 247.654 1673.73 249.155 1676.45 cv
249.155 1676.45 250.938 1680.78 248.163 1683.55 cv
248.135 1683.57 li
cp
1 1 1 rgb
f
870.459 1867.93 mo
870.459 1907.65 837.966 1940.14 798.251 1940.14 cv
220.583 1940.14 li
180.868 1940.14 148.374 1907.65 148.374 1867.93 cv
148.374 1828.22 180.868 1795.72 220.583 1795.72 cv
798.251 1795.72 li
837.966 1795.72 870.459 1828.22 870.459 1867.93 cv
level3{
gsave
clp
[-6.31267e-6 144.417 -144.417 -6.31267e-6 509.417 1795.72 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.568627 .560784 .690196 ]
/C1 [.368627 .341176 .431373 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-6.31267e-6 144.417 -144.417 -6.31267e-6 509.417 1795.72 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~OcYZdOH>NaO,o?^NfK-[NK&pWNJrgTN/W[QMi3LNMMd:KM2@(GM26tDLkphALPLY>L5(G;KnY57KnP,4
KS4u1K7ef.JqAT+JUrB'JUi9$J:N-!It)rsIXZ`pI=6NlI=-EiI!g9fH[C*cH?sm`H$O[\H$FRYG^+FV
GB\7SG'8%PF`hhLF`__IFEDSFF)uDCEcQ2@EH,u<EH#l9E,]`6Df9Q3DJj?0D/F-,D/=$)Ci!m&CMR^#
C2.KuBk_9qBkV0nBP;$kB4kjhAnGXeAS#FaARo=^A7T1[@q0"X@U`eU@:<SQ@:3JN?sm>K?XI/H?=$rE
~>
<~O,f6\NfB$XNK&mUN/W[QMi3LNMMd:JM2@(GLkpkCLPLY?LPCP<L5(D9KnY25KS5#2K7ef.JqAT+JUrB'
J:N0#J:E&uIt)orIXZ]nI=6NkI!g<gH[C*dH?sm`H?jd]H$FRYG^+FVGB\4RG'8%OF`hhKFEDVHF)uDD
F)l;AEcH)=EH,r:E,]`6Df9Q3DJj?/D/F-,Ci!p(Chmg%CMIU!C2.HsBk_6oBP;'lB4kjhAnGXeAS#Fa
ARo=^A7K+Z@q/tW@U`bS@:<SP?smAL?XI/I?=$rE?<piB?!LW>>[1K;>?b97>$>*4=]nm0=BJ[-='&I)
~>
<~Yck76Y-+q1Xf\_-XK8M)X/i;%WiE)!WMukrW2QYnVl-GiVP^5eV5:#aUnjf]USFTYU8"BUTqS0QTV.sM
T:_^HSt;LDSXl:@S=H(<S"#k8R[TY4R@0G0R$a5,Q^3r'QBd`#Q'@MtP`q;pPEM)lP*(lhOcYZdOH5H`
NfK-[NK&pWN/W^SMi3LOMMd:KM2@(GLkpkCLPLY?L5(G:KnY56KS5#2K7ef.JqAT*JUrB&J:N0"It)rs
IXZ]nI=6KjI!g9fH[C'bH?sj^H$OXZG^+FVGB\4RG'.qMF`__IFE;MEF)l;AEcH)=EH#l9E,TZ5Df0H1
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
798.251 1795.72 mo
220.583 1795.72 li
180.868 1795.72 148.374 1828.22 148.374 1867.93 cv
148.374 1907.65 180.868 1940.14 220.583 1940.14 cv
798.251 1940.14 li
837.966 1940.14 870.459 1907.65 870.459 1867.93 cv
870.459 1828.22 837.966 1795.72 798.251 1795.72 cv
798.251 1802.94 mo
834.087 1802.94 863.238 1832.1 863.238 1867.93 cv
863.238 1903.77 834.087 1932.92 798.251 1932.92 cv
220.583 1932.92 li
184.747 1932.92 155.595 1903.77 155.595 1867.93 cv
155.595 1832.1 184.747 1802.94 220.583 1802.94 cv
798.251 1802.94 li
.121569 .188235 .239216 rgb
f
220.583 1805.11 mo
185.942 1805.11 157.761 1833.29 157.761 1867.93 cv
157.761 1902.57 185.942 1930.75 220.583 1930.75 cv
798.251 1930.75 li
832.891 1930.75 861.073 1902.57 861.073 1867.93 cv
861.073 1833.29 832.891 1805.11 798.251 1805.11 cv
220.583 1805.11 li
798.251 1935.09 mo
220.583 1935.09 li
183.553 1935.09 153.428 1904.96 153.428 1867.93 cv
153.428 1830.91 183.553 1800.78 220.583 1800.78 cv
798.251 1800.78 li
835.28 1800.78 865.405 1830.91 865.405 1867.93 cv
865.405 1904.96 835.28 1935.09 798.251 1935.09 cv
.568627 .560784 .690196 rgb
f
759.87 1875.42 mo
796.237 1924.37 li
796.237 1795.72 li
723.506 1795.72 li
723.506 1924.37 li
759.87 1875.42 li
1 .933333 .576471 rgb
f
723.506 1795.72 mo
723.506 1924.37 li
759.87 1875.42 li
796.237 1924.37 li
796.237 1795.72 li
792.641 1795.72 li
792.641 1914.9 li
762.843 1873.5 li
762.174 1872.57 761.061 1872.01 759.87 1872.01 cv
758.68 1872.01 757.567 1872.57 756.897 1873.5 cv
727.103 1914.9 li
727.103 1795.72 li
723.506 1795.72 li
.937255 .827451 .207843 rgb
f
796.237 1799.92 mo
796.237 1794.95 li
792.641 1794.95 li
727.103 1794.95 li
723.506 1794.95 li
723.506 1799.92 li
796.237 1799.92 li
f
870.459 118.45 mo
870.459 158.166 837.966 190.658 798.251 190.658 cv
220.583 190.658 li
180.868 190.658 148.374 158.166 148.374 118.45 cv
148.374 78.7358 180.868 46.2412 220.583 46.2412 cv
798.251 46.2412 li
837.966 46.2412 870.459 78.7358 870.459 118.45 cv
.890196 .909804 .588235 rgb
f
798.251 46.2412 mo
731.754 46.2412 li
731.754 190.658 li
798.251 190.658 li
837.966 190.658 870.459 158.166 870.459 118.45 cv
870.459 78.7358 837.966 46.2412 798.251 46.2412 cv
.960784 .568627 .231373 rgb
f
798.251 46.2412 mo
220.583 46.2412 li
180.868 46.2412 148.374 78.7358 148.374 118.45 cv
148.374 158.166 180.868 190.658 220.583 190.658 cv
798.251 190.658 li
837.966 190.658 870.459 158.166 870.459 118.45 cv
870.459 78.7358 837.966 46.2412 798.251 46.2412 cv
798.251 53.463 mo
834.087 53.463 863.238 82.6161 863.238 118.45 cv
863.238 154.285 834.087 183.438 798.251 183.438 cv
220.583 183.438 li
184.747 183.438 155.595 154.285 155.595 118.45 cv
155.595 82.6161 184.747 53.463 220.583 53.463 cv
798.251 53.463 li
0 .290196 .231373 rgb
f
220.583 55.629 mo
185.942 55.629 157.761 83.8097 157.761 118.45 cv
157.761 153.089 185.942 181.272 220.583 181.272 cv
798.251 181.272 li
832.891 181.272 861.073 153.089 861.073 118.45 cv
861.073 83.8097 832.891 55.629 798.251 55.629 cv
220.583 55.629 li
798.251 185.604 mo
220.583 185.604 li
183.553 185.604 153.428 155.478 153.428 118.45 cv
153.428 81.4209 183.553 51.2961 220.583 51.2961 cv
798.251 51.2961 li
835.28 51.2961 865.405 81.4209 865.405 118.45 cv
865.405 155.478 835.28 185.604 798.251 185.604 cv
.721569 .909804 .721569 rgb
f
782.13 133.054 mo
781.001 133.054 779.921 132.591 779.143 131.772 cv
759.571 111.192 li
758.002 109.542 758.067 106.932 759.717 105.364 cv
761.367 103.794 763.976 103.859 765.546 105.51 cv
782.13 122.949 li
798.712 105.51 li
800.283 103.86 802.893 103.795 804.541 105.362 cv
806.191 106.932 806.257 109.542 804.688 111.192 cv
785.118 131.772 li
784.34 132.591 783.26 133.054 782.13 133.054 cv
0 0 0 rgb
f
815.615 161.263 mo
748.644 161.263 li
746.367 161.263 744.521 159.417 744.521 157.14 cv
744.521 138.187 li
744.521 135.91 746.367 134.063 748.644 134.063 cv
750.921 134.063 752.767 135.91 752.767 138.187 cv
752.767 153.017 li
811.492 153.017 li
811.492 138.187 li
811.492 135.91 813.337 134.063 815.615 134.063 cv
817.892 134.063 819.738 135.91 819.738 138.187 cv
819.738 157.14 li
819.738 159.417 817.892 161.263 815.615 161.263 cv
cp
f
782.13 133.02 mo
779.853 133.02 778.007 131.175 778.007 128.898 cv
778.007 81.2051 li
778.007 78.9276 779.853 77.082 782.13 77.082 cv
784.407 77.082 786.253 78.9276 786.253 81.2051 cv
786.253 128.898 li
786.253 131.175 784.407 133.02 782.13 133.02 cv
f
814.903 151.545 mo
748.935 151.545 li
748.935 143.299 li
814.903 143.299 li
814.903 151.545 li
cp
f
785.019 131.611 mo
783.89 131.611 782.81 131.147 782.032 130.329 cv
762.459 109.748 li
760.89 108.098 760.955 105.489 762.605 103.92 cv
764.254 102.351 766.865 102.414 768.434 104.066 cv
785.019 121.504 li
801.601 104.066 li
803.172 102.416 805.781 102.351 807.43 103.919 cv
809.08 105.488 809.146 108.098 807.577 109.748 cv
788.007 130.329 li
787.228 131.147 786.149 131.611 785.019 131.611 cv
.972549 .972549 .972549 rgb
f
818.502 159.818 mo
751.532 159.818 li
749.255 159.818 747.409 157.972 747.409 155.695 cv
747.409 136.742 li
747.409 134.465 749.255 132.619 751.532 132.619 cv
753.809 132.619 755.655 134.465 755.655 136.742 cv
755.655 151.572 li
814.38 151.572 li
814.38 136.742 li
814.38 134.465 816.226 132.619 818.502 132.619 cv
820.78 132.619 822.625 134.465 822.625 136.742 cv
822.625 155.695 li
822.625 157.972 820.78 159.818 818.502 159.818 cv
cp
f
785.019 131.577 mo
782.743 131.577 780.897 129.731 780.897 127.454 cv
780.897 79.7602 li
780.897 77.4841 782.743 75.6371 785.019 75.6371 cv
787.296 75.6371 789.142 77.4841 789.142 79.7602 cv
789.142 127.454 li
789.142 129.731 787.296 131.577 785.019 131.577 cv
f
817.792 150.101 mo
751.822 150.101 li
751.822 141.855 li
817.792 141.855 li
817.792 150.101 li
cp
.960784 .960784 .960784 rgb
f
1131.48 1217.81 mo
1131.48 1178.1 1163.98 1145.6 1203.69 1145.6 cv
1781.36 1145.6 li
1821.08 1145.6 1853.57 1178.1 1853.57 1217.81 cv
1853.57 1257.53 1821.08 1290.02 1781.36 1290.02 cv
1203.69 1290.02 li
1163.98 1290.02 1131.48 1257.53 1131.48 1217.81 cv
.972549 .870588 .631373 rgb
f
1781.36 1280.63 mo
1816 1280.63 1844.18 1252.45 1844.18 1217.81 cv
1844.18 1183.17 1816 1154.99 1781.36 1154.99 cv
1203.69 1154.99 li
1169.05 1154.99 1140.87 1183.17 1140.87 1217.81 cv
1140.87 1252.45 1169.05 1280.63 1203.69 1280.63 cv
1781.36 1280.63 li
1203.69 1150.66 mo
1781.36 1150.66 li
1818.39 1150.66 1848.51 1180.78 1848.51 1217.81 cv
1848.51 1254.84 1818.39 1284.96 1781.36 1284.96 cv
1203.69 1284.96 li
1166.66 1284.96 1136.54 1254.84 1136.54 1217.81 cv
1136.54 1180.78 1166.66 1150.66 1203.69 1150.66 cv
.945098 .764706 .345098 rgb
f
1255.43 1217.81 mo
1304.38 1181.45 li
1141.39 1181.45 li
1135.11 1192.14 1131.48 1204.57 1131.48 1217.81 cv
1131.48 1231.05 1135.11 1243.48 1141.39 1254.18 cv
1304.38 1254.18 li
1255.43 1217.81 li
0 .345098 .454902 rgb
f
1141.39 1254.18 mo
1304.38 1254.18 li
1255.43 1217.81 li
1304.38 1181.45 li
1141.39 1181.45 li
1140.7 1182.62 1140.05 1183.82 1139.42 1185.04 cv
1294.92 1185.04 li
1253.52 1214.84 li
1252.59 1215.5 1252.03 1216.62 1252.03 1217.81 cv
1252.03 1219 1252.59 1220.11 1253.52 1220.78 cv
1294.92 1250.58 li
1139.42 1250.58 li
1140.05 1251.8 1140.7 1253 1141.39 1254.18 cv
0 .258824 .341176 rgb
f
1203.69 1150.66 mo
1781.36 1150.66 li
1818.39 1150.66 1848.51 1180.78 1848.51 1217.81 cv
1848.51 1254.84 1818.39 1284.96 1781.36 1284.96 cv
1203.69 1284.96 li
1166.66 1284.96 1136.54 1254.84 1136.54 1217.81 cv
1136.54 1180.78 1166.66 1150.66 1203.69 1150.66 cv
1203.69 1290.02 mo
1781.36 1290.02 li
1821.08 1290.02 1853.57 1257.53 1853.57 1217.81 cv
1853.57 1178.1 1821.08 1145.6 1781.36 1145.6 cv
1203.69 1145.6 li
1163.98 1145.6 1131.48 1178.1 1131.48 1217.81 cv
1131.48 1257.53 1163.98 1290.02 1203.69 1290.02 cv
f
1839.58 712.625 mo
1145.48 712.625 li
1137.78 712.625 1131.48 718.921 1131.48 726.621 cv
1131.48 784.696 li
1853.57 784.696 li
1853.57 726.621 li
1853.57 718.921 1847.27 712.625 1839.58 712.625 cv
cp
.952941 .784314 .388235 rgb
f
1131.48 842.773 mo
1131.48 850.469 1137.78 856.766 1145.48 856.766 cv
1839.58 856.766 li
1847.27 856.766 1853.57 850.469 1853.57 842.773 cv
1853.57 784.696 li
1131.48 784.696 li
1131.48 842.773 li
cp
.960784 .568627 .231373 rgb
f
1275.62 842.773 mo
1275.62 850.469 1269.33 856.766 1261.63 856.766 cv
1145.48 856.766 li
1137.78 856.766 1131.48 850.469 1131.48 842.773 cv
1131.48 726.621 li
1131.48 718.921 1137.78 712.625 1145.48 712.625 cv
1261.63 712.625 li
1269.33 712.625 1275.62 718.921 1275.62 726.621 cv
1275.62 842.773 li
cp
.129412 .768627 .619608 rgb
f
1225.87 781.362 mo
1213.06 781.362 li
1213.49 776.169 li
1227.18 776.169 li
1225.87 781.362 li
cp
1209.23 827.258 mo
1209.91 819.151 li
1216.43 819.151 li
1214.4 827.258 li
1209.23 827.258 li
cp
1187.17 819.151 mo
1193.69 819.151 li
1194.36 827.258 li
1189.19 827.258 li
1187.17 819.151 li
cp
1190.1 776.169 mo
1190.54 781.362 li
1177.71 781.362 li
1176.42 776.169 li
1190.1 776.169 li
cp
1195.35 781.362 mo
1194.92 776.169 li
1208.67 776.169 li
1208.24 781.362 li
1195.35 781.362 li
cp
1206.73 799.471 mo
1196.86 799.471 li
1195.75 786.164 li
1207.84 786.164 li
1206.73 799.471 li
cp
1211.55 799.471 mo
1212.65 786.164 li
1224.68 786.164 li
1221.35 799.471 li
1211.55 799.471 li
cp
1211.15 804.271 mo
1220.15 804.271 li
1217.63 814.349 li
1210.31 814.349 li
1211.15 804.271 li
cp
1178.91 786.164 mo
1190.93 786.164 li
1192.04 799.471 li
1182.24 799.471 li
1178.91 786.164 li
cp
1183.44 804.271 mo
1192.44 804.271 li
1193.28 814.349 li
1185.96 814.349 li
1183.44 804.271 li
cp
1205.09 819.151 mo
1204.42 827.258 li
1199.18 827.258 li
1198.5 819.151 li
1205.09 819.151 li
cp
1198.1 814.349 mo
1197.26 804.271 li
1206.33 804.271 li
1205.49 814.349 li
1198.1 814.349 li
cp
1234.34 767.293 mo
1169.25 767.293 li
1170.92 773.972 li
1184.24 827.258 li
1186.62 836.752 li
1216.98 836.752 li
1218.65 830.072 li
1232.12 776.169 li
1232.13 776.169 li
1234.34 767.293 li
cp
.176471 .176471 .176471 rgb
f
1198.7 746.404 mo
1189.3 749.795 li
1192.84 737.542 li
1200.48 736.155 li
1198.7 746.404 li
cp
f
1202.98 762.587 mo
1198.67 764.183 li
1195.85 755.263 li
1203.55 757.985 li
1202.98 762.587 li
cp
f
1214.53 757.841 mo
1205.11 753.162 li
1204.44 744.712 li
1211.21 748.566 li
1214.53 757.841 li
cp
f
1229.39 777.847 mo
1216.57 777.847 li
1217.01 772.654 li
1230.69 772.654 li
1229.39 777.847 li
cp
1212.75 823.744 mo
1213.42 815.637 li
1219.94 815.637 li
1217.92 823.744 li
1212.75 823.744 li
cp
1190.68 815.637 mo
1197.2 815.637 li
1197.87 823.744 li
1192.7 823.744 li
1190.68 815.637 li
cp
1193.62 772.654 mo
1194.05 777.847 li
1181.23 777.847 li
1179.93 772.654 li
1193.62 772.654 li
cp
1198.87 777.847 mo
1198.44 772.654 li
1212.19 772.654 li
1211.75 777.847 li
1198.87 777.847 li
cp
1210.24 795.956 mo
1200.38 795.956 li
1199.27 782.648 li
1211.36 782.648 li
1210.24 795.956 li
cp
1215.06 795.956 mo
1216.17 782.648 li
1228.19 782.648 li
1224.87 795.956 li
1215.06 795.956 li
cp
1214.66 800.758 mo
1223.67 800.758 li
1221.14 810.835 li
1213.82 810.835 li
1214.66 800.758 li
cp
1182.43 782.648 mo
1194.45 782.648 li
1195.56 795.956 li
1185.76 795.956 li
1182.43 782.648 li
cp
1186.96 800.758 mo
1195.96 800.758 li
1196.79 810.835 li
1189.48 810.835 li
1186.96 800.758 li
cp
1208.6 815.637 mo
1207.93 823.744 li
1202.69 823.744 li
1202.01 815.637 li
1208.6 815.637 li
cp
1201.61 810.835 mo
1200.78 800.758 li
1209.84 800.758 li
1209.01 810.835 li
1201.61 810.835 li
cp
1237.86 763.778 mo
1172.76 763.778 li
1174.43 770.458 li
1187.75 823.744 li
1190.13 833.237 li
1220.49 833.237 li
1222.16 826.557 li
1235.63 772.654 li
1235.64 772.654 li
1237.86 763.778 li
cp
1 1 1 rgb
f
1202.22 742.89 mo
1192.82 746.28 li
1196.36 734.028 li
1203.99 732.64 li
1202.22 742.89 li
cp
f
1206.5 759.072 mo
1202.18 760.669 li
1199.37 751.748 li
1207.07 754.47 li
1206.5 759.072 li
cp
f
1218.04 754.326 mo
1208.62 749.647 li
1207.96 741.198 li
1214.72 745.052 li
1218.04 754.326 li
cp
f
1839.58 712.625 mo
1145.48 712.625 li
1137.78 712.625 1131.48 718.921 1131.48 726.621 cv
1131.48 784.696 li
1131.48 842.773 li
1131.48 850.469 1137.78 856.766 1145.48 856.766 cv
1839.58 856.766 li
1847.27 856.766 1853.57 850.469 1853.57 842.773 cv
1853.57 784.696 li
1853.57 726.621 li
1853.57 718.921 1847.27 712.625 1839.58 712.625 cv
cp
1839.58 719.847 mo
1843.31 719.847 1846.35 722.885 1846.35 726.621 cv
1846.35 784.696 li
1846.35 842.773 li
1846.35 846.508 1843.31 849.545 1839.58 849.545 cv
1145.48 849.545 li
1141.74 849.545 1138.7 846.508 1138.7 842.773 cv
1138.7 784.696 li
1138.7 726.621 li
1138.7 722.885 1141.74 719.847 1145.48 719.847 cv
1839.58 719.847 li
0 .439216 .54902 rgb
f
1145.48 722.013 mo
1142.94 722.013 1140.87 724.079 1140.87 726.621 cv
1140.87 842.773 li
1140.87 845.313 1142.94 847.38 1145.48 847.38 cv
1839.58 847.38 li
1842.12 847.38 1844.18 845.313 1844.18 842.773 cv
1844.18 726.621 li
1844.18 724.079 1842.12 722.013 1839.58 722.013 cv
1145.48 722.013 li
cp
1839.58 851.712 mo
1145.48 851.712 li
1140.55 851.712 1136.54 847.703 1136.54 842.773 cv
1136.54 726.621 li
1136.54 721.69 1140.55 717.68 1145.48 717.68 cv
1839.58 717.68 li
1844.5 717.68 1848.51 721.69 1848.51 726.621 cv
1848.51 842.773 li
1848.51 847.703 1844.5 851.712 1839.58 851.712 cv
cp
1 1 1 rgb
f
1839.58 1795.48 mo
1145.48 1795.48 li
1137.78 1795.48 1131.48 1801.77 1131.48 1809.48 cv
1131.48 1867.55 li
1853.57 1867.55 li
1853.57 1809.48 li
1853.57 1801.77 1847.27 1795.48 1839.58 1795.48 cv
cp
.945098 .760784 .701961 rgb
f
1131.48 1925.63 mo
1131.48 1933.32 1137.78 1939.62 1145.48 1939.62 cv
1839.58 1939.62 li
1847.27 1939.62 1853.57 1933.32 1853.57 1925.63 cv
1853.57 1867.55 li
1131.48 1867.55 li
1131.48 1925.63 li
cp
.741176 .831373 .85098 rgb
f
1275.62 1925.63 mo
1275.62 1933.32 1269.33 1939.62 1261.63 1939.62 cv
1145.48 1939.62 li
1137.78 1939.62 1131.48 1933.32 1131.48 1925.63 cv
1131.48 1809.48 li
1131.48 1801.77 1137.78 1795.48 1145.48 1795.48 cv
1261.63 1795.48 li
1269.33 1795.48 1275.62 1801.77 1275.62 1809.48 cv
1275.62 1925.63 li
cp
.658824 .360784 .466667 rgb
f
1839.58 1795.48 mo
1145.48 1795.48 li
1137.78 1795.48 1131.48 1801.77 1131.48 1809.48 cv
1131.48 1867.55 li
1131.48 1925.63 li
1131.48 1933.32 1137.78 1939.62 1145.48 1939.62 cv
1839.58 1939.62 li
1847.27 1939.62 1853.57 1933.32 1853.57 1925.63 cv
1853.57 1867.55 li
1853.57 1809.48 li
1853.57 1801.77 1847.27 1795.48 1839.58 1795.48 cv
cp
1839.58 1802.7 mo
1843.31 1802.7 1846.35 1805.74 1846.35 1809.48 cv
1846.35 1867.55 li
1846.35 1925.63 li
1846.35 1929.36 1843.31 1932.4 1839.58 1932.4 cv
1145.48 1932.4 li
1141.74 1932.4 1138.7 1929.36 1138.7 1925.63 cv
1138.7 1867.55 li
1138.7 1809.48 li
1138.7 1805.74 1141.74 1802.7 1145.48 1802.7 cv
1839.58 1802.7 li
0 .439216 .54902 rgb
f
1145.48 1804.87 mo
1142.94 1804.87 1140.87 1806.93 1140.87 1809.48 cv
1140.87 1925.63 li
1140.87 1928.17 1142.94 1930.23 1145.48 1930.23 cv
1839.58 1930.23 li
1842.12 1930.23 1844.18 1928.17 1844.18 1925.63 cv
1844.18 1809.48 li
1844.18 1806.93 1842.12 1804.87 1839.58 1804.87 cv
1145.48 1804.87 li
cp
1839.58 1934.57 mo
1145.48 1934.57 li
1140.55 1934.57 1136.54 1930.56 1136.54 1925.63 cv
1136.54 1809.48 li
1136.54 1804.54 1140.55 1800.53 1145.48 1800.53 cv
1839.58 1800.53 li
1844.5 1800.53 1848.51 1804.54 1848.51 1809.48 cv
1848.51 1925.63 li
1848.51 1930.56 1844.5 1934.57 1839.58 1934.57 cv
cp
1 1 1 rgb
f
1230.7 1847.9 mo
1224.03 1841.22 1215.37 1837.18 1206.16 1836.23 cv
1212.85 1829.54 li
1215.34 1827.05 1215.52 1823.62 1213.25 1821.92 cv
1210.98 1820.22 1207.08 1820.88 1204.58 1823.37 cv
1197.86 1830.09 li
1195.36 1832.59 1191.2 1836.02 1188.6 1837.71 cv
1186.01 1839.41 1186.01 1842.19 1188.6 1843.89 cv
1191.2 1845.58 1195.36 1849.01 1197.85 1851.51 cv
1204.58 1858.23 li
1207.07 1860.73 1210.98 1861.38 1213.25 1859.68 cv
1215.52 1857.98 1215.34 1854.55 1212.85 1852.06 cv
1206.8 1846.01 li
1213.23 1847.02 1219.2 1850 1223.9 1854.7 cv
1229.77 1860.57 1233 1868.36 1233 1876.66 cv
1233 1884.95 1229.77 1892.75 1223.9 1898.61 cv
1211.8 1910.71 1192.1 1910.72 1179.99 1898.61 cv
1167.88 1886.5 1167.89 1866.8 1179.99 1854.7 cv
1173.19 1847.89 li
1165.5 1855.57 1161.28 1865.79 1161.28 1876.65 cv
1161.27 1887.52 1165.5 1897.73 1173.19 1905.41 cv
1180.87 1913.1 1191.09 1917.33 1201.95 1917.33 cv
1212.81 1917.33 1223.03 1913.1 1230.71 1905.41 cv
1238.39 1897.73 1242.62 1887.52 1242.62 1876.66 cv
1242.62 1865.8 1238.39 1855.58 1230.7 1847.9 cv
cp
.176471 .176471 .176471 rgb
f
1233.91 1844.69 mo
1227.24 1838.01 1218.57 1833.97 1209.36 1833.03 cv
1216.06 1826.33 li
1218.55 1823.84 1218.73 1820.41 1216.46 1818.71 cv
1214.19 1817.02 1210.28 1817.67 1207.79 1820.17 cv
1201.07 1826.89 li
1198.57 1829.38 1194.41 1832.81 1191.81 1834.51 cv
1189.22 1836.21 1189.22 1838.98 1191.81 1840.68 cv
1194.4 1842.38 1198.57 1845.81 1201.06 1848.3 cv
1207.79 1855.03 li
1210.28 1857.52 1214.18 1858.17 1216.46 1856.47 cv
1218.73 1854.77 1218.55 1851.34 1216.06 1848.85 cv
1210.01 1842.81 li
1216.44 1843.81 1222.41 1846.79 1227.11 1851.49 cv
1232.97 1857.36 1236.2 1865.16 1236.2 1873.45 cv
1236.2 1881.74 1232.97 1889.54 1227.11 1895.4 cv
1215.01 1907.5 1195.31 1907.51 1183.2 1895.4 cv
1171.09 1883.3 1171.09 1863.6 1183.2 1851.49 cv
1176.4 1844.68 li
1168.71 1852.37 1164.49 1862.58 1164.49 1873.45 cv
1164.48 1884.31 1168.71 1894.53 1176.39 1902.21 cv
1184.08 1909.89 1194.29 1914.12 1205.16 1914.12 cv
1216.02 1914.12 1226.23 1909.89 1233.92 1902.21 cv
1241.6 1894.53 1245.83 1884.31 1245.83 1873.45 cv
1245.83 1862.59 1241.6 1852.37 1233.91 1844.69 cv
cp
1 1 1 rgb
f
1839.58 46.3799 mo
1145.48 46.3799 li
1137.78 46.3799 1131.48 52.6753 1131.48 60.374 cv
1131.48 118.45 li
1853.57 118.45 li
1853.57 60.374 li
1853.57 52.6753 1847.27 46.3799 1839.58 46.3799 cv
cp
.478431 .862745 .772549 rgb
f
1131.48 176.527 mo
1131.48 184.224 1137.78 190.521 1145.48 190.521 cv
1839.58 190.521 li
1847.27 190.521 1853.57 184.224 1853.57 176.527 cv
1853.57 118.45 li
1131.48 118.45 li
1131.48 176.527 li
cp
.129412 .768627 .619608 rgb
f
1275.62 176.527 mo
1275.62 184.224 1269.33 190.521 1261.63 190.521 cv
1145.48 190.521 li
1137.78 190.521 1131.48 184.224 1131.48 176.527 cv
1131.48 60.374 li
1131.48 52.6753 1137.78 46.3799 1145.48 46.3799 cv
1261.63 46.3799 li
1269.33 46.3799 1275.62 52.6753 1275.62 60.374 cv
1275.62 176.527 li
cp
.960784 .568627 .231373 rgb
f
1839.58 46.3799 mo
1145.48 46.3799 li
1137.78 46.3799 1131.48 52.6753 1131.48 60.374 cv
1131.48 118.45 li
1131.48 176.527 li
1131.48 184.224 1137.78 190.521 1145.48 190.521 cv
1839.58 190.521 li
1847.27 190.521 1853.57 184.224 1853.57 176.527 cv
1853.57 118.45 li
1853.57 60.374 li
1853.57 52.6753 1847.27 46.3799 1839.58 46.3799 cv
cp
1839.58 53.6011 mo
1843.31 53.6011 1846.35 56.6396 1846.35 60.374 cv
1846.35 118.45 li
1846.35 176.527 li
1846.35 180.262 1843.31 183.299 1839.58 183.299 cv
1145.48 183.299 li
1141.74 183.299 1138.7 180.262 1138.7 176.527 cv
1138.7 118.45 li
1138.7 60.374 li
1138.7 56.6396 1141.74 53.6011 1145.48 53.6011 cv
1839.58 53.6011 li
0 .439216 .54902 rgb
f
1145.48 55.7666 mo
1142.94 55.7666 1140.87 57.833 1140.87 60.374 cv
1140.87 176.527 li
1140.87 179.067 1142.94 181.133 1145.48 181.133 cv
1839.58 181.133 li
1842.12 181.133 1844.18 179.067 1844.18 176.527 cv
1844.18 60.374 li
1844.18 57.833 1842.12 55.7666 1839.58 55.7666 cv
1145.48 55.7666 li
cp
1839.58 185.466 mo
1145.48 185.466 li
1140.55 185.466 1136.54 181.456 1136.54 176.527 cv
1136.54 60.374 li
1136.54 55.4443 1140.55 51.4346 1145.48 51.4346 cv
1839.58 51.4346 li
1844.5 51.4346 1848.51 55.4443 1848.51 60.374 cv
1848.51 176.527 li
1848.51 181.456 1844.5 185.466 1839.58 185.466 cv
cp
1 1 1 rgb
f
1177.25 153.619 mo
1176.16 153.619 1175.08 153.188 1174.27 152.336 cv
1172.7 150.687 1172.76 148.077 1174.41 146.508 cv
1202.4 119.896 li
1174.41 93.2813 li
1172.76 91.7124 1172.7 89.1025 1174.27 87.4526 cv
1175.83 85.8018 1178.44 85.7368 1180.09 87.3062 cv
1211.22 116.908 li
1212.04 117.686 1212.5 118.766 1212.5 119.896 cv
1212.5 121.024 1212.04 122.104 1211.22 122.883 cv
1180.09 152.483 li
1179.29 153.241 1178.27 153.619 1177.25 153.619 cv
cp
0 0 0 rgb
f
1205.82 153.619 mo
1204.73 153.619 1203.64 153.188 1202.83 152.336 cv
1201.26 150.687 1201.33 148.077 1202.98 146.508 cv
1230.96 119.896 li
1202.98 93.2813 li
1201.33 91.7124 1201.26 89.1025 1202.83 87.4526 cv
1204.4 85.8018 1207.01 85.7368 1208.66 87.3062 cv
1239.79 116.908 li
1240.61 117.686 1241.07 118.766 1241.07 119.896 cv
1241.07 121.024 1240.61 122.104 1239.79 122.883 cv
1208.66 152.483 li
1207.86 153.241 1206.84 153.619 1205.82 153.619 cv
cp
f
1180.14 152.173 mo
1179.05 152.173 1177.96 151.744 1177.15 150.892 cv
1175.58 149.242 1175.65 146.632 1177.3 145.063 cv
1205.28 118.451 li
1177.3 91.8364 li
1175.65 90.2676 1175.58 87.6582 1177.15 86.0078 cv
1178.72 84.3589 1181.33 84.2925 1182.98 85.8618 cv
1214.11 115.463 li
1214.93 116.241 1215.39 117.322 1215.39 118.451 cv
1215.39 119.581 1214.93 120.66 1214.11 121.438 cv
1182.98 151.039 li
1182.18 151.798 1181.16 152.173 1180.14 152.173 cv
cp
.972549 .972549 .972549 rgb
f
1208.71 152.173 mo
1207.62 152.173 1206.53 151.744 1205.72 150.892 cv
1204.15 149.242 1204.22 146.632 1205.87 145.063 cv
1233.85 118.451 li
1205.87 91.8364 li
1204.22 90.2676 1204.15 87.6582 1205.72 86.0078 cv
1207.29 84.3579 1209.9 84.2925 1211.55 85.8618 cv
1242.67 115.463 li
1243.49 116.241 1243.96 117.322 1243.96 118.451 cv
1243.96 119.581 1243.49 120.66 1242.67 121.438 cv
1211.55 151.039 li
1210.75 151.798 1209.73 152.173 1208.71 152.173 cv
cp
f
870.459 891.364 mo
148.374 891.364 li
148.374 1035.78 li
434.19 1035.78 li
509.417 1111.01 li
584.644 1035.78 li
870.459 1035.78 li
870.459 891.364 li
.721569 .909804 .721569 rgb
f
246.918 891.364 mo
148.374 891.364 li
148.374 1035.78 li
246.918 1035.78 li
246.918 891.364 li
.960784 .462745 .423529 rgb
f
870.459 891.364 mo
148.374 891.364 li
148.374 1035.78 li
434.19 1035.78 li
509.417 1111.01 li
584.644 1035.78 li
870.459 1035.78 li
870.459 891.364 li
863.238 898.584 mo
863.238 1028.56 li
584.644 1028.56 li
581.652 1028.56 li
579.538 1030.67 li
509.417 1100.79 li
439.295 1030.67 li
437.181 1028.56 li
434.19 1028.56 li
155.595 1028.56 li
155.595 898.584 li
863.238 898.584 li
0 .258824 .341176 rgb
f
157.761 1026.39 mo
438.078 1026.39 li
509.417 1097.73 li
580.756 1026.39 li
861.073 1026.39 li
861.073 900.75 li
157.761 900.75 li
157.761 1026.39 li
509.417 1103.86 mo
436.285 1030.73 li
153.428 1030.73 li
153.428 896.417 li
865.405 896.417 li
865.405 1030.73 li
582.549 1030.73 li
509.417 1103.86 li
.952941 .784314 .388235 rgb
f
189.525 945.869 mo
168.403 945.869 li
165.771 945.869 163.622 948.312 163.622 951.302 cv
163.622 978.565 li
163.622 981.547 165.771 983.994 168.403 983.994 cv
189.525 983.994 li
189.525 945.869 li
.176471 .176471 .176471 rgb
f
224.45 927.143 mo
200.045 943.156 li
198.897 943.906 197.316 944.587 195.689 945.08 cv
195.689 984.919 li
197.176 985.398 198.619 986.018 199.668 986.713 cv
224.45 1002.97 li
226.727 1004.46 228.588 1003.24 228.588 1000.25 cv
228.588 929.859 li
228.588 926.869 226.727 925.651 224.45 927.143 cv
f
192.605 942.902 mo
171.486 942.902 li
168.855 942.902 166.705 945.345 166.705 948.334 cv
166.705 975.599 li
166.705 978.582 168.855 981.028 171.486 981.028 cv
192.605 981.028 li
192.605 942.902 li
1 1 1 rgb
f
227.534 924.176 mo
203.127 940.189 li
201.98 940.939 200.398 941.622 198.771 942.112 cv
198.771 981.951 li
200.26 982.433 201.703 983.051 202.751 983.745 cv
227.534 999.997 li
229.81 1001.49 231.67 1000.27 231.67 997.281 cv
231.67 926.893 li
231.67 923.904 229.81 922.683 227.534 924.176 cv
f
1131.48 1073.39 mo
1131.48 928.974 li
1781.36 928.974 li
1821.08 928.974 1853.57 961.469 1853.57 1001.18 cv
1853.57 1040.9 1821.08 1073.39 1781.36 1073.39 cv
1131.48 1073.39 li
.478431 .862745 .772549 rgb
f
1276.59 928.974 mo
1131.48 928.974 li
1131.48 1073.39 li
1276.59 1073.39 li
1276.59 928.974 li
0 .258824 .341176 rgb
f
1167.33 1027.03 mo
1240.74 1027.03 li
1240.74 975.341 li
1167.33 975.341 li
1167.33 1027.03 li
1243.32 1032.18 mo
1164.75 1032.18 li
1163.33 1032.18 1162.18 1031.03 1162.18 1029.6 cv
1162.18 972.763 li
1162.18 971.341 1163.33 970.187 1164.75 970.187 cv
1243.32 970.187 li
1244.74 970.187 1245.9 971.341 1245.9 972.763 cv
1245.9 1029.6 li
1245.9 1031.03 1244.74 1032.18 1243.32 1032.18 cv
.972549 .972549 .972549 rgb
f
1204.04 1012.61 mo
1203.35 1012.61 1202.7 1012.33 1202.22 1011.85 cv
1164.95 974.585 li
1163.95 973.58 1163.95 971.948 1164.95 970.942 cv
1165.96 969.936 1167.59 969.936 1168.6 970.942 cv
1204.04 1006.38 li
1239.48 970.942 li
1240.48 969.936 1242.12 969.936 1243.12 970.941 cv
1244.13 971.948 1244.13 973.58 1243.12 974.585 cv
1205.86 1011.85 li
1205.38 1012.33 1204.72 1012.61 1204.04 1012.61 cv
f
1243.32 1032.18 mo
1242.23 1032.18 1241.3 1031.51 1240.92 1030.56 cv
1212.21 1001.85 li
1211.21 1000.84 1211.21 999.21 1212.21 998.203 cv
1213.22 997.197 1214.85 997.197 1215.86 998.203 cv
1245.14 1027.48 li
1245.62 1027.97 1245.9 1028.62 1245.9 1029.31 cv
1245.9 1029.6 li
1245.9 1031.03 1244.74 1032.18 1243.32 1032.18 cv
f
1164.75 1032.18 mo
1163.33 1032.18 1162.18 1031.03 1162.18 1029.6 cv
1162.18 1029.3 li
1162.18 1028.62 1162.45 1027.96 1162.93 1027.48 cv
1192.21 998.202 li
1193.22 997.196 1194.85 997.196 1195.86 998.202 cv
1196.86 999.209 1196.86 1000.84 1195.86 1001.85 cv
1167.15 1030.55 li
1166.77 1031.51 1165.84 1032.18 1164.75 1032.18 cv
f
1781.36 928.974 mo
1131.48 928.974 li
1131.48 1073.39 li
1781.36 1073.39 li
1821.08 1073.39 1853.57 1040.9 1853.57 1001.18 cv
1853.57 961.469 1821.08 928.974 1781.36 928.974 cv
1781.36 936.196 mo
1817.19 936.196 1846.35 965.349 1846.35 1001.18 cv
1846.35 1037.02 1817.19 1066.17 1781.36 1066.17 cv
1138.7 1066.17 li
1138.7 936.196 li
1781.36 936.196 li
.423529 .203922 .14902 rgb
f
1140.87 1064.01 mo
1781.36 1064.01 li
1816 1064.01 1844.18 1035.82 1844.18 1001.18 cv
1844.18 966.544 1816 938.362 1781.36 938.362 cv
1140.87 938.362 li
1140.87 1064.01 li
1781.36 1068.34 mo
1136.54 1068.34 li
1136.54 934.029 li
1781.36 934.029 li
1818.39 934.029 1848.51 964.155 1848.51 1001.18 cv
1848.51 1038.21 1818.39 1068.34 1781.36 1068.34 cv
.721569 .909804 .721569 rgb
f
148.374 1290.02 mo
148.374 1145.6 li
798.251 1145.6 li
837.966 1145.6 870.459 1178.1 870.459 1217.81 cv
870.459 1257.53 837.966 1290.02 798.251 1290.02 cv
148.374 1290.02 li
.960784 .568627 .231373 rgb
f
870.459 1217.81 mo
870.459 1178.1 837.966 1145.6 798.251 1145.6 cv
717.611 1145.6 li
717.611 1290.02 li
798.251 1290.02 li
837.966 1290.02 870.459 1257.53 870.459 1217.81 cv
0 .290196 .231373 rgb
f
798.251 1145.6 mo
148.374 1145.6 li
148.374 1290.02 li
798.251 1290.02 li
837.966 1290.02 870.459 1257.53 870.459 1217.81 cv
870.459 1178.1 837.966 1145.6 798.251 1145.6 cv
798.251 1152.82 mo
834.084 1152.82 863.238 1181.98 863.238 1217.81 cv
863.238 1253.64 834.084 1282.8 798.251 1282.8 cv
155.595 1282.8 li
155.595 1152.82 li
798.251 1152.82 li
.423529 .203922 .14902 rgb
f
157.761 1280.63 mo
798.251 1280.63 li
832.891 1280.63 861.073 1252.45 861.073 1217.81 cv
861.073 1183.17 832.891 1154.99 798.251 1154.99 cv
157.761 1154.99 li
157.761 1280.63 li
798.251 1284.96 mo
153.428 1284.96 li
153.428 1150.66 li
798.251 1150.66 li
835.28 1150.66 865.405 1180.78 865.405 1217.81 cv
865.405 1254.84 835.28 1284.96 798.251 1284.96 cv
.721569 .909804 .721569 rgb
f
794.496 1204 mo
789.834 1204 783.82 1205.28 777.846 1210.14 cv
773.094 1214.01 770.69 1219.93 771.72 1225.22 cv
772.417 1228.78 774.563 1231.35 777.618 1232.3 cv
788.181 1235.56 794.364 1227.74 796.716 1221.77 cv
797.639 1216.06 798.953 1208.92 799.77 1204.54 cv
798.358 1204.25 796.561 1204 794.496 1204 cv
782.886 1263.79 mo
775.787 1263.79 768.656 1262.11 762.536 1258.71 cv
750.119 1251.82 743.499 1239.31 743.894 1223.47 cv
744.346 1205.47 751.651 1190.91 764.46 1182.46 cv
776.884 1174.28 793.797 1172.53 807.551 1178.04 cv
817.107 1181.86 823.626 1189.12 826.409 1199.04 cv
829.658 1210.63 827.179 1225.07 820.376 1234.15 cv
813.101 1243.84 806.123 1242.56 803.461 1241.56 cv
800.916 1240.6 798.783 1238.69 797.396 1236.34 cv
791.696 1241.32 783.888 1243.73 774.944 1240.98 cv
768.676 1239.05 764.138 1233.81 762.804 1226.96 cv
761.114 1218.29 764.677 1209.15 772.106 1203.1 cv
788.865 1189.44 806.12 1196.93 806.851 1197.25 cv
810.134 1198.72 li
809.454 1202.26 li
808.62 1206.6 806.82 1216.24 805.691 1223.17 cv
805.844 1223.22 li
805.743 1223.52 805.646 1223.82 805.543 1224.12 cv
805.131 1226.7 804.831 1228.83 804.735 1230.03 cv
804.67 1230.92 805.447 1232.59 806.662 1233.05 cv
808.189 1233.64 810.656 1231.96 813.104 1228.69 cv
817.51 1222.81 820.488 1211.59 817.659 1201.49 cv
815.643 1194.29 811.105 1189.25 804.177 1186.47 cv
793.101 1182.05 779.477 1183.45 769.463 1190.05 cv
762.205 1194.83 753.456 1204.55 752.979 1223.69 cv
752.584 1239.45 760.355 1247.11 766.942 1250.76 cv
776.983 1256.34 791.018 1255.94 800.321 1249.81 cv
805.316 1257.4 li
798.875 1261.64 790.897 1263.79 782.886 1263.79 cv
.176471 .176471 .176471 rgb
f
797.525 1200.97 mo
792.863 1200.97 786.85 1202.24 780.876 1207.12 cv
776.123 1210.98 773.719 1216.9 774.749 1222.19 cv
775.446 1225.75 777.592 1228.32 780.647 1229.26 cv
791.211 1232.53 797.39 1224.71 799.746 1218.74 cv
800.668 1213.03 801.983 1205.89 802.801 1201.52 cv
801.386 1201.21 799.589 1200.97 797.525 1200.97 cv
785.913 1260.76 mo
778.814 1260.76 771.686 1259.08 765.563 1255.68 cv
753.146 1248.79 746.529 1236.28 746.923 1220.44 cv
747.375 1202.44 754.677 1187.88 767.488 1179.43 cv
779.913 1171.25 796.826 1169.5 810.579 1175.01 cv
820.136 1178.83 826.655 1186.09 829.438 1196.01 cv
832.688 1207.6 830.209 1222.04 823.405 1231.11 cv
816.13 1240.81 809.152 1239.53 806.49 1238.53 cv
803.949 1237.57 801.814 1235.66 800.423 1233.31 cv
794.724 1238.3 786.917 1240.69 777.973 1237.95 cv
771.706 1236.02 767.165 1230.78 765.833 1223.93 cv
764.143 1215.26 767.708 1206.12 775.136 1200.07 cv
791.89 1186.41 809.151 1193.9 809.878 1194.22 cv
813.163 1195.69 li
812.482 1199.23 li
811.652 1203.57 809.849 1213.21 808.72 1220.14 cv
808.874 1220.19 li
808.774 1220.49 808.676 1220.79 808.572 1221.09 cv
808.157 1223.68 807.861 1225.8 807.765 1227 cv
807.697 1227.9 808.476 1229.56 809.691 1230.02 cv
811.217 1230.62 813.686 1228.93 816.133 1225.66 cv
820.539 1219.79 823.521 1208.56 820.689 1198.46 cv
818.672 1191.27 814.134 1186.22 807.206 1183.44 cv
796.13 1179.02 782.506 1180.42 772.49 1187.02 cv
765.235 1191.8 756.485 1201.52 756.009 1220.67 cv
755.614 1236.42 763.382 1244.08 769.971 1247.73 cv
780.012 1253.31 794.049 1252.91 803.351 1246.78 cv
808.346 1254.37 li
801.904 1258.61 793.926 1260.76 785.913 1260.76 cv
1 1 1 rgb
f
1853.57 1679.95 mo
1853.57 1703.77 1834.07 1723.27 1810.24 1723.27 cv
1174.81 1723.27 li
1150.98 1723.27 1131.48 1703.77 1131.48 1679.95 cv
1131.48 1622.18 li
1131.48 1598.35 1150.98 1578.85 1174.81 1578.85 cv
1810.24 1578.85 li
1834.07 1578.85 1853.57 1598.35 1853.57 1622.18 cv
1853.57 1679.95 li
cp
.960784 .462745 .423529 rgb
f
1853.57 1679.95 mo
1853.57 1651.06 li
1131.48 1651.06 li
1131.48 1679.95 li
1131.48 1703.77 1150.98 1723.27 1174.81 1723.27 cv
1810.24 1723.27 li
1834.07 1723.27 1853.57 1703.77 1853.57 1679.95 cv
cp
.960784 .34902 .321569 rgb
f
1174.81 1723.27 mo
1250.22 1723.27 li
1250.22 1578.85 li
1174.81 1578.85 li
1150.98 1578.85 1131.48 1598.35 1131.48 1622.18 cv
1131.48 1679.95 li
1131.48 1703.77 1150.98 1723.27 1174.81 1723.27 cv
cp
.423529 .203922 .14902 rgb
f
1202.33 1630.91 mo
1199.95 1633.29 1196.04 1637.2 1193.65 1639.58 cv
1184.98 1648.25 li
1182.6 1650.64 1178.69 1650.64 1176.3 1648.25 cv
1167.64 1639.58 li
1165.25 1637.2 1161.34 1637.2 1158.96 1639.58 cv
1150.28 1648.25 li
1147.9 1650.64 1147.9 1654.55 1150.28 1656.93 cv
1158.96 1665.61 li
1161.34 1667.99 1165.25 1671.9 1167.64 1674.29 cv
1176.3 1682.96 li
1178.69 1685.34 1182.6 1685.34 1184.98 1682.96 cv
1193.65 1674.29 li
1196.04 1671.9 1199.95 1667.99 1202.33 1665.61 cv
1211 1656.93 li
1213.39 1654.55 1217.29 1650.64 1219.68 1648.25 cv
1228.35 1639.58 li
1230.74 1637.2 1230.74 1633.29 1228.35 1630.91 cv
1219.68 1622.24 li
1217.29 1619.85 1213.39 1619.85 1211 1622.24 cv
1202.33 1630.91 li
cp
.176471 .176471 .176471 rgb
f
1205.4 1627.84 mo
1203.02 1630.23 1199.11 1634.13 1196.72 1636.52 cv
1188.05 1645.19 li
1185.67 1647.57 1181.76 1647.57 1179.37 1645.19 cv
1170.71 1636.52 li
1168.32 1634.13 1164.41 1634.13 1162.02 1636.52 cv
1153.35 1645.19 li
1150.97 1647.57 1150.97 1651.48 1153.35 1653.86 cv
1162.02 1662.54 li
1164.41 1664.92 1168.32 1668.83 1170.71 1671.22 cv
1179.37 1679.89 li
1181.76 1682.27 1185.67 1682.27 1188.05 1679.89 cv
1196.72 1671.22 li
1199.11 1668.83 1203.02 1664.92 1205.4 1662.54 cv
1214.07 1653.86 li
1216.46 1651.48 1220.36 1647.57 1222.75 1645.19 cv
1231.42 1636.52 li
1233.81 1634.13 1233.81 1630.23 1231.42 1627.84 cv
1222.75 1619.17 li
1220.36 1616.78 1216.46 1616.78 1214.07 1619.17 cv
1205.4 1627.84 li
cp
1 1 1 rgb
f
1810.24 1578.85 mo
1174.81 1578.85 li
1150.98 1578.85 1131.48 1598.35 1131.48 1622.18 cv
1131.48 1679.95 li
1131.48 1703.77 1150.98 1723.27 1174.81 1723.27 cv
1810.24 1723.27 li
1834.07 1723.27 1853.57 1703.77 1853.57 1679.95 cv
1853.57 1622.18 li
1853.57 1598.35 1834.07 1578.85 1810.24 1578.85 cv
cp
1810.24 1586.07 mo
1830.15 1586.07 1846.35 1602.27 1846.35 1622.18 cv
1846.35 1679.95 li
1846.35 1699.85 1830.15 1716.05 1810.24 1716.05 cv
1174.81 1716.05 li
1154.9 1716.05 1138.7 1699.85 1138.7 1679.95 cv
1138.7 1622.18 li
1138.7 1602.27 1154.9 1586.07 1174.81 1586.07 cv
1810.24 1586.07 li
.329412 .180392 .235294 rgb
f
856.018 487.678 mo
249.466 487.678 li
249.466 632.096 li
856.018 632.096 li
863.96 632.096 870.459 625.596 870.459 617.653 cv
870.459 502.12 li
870.459 494.177 863.96 487.678 856.018 487.678 cv
.478431 .862745 .772549 rgb
f
162.815 487.678 mo
154.873 487.678 148.374 494.177 148.374 502.12 cv
148.374 617.653 li
148.374 625.596 154.873 632.096 162.815 632.096 cv
249.466 632.096 li
249.466 487.678 li
162.815 487.678 li
.423529 .203922 .14902 rgb
f
177.979 600.821 mo
176.616 600.821 175.256 600.284 174.244 599.218 cv
172.282 597.156 172.364 593.894 174.427 591.932 cv
206.606 561.331 li
174.426 530.726 li
172.364 528.765 172.282 525.503 174.244 523.44 cv
176.205 521.379 179.467 521.297 181.53 523.257 cv
217.637 557.597 li
218.66 558.569 219.239 559.919 219.239 561.331 cv
219.239 562.743 218.66 564.093 217.636 565.065 cv
181.529 599.401 li
180.533 600.35 179.255 600.821 177.979 600.821 cv
0 0 0 rgb
f
180.867 599.376 mo
179.504 599.376 178.144 598.839 177.131 597.773 cv
175.17 595.711 175.252 592.449 177.314 590.487 cv
209.495 559.887 li
177.314 529.283 li
175.252 527.321 175.17 524.059 177.132 521.997 cv
179.093 519.935 182.354 519.853 184.418 521.813 cv
220.525 556.152 li
221.548 557.125 222.127 558.474 222.127 559.887 cv
222.127 561.298 221.548 562.649 220.525 563.621 cv
184.417 597.957 li
183.42 598.905 182.143 599.376 180.867 599.376 cv
.972549 .972549 .972549 rgb
f
870.459 559.887 mo
249.466 559.887 li
249.466 487.678 li
856.018 487.678 li
863.96 487.678 870.459 494.177 870.459 502.12 cv
870.459 559.887 li
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 559.887 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Wp/6:kh<!!fr4,fVs)g2kh)`pfVRc`V!$@)kLZHkf:qEYU#sq!k163feXu!ST&nLnjj]g^e=5RLS)r+f
jO9OXe!T4ER,l\^jO0@Sd?`h?Q/g8Vj3X"Md$*J9OlF]Lim3_Gc]@)2NoA9DiQdGAc&CW+N8`$>i67):
b_b9%M;ZR5i6-o5bD+osL#:%+ho^W0ab/HlK&4V$hT19)aFN-gJ)/.ph8b!#a*ld`I,2eigr=]r`Hp=Y
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 559.887 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~WMukrWMlboW2HPkVl-GjVl$>gVPU,cV50o_Unjf^Una][US=KWU7n9STqS0RTqJ'OTV%jKT:_aJT:VXG
St;LDSXl:@S=H(<S"#k8R[T\6R[TY4R@0G0R$a5,Q^=&*Q^=#(QBmf$Q'IW"Q'ISuPa%AqPEV/mP*1uk
OcbcfOH>QcOH>QbO,o?^NfK-ZNK&pWNK&pVN/W^RMi3LOMi3LNMMd:JM2@(FLkpkCLkpkBLPLY>L5(G:
KnY57KS5#3K7ef/K7ef/JqAT+JUrB'JUrB'J:N0#It)rtIXZ`pIXZ`pI=6NlI!g<hH[C*dH[C*dH?sm`
~>
<~kih6oki_-lkND$kkND$kkND$kkND$kkN:phk2tggk2tggk2tggk2tggk2k^djlPUcjlPUcjlPUcjlPUc
jlPRajQ,C_jQ,C_jQ,C_jQ,C_jQ,@]j5]1[j5]1[j5]1[j5]1[j5].Yio8tWio8tWio8tWio8tWio8qU
iSibSiSibSiSibSiSibSiSibRi8EPOi8EPOi8EPOi8EPOi8EPNhr!>Khr!>Khr!>Khr!>Khr!>JhVR,G
hVR,GhVR,GhVR,GhVR,Gh;-oCh;-oCh;-oCh;-oCh;-oCgt^]?gt^]?gt^]?gt^]?gt^]?gY:K;gY:K;
~>
<~g"G'3g"G'3g"=s0f\"j/f\"j/f[na,f@SX+f@SX+f@JO(f%/F'f%/F'f%&=$e^`4#e^`4#e^W*ueC<!t
eC<!teC;sre'ldpe'ldpe'landaHRldaHRldaHOjdF$@hdF$@hdF$=fd*U.dd*U.dd*U+bcd0q`cd0q`
cd0q_cHa_\cHa_\cHa_[c-=MXc-=MXc-=MWbfn;Tbfn;Tbfn;SbKJ)PbKJ)PbKJ)Ob0%lLb0%lLb0%lK
aiVZHaiVZHaiVZHaN2HDaN2HDaN2HDa2c6@a2c6@a2c6@`l?$<`l?$<`l?$<`Pog8`Pog8`Pog8`5KU4
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
249.466 559.887 mo
222.127 559.887 li
222.127 559.887 li
222.127 558.474 221.548 557.125 220.525 556.152 cv
184.418 521.813 li
183.42 520.865 182.143 520.395 180.867 520.395 cv
179.55 520.395 178.234 520.897 177.233 521.893 cv
176.131 522.053 175.071 522.571 174.244 523.44 cv
172.282 525.503 172.364 528.765 174.426 530.726 cv
205.088 559.887 li
148.374 559.887 li
148.374 502.12 li
148.374 494.177 154.873 487.678 162.815 487.678 cv
249.466 487.678 li
249.466 559.887 li
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 559.887 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Tm_$UHukp,Eh@YtSp51EG]'$pD4>ZaRWN;5F(q"]BUEdPQZ$H$DIf&MA!Ce=P\X]kBj[$;?BJl*OChaY
AQk.*=cHllNF>nI?r`+l</Y']M-Wu8>Z$;\:PW(JL0.-'=%e3H8q^29Jl>0k;FZ477=\3&J58O]9gO5&
5^c9iHqHSL8N_;i4*a:VGt'f=6oT<W2KhDEF[7j,5VmIF0loN4E]c!p4"bJ5/8mO!DDs"^2CWK#-YtUd
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 559.887 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~TV.sNTV%jKT:VXGSt;OFSt2FCSXc4?S=?";S!oe7R[KS3R@0J1R$X/+Q^=&*Q^3r'QBd`#Q'IW!P`q;p
PEV2oPEV/mP*1riOcb`eOH>NaO,o<]NfK-[NK&mUN/W^SN/W[QMi3IMMMd:KM2@%ELkpkCLkphALPLV=
L5(G:KnY56KS5#2K7ef/K7\]+JUrB'JUrB&J:N0"It)rtIsuipI=6NlI=6NkI!g<gH[C*cH?sm_H$O[[
G^+IXG^+IXGB\7TG'8%PF`hhLFEDVHFEDSFEcQ2@EcQ2@EH,u<E,]c8Df9Q4DJj?0D/F-,D/F-,Ci!p(
~>
<~I!g<hI!^3eH[:!aH?jd\G^"@UGB\7SG'.qMF`__IFE;MEF)l;@EH#l9E,]c7Df0H1DJa6-D/=$)Chmg%
CMR["Bk_6oBP;'mB4kggAnGUcAS#C_A7T1[@U`bS@:<PO?sm>K?XI,G?=$oC?!U]?>[1K;>$>'3=]nj/
=BJ[,='&I(<`N.!<)cgr<)Z^n;GpCi;,L1e:f'ta:JXb]:/+GV9MA,R9M8#N8kM]I8P)KE84Z9A7n,s:
77BX677BU46UO4.6:+"*5s[e&5X7S"5<h=q4Ztqk4Ztni4$,Mc3]];_3B9)[3&iiU2E!HO2)R6K1c.$G
~>
<~F)uDDF)l;AEcH)=EH#l8Df0H1DJa6-D/=$)Chmg$C2%BrBkV0nBP1sjB4baeARo=^A7K+Z@q&nV@UW\R
@:<PO?XI,G?=$oC>[1K;>?b<9>$>'3=]nj/='&F'<`W7%<E3!t<)cdp;c?Rl;,L.d:f'tb:JX_\:/4MX
9MA,Q91qoM8kM]I8P)KE84Q0>7Rfj977BX56psF16UO4-6:!n&5X7S!5<h@r5!D.n4Zkhg4$,Mb3]];^
3B9)[3&iiU2E!HO2)R6K1c.$G1G^gC1,:R=0JG170/"t3/hSb//M/M).k<,#.Olkr-n$Jl-n$Gj-71&d
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
209.495 559.887 mo
205.088 559.887 li
174.426 530.726 li
172.364 528.765 172.282 525.503 174.244 523.44 cv
175.071 522.571 176.131 522.053 177.233 521.893 cv
177.199 521.927 177.165 521.961 177.132 521.997 cv
175.17 524.059 175.252 527.321 177.314 529.283 cv
209.495 559.887 li
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 559.887 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~>[1N<>?b65=]ed.<`W7$<E2sr;c6Lk:f'ta:JX\Z9h\5S8kM]I8P)HD84H'<77BX46UO1,69me$5<h@q
4Ztni4?>Ma3B9)Y2`EWQ2Dm?L1G^gB1,:O;0J>(4/M/P*/1`8#.Oceq-RU8g-71#b,pOWZ+sJ3R+<VaJ
*uu@B*#oq:)B'J2)&F)*()@Z"'GM2o'+toj&.fB`%hB*Y%1EXR$47+H#mghA#6kA:"9\i0!s8Q)!<<*"
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 559.887 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>?b<9>?Y35=]ed.=BAR)<`N."<E)pr;c6Lk;Gg:f:esk_:JOYZ9h\5S9M8#N8kDTG8OuBC84Q0>7R]a7
77BU46UO1,6:*t(5X7Ou5<h=q4Ztni4?P\e3]]8]3B9&Y2`EWQ2E!EM2)R3I1G^dA1,:R=0JG.50/"q1
/M/P*/1`>&.k3"t.4H\o-mpAh-71&c,pai_,U4NX+sJ3S+WqmL+!2RG*ZZ7@*#oq;)]BV4)&X;/(`*u(
()@Z$'bqDs',)#m&eYfi&J5Qc%hB0]%LrpW$k*OQ$O[:K#mgnE#RCY?"pP89"U,#3!s8W-!WiB'!!!!!
~>
<~>?b<9>?Y35=]ed.=BAR)<`N."<E)pr;c6Lk;Gg:f:esk_:JOYZ9h\5S9M8#N8kDTG8OuBC84Q0>7R]a7
77BU46UO1,6:*t(5X7Ou5<h=q4Ztni4?P\e3]]8]3B9&Y2`EWQ2E!EM2)R3I1G^dA1,:R=0JG.50/"q1
/M/P*/1`>&.k3"t.4H\o-mpAh-71&c,pai_,U4NX+sJ3S+WqmL+!2RG*ZZ7@*#oq;)]BV4)&X;/(`*u(
()@Z$'bqDs',)#m&eYfi&J5Qc%hB0]%LrpW$k*OQ$O[:K#mgnE#RCY?"pP89"U,#3!s8W-!WiB'!!!!!
~>
<~>?b<9>?Y35=]ed.=BAR)<`N."<E)pr;c6Lk;Gg:f:esk_:JOYZ9h\5S9M8#N8kDTG8OuBC84Q0>7R]a7
77BU46UO1,6:*t(5X7Ou5<h=q4Ztni4?P\e3]]8]3B9&Y2`EWQ2E!EM2)R3I1G^dA1,:R=0JG.50/"q1
/M/P*/1`>&.k3"t.4H\o-mpAh-71&c,pai_,U4NX+sJ3S+WqmL+!2RG*ZZ7@*#oq;)]BV4)&X;/(`*u(
()@Z$'bqDs',)#m&eYfi&J5Qc%hB0]%LrpW$k*OQ$O[:K#mgnE#RCY?"pP89"U,#3!s8W-!WiB'!!!!!
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
222.127 559.887 mo
209.495 559.887 li
177.314 529.283 li
175.252 527.321 175.17 524.059 177.132 521.997 cv
177.165 521.961 177.199 521.927 177.233 521.893 cv
178.234 520.897 179.55 520.395 180.867 520.395 cv
182.143 520.395 183.42 520.865 184.418 521.813 cv
220.525 556.152 li
221.548 557.125 222.127 558.474 222.127 559.887 cv
222.127 559.887 li
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 559.887 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qtp9eqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL$`q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q=sa[q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 559.887 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYL'bqYBs_q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'g\q"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
<~qYL'bqYBs_q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'g\q"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
<~qYL'bqYBs_q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'g\q"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
856.018 487.679 mo
249.466 487.679 li
162.815 487.679 li
154.873 487.679 148.374 494.177 148.374 502.12 cv
148.374 617.653 li
148.374 625.597 154.873 632.096 162.815 632.096 cv
249.466 632.096 li
856.018 632.096 li
863.96 632.096 870.459 625.597 870.459 617.653 cv
870.459 502.12 li
870.459 494.177 863.96 487.679 856.018 487.679 cv
cp
856.018 494.899 mo
860 494.899 863.238 498.138 863.238 502.12 cv
863.238 617.653 li
863.238 621.634 860 624.875 856.018 624.875 cv
249.466 624.875 li
162.815 624.875 li
158.834 624.875 155.595 621.634 155.595 617.653 cv
155.595 502.12 li
155.595 498.138 158.834 494.899 162.815 494.899 cv
249.466 494.899 li
856.018 494.899 li
0 .258824 .341176 rgb
f
856.018 623.431 mo
859.205 623.431 861.794 620.838 861.794 617.653 cv
861.794 502.12 li
861.794 498.933 859.205 496.344 856.018 496.344 cv
162.815 496.344 li
159.629 496.344 157.039 498.935 157.039 502.12 cv
157.039 617.653 li
157.039 620.838 159.629 623.431 162.815 623.431 cv
856.018 623.431 li
cp
162.815 493.455 mo
856.018 493.455 li
860.796 493.455 864.682 497.342 864.682 502.12 cv
864.682 617.653 li
864.682 622.432 860.796 626.319 856.018 626.319 cv
162.815 626.319 li
158.038 626.319 154.15 622.432 154.15 617.653 cv
154.15 502.12 li
154.15 497.342 158.038 493.455 162.815 493.455 cv
cp
.129412 .678431 .619608 rgb
f
813.868 847.286 mo
866.247 794.907 li
869.055 792.101 870.459 788.403 870.459 784.704 cv
870.459 784.688 li
870.459 780.989 869.055 777.291 866.247 774.483 cv
816.323 724.559 li
816.323 724.559 813.607 721.843 810.286 718.523 cv
806.967 715.204 798.293 712.489 791.011 712.489 cv
783.727 712.489 771.269 712.489 763.325 712.489 cv
758.872 712.489 li
750.929 712.489 737.931 712.489 729.988 712.489 cv
162.815 712.489 li
154.873 712.489 148.374 718.987 148.374 726.929 cv
148.374 842.464 li
148.374 850.407 154.873 856.906 162.815 856.906 cv
729.988 856.906 li
737.931 856.906 750.929 856.906 758.872 856.906 cv
763.325 856.906 li
771.269 856.906 783.727 856.906 791.011 856.906 cv
798.293 856.906 806.414 854.741 809.059 852.095 cv
811.705 849.451 813.868 847.286 813.868 847.286 cv
.952941 .784314 .388235 rgb
f
162.815 856.906 mo
249.934 856.906 li
249.934 712.489 li
162.815 712.489 li
154.873 712.489 148.374 718.987 148.374 726.929 cv
148.374 842.464 li
148.374 850.407 154.873 856.906 162.815 856.906 cv
.658824 .360784 .466667 rgb
f
190.7 759.111 mo
185.868 759.111 181.326 760.993 177.911 764.409 cv
170.858 771.462 170.858 782.937 177.911 789.992 cv
181.326 793.407 185.868 795.287 190.7 795.287 cv
195.531 795.287 200.073 793.407 203.489 789.99 cv
206.906 786.573 208.787 782.031 208.787 777.199 cv
208.787 772.368 206.906 767.825 203.489 764.409 cv
200.073 760.993 195.531 759.111 190.7 759.111 cv
190.7 803.533 mo
183.667 803.533 177.054 800.795 172.08 795.822 cv
161.812 785.552 161.812 768.846 172.08 758.578 cv
177.054 753.605 183.667 750.866 190.7 750.866 cv
197.734 750.866 204.347 753.605 209.32 758.578 cv
214.294 763.552 217.033 770.165 217.033 777.199 cv
217.033 784.234 214.294 790.847 209.32 795.821 cv
204.346 800.795 197.734 803.533 190.7 803.533 cv
0 0 0 rgb
f
232.118 822.741 mo
231.063 822.741 230.007 822.339 229.202 821.534 cv
203.489 795.822 li
201.879 794.211 201.879 791.602 203.489 789.991 cv
205.099 788.382 207.709 788.381 209.32 789.991 cv
235.033 815.702 li
236.643 817.313 236.643 819.923 235.033 821.534 cv
234.228 822.339 233.172 822.741 232.118 822.741 cv
cp
f
193.588 757.668 mo
188.758 757.668 184.215 759.55 180.799 762.966 cv
173.747 770.017 173.747 781.493 180.799 788.548 cv
184.215 791.962 188.758 793.843 193.588 793.843 cv
198.42 793.843 202.961 791.962 206.377 788.547 cv
209.794 785.13 211.676 780.587 211.676 775.756 cv
211.676 770.924 209.794 766.382 206.377 762.966 cv
202.961 759.55 198.42 757.668 193.588 757.668 cv
193.588 802.089 mo
186.554 802.089 179.942 799.351 174.968 794.378 cv
164.701 784.109 164.702 767.401 174.968 757.135 cv
179.942 752.161 186.555 749.422 193.588 749.422 cv
200.622 749.422 207.235 752.161 212.208 757.135 cv
217.183 762.108 219.922 768.722 219.922 775.756 cv
219.922 782.79 217.183 789.403 212.208 794.377 cv
207.234 799.351 200.622 802.089 193.588 802.089 cv
.972549 .972549 .972549 rgb
f
235.005 821.296 mo
233.951 821.296 232.896 820.894 232.091 820.088 cv
206.377 794.378 li
204.767 792.768 204.767 790.157 206.377 788.547 cv
207.989 786.937 210.6 786.938 212.208 788.547 cv
237.921 814.258 li
239.531 815.868 239.531 818.478 237.921 820.088 cv
237.116 820.894 236.061 821.296 235.005 821.296 cv
cp
f
870.459 784.697 mo
249.934 784.697 li
249.934 712.489 li
729.988 712.489 li
737.931 712.489 750.929 712.489 758.872 712.489 cv
763.325 712.489 li
771.269 712.489 783.727 712.489 791.011 712.489 cv
798.293 712.489 806.967 715.204 810.286 718.523 cv
813.607 721.843 816.323 724.559 816.323 724.559 cv
866.247 774.483 li
869.055 777.291 870.459 780.989 870.459 784.688 cv
870.459 784.697 li
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~pY;84gme&mRJ5I(pY2)0g6_QfQM9*upXtf*fou0`P5!Ukp=PK#fT>gZO7q1cp=G;ter9=RMtY_Zp=>,p
eVNqLM"]ARp=+ije:mVGK_<fHp!\Ncdt78@JG%?@p!S?_d=1c9IJ)!8p!A'Yd!GB3HM,X0p!7mUcZf$-
G4a(&oZhRNc?&X&EqIUroZ_@Ib]!-tDtM7koZM+DbA?goC\5ebo?(e=b%^IiBCj5Xo>tS8a^t(bAFmlP
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@\+Op%A"Np%A"Np%A"N
p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%@tLo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeIoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFo()ABo()ABo()ABo()ABo()ABo()ABo()AB
~>
<~gY:K;gY:K;gY1B8g=k97g=k97g=b04g"G'3g"G'3g"=s0f\"j/f\"j/f[na,f@SX+f@SX+f@SX+f@JO(
f%/F'f%/C%e^`4#e^`4#e^`4#e^`1!eC<!teC<!teC;sre'ldpe'ldpe'landaHRldaHRldaHOjdF$@h
dF$@hdF$@gd*U.dd*U.dd*U.ccd0q`cd0q`cd0q`cd0q_cHa_\cHa_\cHa_[c-=MXc-=MXc-=MWbfn;T
bfn;Tbfn;TbKJ)PbKJ)PbKJ)Pb0%lLb0%lLb0%lLb0%lLaiVZHaiVZHaiVZHaN2HDaN2HDaN2HDa2c6@
~>
<~R[T\6R[T\5R@'A/R$a8.R$X/+Q^3r'QBd`#Q'@MtP`q;pPEM)lP*(lhOcYZdOH5H`O,o?_O,f6\NfB$X
NK&mUN/W[QMi3IMMMd7IM2@(GLkphALPLY?L5(D9KnY57KnY25KS4u1K7ec-JqAQ)JUrB'J:N-!It)rt
It)rsIXZ`oI=6NkI!g<gH[C*cH?sm_H$O[\H$FRXGB\7TGB\7SG'8%OF`hhKFEDVGF)uDCEcQ2?EH,u;
E,]c8Df9Q4DJj?0DJj?0D/F-,Ci!p(CMR^$C2.KuBk_9qBP;'mBP;$kAnGXeAnGUcA7T4]A7T4]@q0"Y
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
249.934 784.697 mo
218.372 784.697 li
219.391 781.867 219.922 778.852 219.922 775.756 cv
219.922 768.722 217.183 762.108 212.208 757.135 cv
207.235 752.161 200.622 749.422 193.588 749.422 cv
188.886 749.422 184.371 750.647 180.408 752.945 cv
177.335 754.249 174.512 756.146 172.08 758.578 cv
165.022 765.636 162.816 775.736 165.461 784.697 cv
148.374 784.697 li
148.374 726.929 li
148.374 718.987 154.873 712.489 162.815 712.489 cv
249.934 712.489 li
249.934 784.697 li
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~a-WaFQDhfgVT+jt`KR.;P,-$YUVr7h_iLP0NhO=LTYc\]_2Fo$Mk7bBS\U)P^keMqLRZ&5R_FKD]nDfe
K:'<'Qb7m8]7?0YJ!@NoPe)=-\UBXOI$2!dOgo_![s=%DG`K4VNOF"i[<7G9FGmPKMmRM^ZuV#0E/:i>
LpCrRZ>PE%D2#62KWo6EY\JfoBnEL$JZ`[;X_**cAq-mmI]R(.X($IW@XP1`H`CJ"WF'qM??rJTGc4kk
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`l?$<`l?$<`l5p9`Pog8`Pf^5`5KU4`5BL1_o'C0_ns:-_SX1,_SO()_83t(_8*k%^qdb$^qdb$^q[Y!
^V@Ou^V@Ls^:q=q^:q:o]tM(k]Y(ni]Y(kg]=Y\e]=YYc]"5Ja]"5G_\[f8]\[f5[\@B&Y\@B#W\$riU
\$riT[^NWQ[^NWP[C*EM[C*EL['[3I['[3I['[3HZa7!EZa7!DZEgdAZEgd@Z*CR=Z*CR<Yct@9Yct@8
YHP.5YHP.5Y-+q1Xf\_-Xf\_-XK8M)XK8M)X/i;%X/i;%WiE)!WiE)!WMukrWMukrW2QYnW2QYnVl-Gj
~>
<~QBmi&QBd`#Q'@MtP`q;pPEM)lP*(lhOcYZdOH5H`O,f6\NfB$XNJrgTN/W^RMi*CLMMd:KMM[1HM26tD
LkphALPLV=L5(D9KnY25KS4u1K7ec-JqAQ)JUr?%J:N-!It)orIXZ`pIXZ]nI=6KjI!g9fH[C'bH?sj^
H$O[[G^+IWGB\7SG'8%OF`hhKFEDVGF)uDDF)l;@EH,u<EH#l8Df9Q4Df9Q3DJj?/D/F-+Ci!p'CMR^#
C2.KuBk_9qBP;'mB4kjiB4kggAS#FaAS#C_@q0"Y@q/tW@:<SQ@:<PO?XI/I?XI/I?=$rE?!U`A>[1N=
~>
<~Vl-GjVl-GiVPU,cV5:#bV50o_Una][US=KWU8"BVU7n9STqJ'OTV%jKT:_aISt2FCSXl=BSXc4?S=?";
S"#n:S"#k8R[TY4R@0G0R$a8.R$a5,Q^=#(QBmf$Q'ISuPa%AqPEV2oPEV/mP*1riOcbcgOcb`eOH>Na
O,o?^NfK-ZNK&pVN/W^SN/W^RMi3LNMMd:KMMd:JM2@(FLkpkBLPLY?LPCP;KnY57KnY56KS5#2K7ef.
JqAT+JqAT+JUrB'J:N0#J:N0#It)rtIXZ`pI=6NlI!g<hH[C*dH[C*dH?sm`H$O[\G^+IXG^+IXGB\7T
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
168.822 784.697 mo
165.461 784.697 li
162.816 775.736 165.022 765.636 172.08 758.578 cv
174.512 756.146 177.335 754.249 180.408 752.945 cv
178.444 754.084 176.616 755.487 174.968 757.135 cv
167.529 764.574 165.48 775.394 168.822 784.697 cv
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
207.171 784.697 mo
177.863 784.697 li
173.942 777.794 174.921 768.843 180.799 762.966 cv
181.809 761.955 182.918 761.079 184.104 760.346 cv
186.178 759.535 188.406 759.111 190.7 759.111 cv
195.531 759.111 200.073 760.993 203.489 764.409 cv
206.906 767.825 208.787 772.368 208.787 777.199 cv
208.787 779.829 208.23 782.373 207.171 784.697 cv
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
209.321 784.697 mo
207.171 784.697 li
208.23 782.373 208.787 779.829 208.787 777.199 cv
208.787 772.368 206.906 767.825 203.489 764.409 cv
200.073 760.993 195.531 759.111 190.7 759.111 cv
188.406 759.111 186.178 759.535 184.104 760.346 cv
186.927 758.601 190.187 757.668 193.588 757.668 cv
198.42 757.668 202.961 759.55 206.377 762.966 cv
209.794 766.382 211.676 770.924 211.676 775.756 cv
211.676 778.941 210.858 782.002 209.321 784.697 cv
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
218.372 784.697 mo
209.321 784.697 li
210.858 782.002 211.676 778.941 211.676 775.756 cv
211.676 770.924 209.794 766.382 206.377 762.966 cv
202.961 759.55 198.42 757.668 193.588 757.668 cv
190.187 757.668 186.927 758.601 184.104 760.346 cv
182.918 761.079 181.809 761.955 180.799 762.966 cv
174.921 768.843 173.942 777.794 177.863 784.697 cv
168.822 784.697 li
165.48 775.394 167.529 764.574 174.968 757.135 cv
176.616 755.487 178.444 754.084 180.408 752.945 cv
184.371 750.647 188.886 749.422 193.588 749.422 cv
200.622 749.422 207.235 752.161 212.208 757.135 cv
217.183 762.108 219.922 768.722 219.922 775.756 cv
219.922 778.852 219.391 781.867 218.372 784.697 cv
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 784.697 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
791.011 712.489 mo
783.727 712.489 771.269 712.489 763.325 712.489 cv
758.872 712.489 li
750.929 712.489 737.931 712.489 729.988 712.489 cv
162.815 712.489 li
154.873 712.489 148.374 718.987 148.374 726.93 cv
148.374 842.464 li
148.374 850.407 154.873 856.906 162.815 856.906 cv
729.988 856.906 li
737.931 856.906 750.929 856.906 758.872 856.906 cv
763.325 856.906 li
771.269 856.906 783.727 856.906 791.011 856.906 cv
798.293 856.906 806.414 854.741 809.06 852.095 cv
811.705 849.451 813.869 847.286 813.869 847.286 cv
866.248 794.907 li
869.055 792.102 870.459 788.403 870.459 784.704 cv
870.459 784.688 li
870.459 780.989 869.055 777.291 866.248 774.483 cv
816.323 724.559 li
816.323 724.559 813.606 721.843 810.286 718.522 cv
806.967 715.204 798.293 712.489 791.011 712.489 cv
cp
791.011 719.709 mo
797.368 719.709 803.799 722.247 805.181 723.629 cv
811.217 729.667 li
861.14 779.588 li
862.494 780.942 863.238 782.753 863.238 784.701 cv
863.238 786.639 862.494 788.451 861.14 789.803 cv
808.763 842.18 li
804.025 846.919 li
802.75 847.873 797.103 849.684 791.011 849.684 cv
763.325 849.684 li
758.872 849.684 li
729.988 849.684 li
162.815 849.684 li
158.834 849.684 155.595 846.445 155.595 842.464 cv
155.595 726.93 li
155.595 722.947 158.834 719.709 162.815 719.709 cv
729.988 719.709 li
758.872 719.709 li
763.325 719.709 li
791.011 719.709 li
0 .290196 .231373 rgb
f
162.815 721.876 mo
160.028 721.876 157.761 724.141 157.761 726.93 cv
157.761 842.464 li
157.761 845.251 160.028 847.519 162.815 847.519 cv
791.011 847.519 li
796.666 847.519 801.632 845.845 802.637 845.243 cv
859.608 788.271 li
860.553 787.326 861.073 786.059 861.073 784.701 cv
861.073 783.337 860.553 782.065 859.608 781.12 cv
803.649 725.162 li
802.82 724.343 797.013 721.876 791.011 721.876 cv
162.815 721.876 li
cp
791.011 851.851 mo
162.815 851.851 li
157.64 851.851 153.428 847.639 153.428 842.464 cv
153.428 726.93 li
153.428 721.754 157.64 717.543 162.815 717.543 cv
791.011 717.543 li
797.816 717.543 804.856 720.239 806.712 722.098 cv
862.672 778.057 li
864.435 779.82 865.405 782.18 865.405 784.701 cv
865.405 787.218 864.435 789.571 862.672 791.333 cv
805.322 848.652 li
803.579 849.959 797.478 851.851 791.011 851.851 cv
cp
1 1 1 rgb
f
813.868 1497.02 mo
866.247 1444.65 li
869.055 1441.84 870.459 1438.14 870.459 1434.44 cv
870.459 1434.43 li
870.459 1430.73 869.055 1427.03 866.247 1424.22 cv
816.323 1374.3 li
816.323 1374.3 813.607 1371.58 810.286 1368.26 cv
806.967 1364.94 798.293 1362.23 791.011 1362.23 cv
783.727 1362.23 771.269 1362.23 763.325 1362.23 cv
758.872 1362.23 li
750.929 1362.23 737.931 1362.23 729.988 1362.23 cv
162.815 1362.23 li
154.873 1362.23 148.374 1368.73 148.374 1376.67 cv
148.374 1492.2 li
148.374 1500.15 154.873 1506.64 162.815 1506.64 cv
729.988 1506.64 li
737.931 1506.64 750.929 1506.64 758.872 1506.64 cv
763.325 1506.64 li
771.269 1506.64 783.727 1506.64 791.011 1506.64 cv
798.293 1506.64 806.414 1504.48 809.059 1501.83 cv
811.705 1499.19 813.868 1497.02 813.868 1497.02 cv
.721569 .909804 .721569 rgb
f
162.815 1506.64 mo
249.934 1506.64 li
249.934 1362.23 li
162.815 1362.23 li
154.873 1362.23 148.374 1368.73 148.374 1376.67 cv
148.374 1492.2 li
148.374 1500.15 154.873 1506.64 162.815 1506.64 cv
0 .258824 .341176 rgb
f
870.459 1434.44 mo
249.934 1434.44 li
249.934 1362.23 li
729.988 1362.23 li
737.931 1362.23 750.929 1362.23 758.872 1362.23 cv
763.325 1362.23 li
771.269 1362.23 783.727 1362.23 791.011 1362.23 cv
798.293 1362.23 806.967 1364.94 810.286 1368.26 cv
813.607 1371.58 816.323 1374.3 816.323 1374.3 cv
866.247 1424.22 li
869.055 1427.03 870.459 1430.73 870.459 1434.43 cv
870.459 1434.44 li
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 1434.44 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~ddY]4nBoYQdF%I2d.#E/nBfMMcd2(+cL9'(n'92Hc->_%c0rp$n''#DbffFtbO3Qsm`Wc@b0'.pb3mEo
m`ET<aiNkjaR.'hmDm97a2dSf`pLdcmDd-3`Pq2_`U(R^m)6j/`5CrZ_sG:YlbgU*_SYWU_<\qRlbUF'
_8,BP_!AeNlG(+!^V9!I^?WGHlFsss]tN^E]]m)Al+F[n]Y!F?]BQr>l+=Ok]"7.;\`gT7kde4e\@Cb4
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 1434.44 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~dF$@hdEp7ed*U.dd*U.dd*L%acd0q`cd'h]cHa_\cHXVYc-=MXc-4DUbfn;Tbfn;Tbfe2QbKJ)PbK@uM
b0%lLb0%lLb0%iJaiVZHaiVZHaiVWFaN2HDaN2EBa2c6@a2c3>`l?$<`l?$<`l?!:`Pog8`Pod6`5KU4
`5KU4`5KU3_o'C0_o'C/_SX1,_SX1,_SX1+_83t(_83t'^qdb$^qdb$^qdb#^V@Ou^V@Ot^:q=q^:q=p
]tM+m]tM+m]tM+m]Y(ni]Y(ni]=Y\e]=Y\e]=Y\e]"5Ja]"5Ja]"5Ja\[f8]\[f8]\@B&Y\@B&Y\$riU
~>
<~n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*]W3mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2md9E/mHs<.
mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs9,m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O'(lg*m&
lg*m&lg*m&lg*m&lg*m&lg*m&lg*m%lK[["lK[["lK[["lK[["lK[["lK[["lK[["lK[[!l07Hsl07Hs
l07Hsl07Hsl07Hsl07Hsl07Hskih6okih6okih6okih6okih6okih6okih6okih6okND$kkND$kkND$k
~>
<~dF$@hdEp7ed*U.dd*U.dd*L%acd0q`cd'h]cHa_\cHXVYc-=MXc-4DUbfn;Tbfn;Tbfe2QbKJ)PbK@uM
b0%lLb0%lLb0%iJaiVZHaiVZHaiVWFaN2HDaN2EBa2c6@a2c3>`l?$<`l?$<`l?!:`Pog8`Pod6`5KU4
`5KU4`5KU3_o'C0_o'C/_SX1,_SX1,_SX1+_83t(_83t'^qdb$^qdb$^qdb#^V@Ou^V@Ot^:q=q^:q=p
]tM+m]tM+m]tM+m]Y(ni]Y(ni]=Y\e]=Y\e]=Y\e]"5Ja]"5Ja]"5Ja\[f8]\[f8]\@B&Y\@B&Y\$riU
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
249.934 1434.44 mo
148.374 1434.44 li
148.374 1376.67 li
148.374 1368.73 154.873 1362.23 162.815 1362.23 cv
249.934 1362.23 li
249.934 1434.44 li
level3{
gsave
clp
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 1434.44 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~>_\JIKp,YmP$!@!<e?E5JWE`[N`(@d:jn9uI>^gHMG/>Q8pQ4aG_\h6L.6??7<O8NFFuo$Jj==,5B26;
DgsleIl_Fp3Ga+&CO7sSHSoM`1MD%hB6Z+BG;!NN/RroS@rs2/F"(L;-XUj??>q2rD^/M),$Sn,>&59`
CE6Jk**6hm<G37MB,=KY(/e]X;.L>:A.h[J&5H[F9jnK)?jo\8$;"P18R2Qk>R!Z%"@ZJr6s0OX=9(Zh
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.15631e-6 -72.208 72.208 -3.15631e-6 509.417 1434.44 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>?b<9>?Y35=]ed.=BAR)<`N."<E)pr;c6Lk;Gg:f:esk_:JOYZ9h\5S9M8#N8kDTG8OuBC84Q0>7R]a7
77BU46UO1,6:*t(5X7Ou5<h=q4Ztni4?P\e3]]8]3B9&Y2`EWQ2E!EM2)R3I1G^dA1,:R=0JG.50/"q1
/M/P*/1`>&.k3"t.4H\o-mpAh-71&c,pai_,U4NX+sJ3S+WqmL+!2RG*ZZ7@*#oq;)]BV4)&X;/(`*u(
()@Z$'bqDs',)#m&eYfi&J5Qc%hB0]%LrpW$k*OQ$O[:K#mgnE#RCY?"pP89"U,#3!s8W-!WiB'!!!!!
~>
<~KnY57KnP,4KS+o0K7\],Jq8K(JUi9$J:E&uIsuipI=-EiI!g<gH[:!aH?jd]H$FRYG^"@UGBS.QG'.qM
F`heJFEDSFF)uABEH,r:E,]c8Df9N2DJj<.D/F**Ci!m&CMR["C2.HsBk_6oBP;$kB4kggAnGUcAS#C_
@q0"X@U`eU@UW\Q?smAL?XI/H?=$rD?!U`@>[1N<>?b<8>$>*4=]nm0=BAR)<`W7%<`N.!<)cgr<)Z^n
;GpCj;,L1f:f'tb:JXb^:/4PZ9he>V9MA,R91qoN8kMZH84Z9B84Z6@7Rfj:77BX66psF26UO4.6:+"*
~>
<~PEV2oPEM)lP*(lhOcYZdOH5H`O,f6\NfB$XNJrgTN/NUPMi*CLMM[1HM26tDLkgb@LPCP<L4t>8KnP,4
KS4u1K7ec-JqAQ)JUr?%J:N0#It)orIXZ`pI=6KjI!g<hH[C'bH?sm`H?sj^H$OXZG^+FVGB\4RG'8"N
F`hhKFEDVGF)uDCEcQ2?EH,u;E,]c7Df9Q3DJj?/D/F-+Ci!p'CMR^#C2.KtBk_9pBP;'lB4kjhAnGXd
AS#FaA7T4]@q0"Y@q0"Y@U`eU@:<SQ?smAM?XI/I?=$rE?!U`A>[1N=>?b<9>$>*5=]nm1=BJ[-='&I)
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
791.011 1362.23 mo
783.727 1362.23 771.269 1362.23 763.325 1362.23 cv
758.872 1362.23 li
750.929 1362.23 737.931 1362.23 729.988 1362.23 cv
162.815 1362.23 li
154.873 1362.23 148.374 1368.73 148.374 1376.67 cv
148.374 1492.2 li
148.374 1500.15 154.873 1506.64 162.815 1506.64 cv
729.988 1506.64 li
737.931 1506.64 750.929 1506.64 758.872 1506.64 cv
763.325 1506.64 li
771.269 1506.64 783.727 1506.64 791.011 1506.64 cv
798.293 1506.64 806.414 1504.48 809.06 1501.83 cv
811.705 1499.19 813.869 1497.02 813.869 1497.02 cv
866.248 1444.65 li
869.055 1441.84 870.459 1438.14 870.459 1434.44 cv
870.459 1434.43 li
870.459 1430.73 869.055 1427.03 866.248 1424.22 cv
816.323 1374.3 li
816.323 1374.3 813.606 1371.58 810.286 1368.26 cv
806.967 1364.94 798.293 1362.23 791.011 1362.23 cv
cp
791.011 1369.45 mo
797.368 1369.45 803.799 1371.99 805.181 1373.37 cv
811.217 1379.41 li
861.14 1429.33 li
862.494 1430.68 863.238 1432.49 863.238 1434.44 cv
863.238 1436.38 862.494 1438.19 861.14 1439.54 cv
808.763 1491.92 li
804.025 1496.66 li
802.75 1497.61 797.103 1499.42 791.011 1499.42 cv
763.325 1499.42 li
758.872 1499.42 li
729.988 1499.42 li
162.815 1499.42 li
158.834 1499.42 155.595 1496.18 155.595 1492.2 cv
155.595 1376.67 li
155.595 1372.68 158.834 1369.45 162.815 1369.45 cv
729.988 1369.45 li
758.872 1369.45 li
763.325 1369.45 li
791.011 1369.45 li
.423529 .203922 .14902 rgb
f
162.815 1371.61 mo
160.028 1371.61 157.761 1373.88 157.761 1376.67 cv
157.761 1492.2 li
157.761 1494.99 160.028 1497.26 162.815 1497.26 cv
791.011 1497.26 li
796.666 1497.26 801.632 1495.58 802.637 1494.98 cv
859.608 1438.01 li
860.553 1437.06 861.073 1435.8 861.073 1434.44 cv
861.073 1433.08 860.553 1431.8 859.608 1430.86 cv
803.649 1374.9 li
802.82 1374.08 797.013 1371.61 791.011 1371.61 cv
162.815 1371.61 li
cp
791.011 1501.59 mo
162.815 1501.59 li
157.64 1501.59 153.428 1497.38 153.428 1492.2 cv
153.428 1376.67 li
153.428 1371.49 157.64 1367.28 162.815 1367.28 cv
791.011 1367.28 li
797.816 1367.28 804.856 1369.98 806.712 1371.84 cv
862.672 1427.8 li
864.435 1429.56 865.405 1431.92 865.405 1434.44 cv
865.405 1436.96 864.435 1439.31 862.672 1441.07 cv
805.322 1498.39 li
803.579 1499.7 797.478 1501.59 791.011 1501.59 cv
cp
1 1 1 rgb
f
227.393 1464.7 mo
226.337 1464.7 225.282 1464.29 224.477 1463.49 cv
175.091 1414.1 li
173.481 1412.49 173.481 1409.88 175.091 1408.27 cv
176.702 1406.66 179.313 1406.66 180.923 1408.27 cv
230.308 1457.66 li
231.918 1459.27 231.918 1461.88 230.308 1463.49 cv
229.502 1464.29 228.448 1464.7 227.393 1464.7 cv
cp
0 0 0 rgb
f
178.01 1464.7 mo
176.954 1464.7 175.899 1464.29 175.093 1463.49 cv
173.483 1461.88 173.483 1459.27 175.093 1457.66 cv
224.479 1408.27 li
226.09 1406.66 228.7 1406.66 230.31 1408.27 cv
231.92 1409.88 231.92 1412.49 230.31 1414.1 cv
180.925 1463.49 li
180.12 1464.29 179.064 1464.7 178.01 1464.7 cv
cp
f
230.282 1463.25 mo
229.226 1463.25 228.171 1462.85 227.365 1462.04 cv
177.981 1412.66 li
176.371 1411.05 176.371 1408.44 177.981 1406.83 cv
179.592 1405.22 182.201 1405.22 183.812 1406.83 cv
233.197 1456.21 li
234.807 1457.82 234.807 1460.43 233.197 1462.04 cv
232.392 1462.85 231.336 1463.25 230.282 1463.25 cv
cp
.972549 .972549 .972549 rgb
f
180.897 1463.25 mo
179.842 1463.25 178.787 1462.85 177.982 1462.04 cv
176.372 1460.43 176.372 1457.82 177.982 1456.21 cv
227.367 1406.83 li
228.978 1405.22 231.587 1405.22 233.198 1406.83 cv
234.808 1408.44 234.808 1411.05 233.198 1412.66 cv
183.813 1462.04 li
183.007 1462.85 181.953 1463.25 180.897 1463.25 cv
cp
f
870.459 363.822 mo
870.459 387.65 850.963 407.147 827.134 407.147 cv
191.7 407.147 li
167.871 407.147 148.374 387.65 148.374 363.822 cv
148.374 306.055 li
148.374 282.226 167.871 262.729 191.7 262.729 cv
827.134 262.729 li
850.963 262.729 870.459 282.226 870.459 306.055 cv
870.459 363.822 li
.960784 .462745 .423529 rgb
f
148.373 307.945 mo
148.373 307.844 148.373 307.743 148.373 307.642 cv
148.373 307.621 148.373 307.599 148.373 307.578 cv
148.373 307.426 148.373 307.274 148.373 307.121 cv
148.373 307.099 148.373 307.077 148.373 307.055 cv
148.373 306.727 148.373 306.393 148.373 306.055 cv
148.374 305.967 148.374 305.877 148.375 305.79 cv
148.375 305.878 148.374 305.966 148.374 306.055 cv
148.374 307.943 li
148.373 307.945 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 3.36 147.84 1691.36 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 7 
/M[3 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjqu~>
<~nF5r:nF5r:nF5r:nF5r:nF5r:n,~>
<~e^`4#e^`4#e^`4#e^`4#e^`7%ec~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
148.374 334.938 mo
148.374 334.915 148.374 334.893 148.374 334.87 cv
148.374 334.532 148.374 334.199 148.374 333.871 cv
148.374 333.849 148.374 333.827 148.374 333.806 cv
148.374 333.653 148.374 333.501 148.374 333.35 cv
148.374 333.328 148.374 333.307 148.374 333.285 cv
148.374 333.135 148.374 332.985 148.374 332.836 cv
148.374 332.815 148.374 332.794 148.374 332.773 cv
148.374 332.709 148.374 332.646 148.374 332.582 cv
148.374 332.561 148.374 332.54 148.374 332.519 cv
148.374 332.456 148.374 332.393 148.374 332.33 cv
148.374 332.309 148.374 332.288 148.374 332.267 cv
148.374 332.121 148.374 331.976 148.374 331.831 cv
148.374 331.81 148.374 331.79 148.374 331.769 cv
148.374 331.707 148.374 331.646 148.374 331.584 cv
148.374 331.564 148.374 331.543 148.374 331.523 cv
148.374 331.461 148.374 331.4 148.374 331.339 cv
148.374 331.319 148.374 331.298 148.374 331.278 cv
148.374 331.136 148.374 330.994 148.374 330.853 cv
148.374 330.833 148.374 330.813 148.374 330.793 cv
148.374 330.773 148.374 330.753 148.374 330.733 cv
148.374 330.713 148.374 330.693 148.374 330.673 cv
148.374 330.653 148.374 330.633 148.374 330.613 cv
148.374 330.593 148.374 330.573 148.374 330.553 cv
148.374 330.493 148.374 330.434 148.374 330.374 cv
148.374 330.354 148.374 330.335 148.374 330.315 cv
148.374 330.255 148.374 330.196 148.374 330.137 cv
148.374 330.117 148.374 330.097 148.374 330.078 cv
148.374 330.019 148.374 329.96 148.374 329.901 cv
148.374 329.881 148.374 329.862 148.374 329.842 cv
148.374 329.823 148.374 329.803 148.374 329.784 cv
148.374 329.764 148.374 329.745 148.374 329.725 cv
148.374 329.706 148.374 329.686 148.374 329.667 cv
148.374 329.647 148.374 329.628 148.374 329.608 cv
148.374 329.55 148.374 329.492 148.374 329.434 cv
148.374 329.414 148.374 329.395 148.374 329.376 cv
148.374 329.318 148.374 329.26 148.374 329.202 cv
148.374 329.183 148.374 329.164 148.374 329.145 cv
148.374 329.087 148.374 329.029 148.374 328.972 cv
148.374 328.953 148.374 328.934 148.374 328.915 cv
148.374 328.896 148.374 328.876 148.374 328.857 cv
148.374 328.838 148.374 328.819 148.374 328.8 cv
148.374 328.781 148.374 328.762 148.374 328.743 cv
148.374 328.724 148.374 328.705 148.374 328.686 cv
148.374 328.629 148.374 328.572 148.374 328.516 cv
148.374 328.497 148.374 328.478 148.374 328.459 cv
148.374 328.44 148.374 328.421 148.374 328.402 cv
148.374 328.383 148.374 328.365 148.374 328.346 cv
148.374 328.327 148.374 328.308 148.374 328.289 cv
148.374 328.27 148.374 328.252 148.374 328.233 cv
148.374 328.176 148.374 328.12 148.374 328.064 cv
148.374 328.045 148.374 328.027 148.374 328.008 cv
148.374 327.989 148.374 327.971 148.374 327.952 cv
148.374 327.933 148.374 327.915 148.374 327.896 cv
148.374 327.877 148.374 327.859 148.374 327.84 cv
148.374 327.822 148.374 327.803 148.374 327.784 cv
148.374 327.729 148.374 327.673 148.374 327.617 cv
148.374 327.599 148.374 327.58 148.374 327.562 cv
148.374 327.543 148.374 327.525 148.374 327.506 cv
148.374 327.488 148.374 327.47 148.374 327.451 cv
148.374 327.433 148.374 327.414 148.374 327.396 cv
148.374 327.377 148.374 327.359 148.374 327.341 cv
148.374 327.285 148.374 327.23 148.374 327.175 cv
148.374 327.157 148.374 327.139 148.374 327.12 cv
148.374 327.102 148.374 327.084 148.374 327.065 cv
148.374 327.047 148.374 327.029 148.374 327.011 cv
148.374 326.992 148.374 326.974 148.374 326.956 cv
148.374 326.938 148.374 326.919 148.374 326.901 cv
148.374 326.883 148.374 326.865 148.374 326.846 cv
148.374 326.828 148.374 326.81 148.374 326.792 cv
148.374 326.774 148.374 326.755 148.374 326.737 cv
148.374 326.719 148.374 326.701 148.374 326.683 cv
148.374 326.665 148.374 326.647 148.374 326.628 cv
148.374 326.61 148.374 326.592 148.374 326.574 cv
148.374 326.556 148.374 326.538 148.374 326.52 cv
148.374 326.502 148.374 326.484 148.374 326.466 cv
148.374 326.411 148.374 326.357 148.374 326.303 cv
148.374 326.285 148.374 326.267 148.374 326.249 cv
148.374 326.231 148.374 326.213 148.374 326.195 cv
148.374 326.177 148.374 326.159 148.374 326.142 cv
148.374 326.124 148.374 326.106 148.374 326.088 cv
148.374 326.07 148.374 326.052 148.374 326.034 cv
148.374 326.016 148.374 325.998 148.374 325.98 cv
148.374 325.962 148.374 325.944 148.374 325.927 cv
148.374 325.909 148.374 325.891 148.374 325.873 cv
148.374 325.855 148.374 325.837 148.374 325.819 cv
148.374 325.802 148.374 325.784 148.374 325.766 cv
148.374 325.748 148.374 325.73 148.374 325.713 cv
148.374 325.695 148.374 325.677 148.374 325.659 cv
148.374 325.641 148.374 325.624 148.374 325.606 cv
148.374 325.553 148.374 325.499 148.374 325.446 cv
148.374 325.428 148.374 325.411 148.374 325.393 cv
148.374 325.375 148.374 325.358 148.374 325.34 cv
148.374 325.322 148.374 325.305 148.374 325.287 cv
148.374 325.269 148.374 325.252 148.374 325.234 cv
148.374 325.216 148.374 325.199 148.374 325.181 cv
148.374 325.163 148.374 325.146 148.374 325.128 cv
148.374 325.111 148.374 325.093 148.374 325.075 cv
148.374 325.058 148.374 325.04 148.374 325.023 cv
148.374 325.005 148.374 324.987 148.374 324.97 cv
148.374 324.952 148.374 324.935 148.374 324.917 cv
148.374 324.9 148.374 324.882 148.374 324.864 cv
148.374 324.847 148.374 324.829 148.374 324.812 cv
148.374 324.794 148.374 324.777 148.374 324.759 cv
148.374 324.742 148.374 324.724 148.374 324.707 cv
148.374 324.689 148.374 324.672 148.374 324.654 cv
148.374 324.637 148.374 324.619 148.374 324.602 cv
148.374 324.584 148.374 324.567 148.374 324.549 cv
148.374 324.532 148.374 324.514 148.374 324.497 cv
148.374 324.48 148.374 324.462 148.374 324.445 cv
148.374 324.427 148.374 324.41 148.374 324.392 cv
148.374 324.375 148.374 324.358 148.374 324.34 cv
148.374 324.323 148.374 324.305 148.374 324.288 cv
148.374 324.271 148.374 324.253 148.374 324.236 cv
148.374 324.218 148.374 324.201 148.374 324.184 cv
148.374 324.166 148.374 324.149 148.374 324.132 cv
148.374 324.114 148.374 324.097 148.374 324.079 cv
148.374 324.062 148.374 324.045 148.374 324.027 cv
148.374 324.01 148.374 323.993 148.374 323.975 cv
148.374 323.958 148.374 323.941 148.374 323.924 cv
148.374 323.872 148.374 323.82 148.374 323.768 cv
148.374 323.751 148.374 323.733 148.374 323.716 cv
148.374 323.699 148.374 323.682 148.374 323.664 cv
148.374 323.647 148.374 323.63 148.374 323.613 cv
148.374 323.595 148.374 323.578 148.374 323.561 cv
148.374 323.544 148.374 323.526 148.374 323.509 cv
148.374 323.492 148.374 323.475 148.374 323.458 cv
148.374 323.44 148.374 323.423 148.374 323.406 cv
148.374 323.389 148.374 323.371 148.374 323.354 cv
148.374 323.337 148.374 323.32 148.374 323.303 cv
148.374 323.286 148.374 323.268 148.374 323.251 cv
148.374 323.234 148.374 323.217 148.374 323.2 cv
148.374 323.183 148.374 323.165 148.374 323.148 cv
148.374 323.131 148.374 323.114 148.374 323.097 cv
148.374 323.08 148.374 323.062 148.374 323.045 cv
148.374 323.028 148.374 323.011 148.374 322.994 cv
148.374 322.977 148.374 322.96 148.374 322.943 cv
148.374 322.925 148.374 322.908 148.374 322.891 cv
148.374 322.874 148.374 322.857 148.374 322.84 cv
148.374 322.823 148.374 322.806 148.374 322.789 cv
148.374 322.771 148.374 322.754 148.374 322.737 cv
148.374 322.72 148.374 322.703 148.374 322.686 cv
148.374 322.669 148.374 322.652 148.374 322.635 cv
148.374 322.618 148.374 322.601 148.374 322.584 cv
148.374 322.566 148.374 322.549 148.374 322.532 cv
148.374 322.515 148.374 322.498 148.374 322.481 cv
148.374 322.464 148.374 322.447 148.374 322.43 cv
148.374 322.413 148.374 322.396 148.374 322.379 cv
148.374 322.362 148.374 322.345 148.374 322.328 cv
148.374 322.311 148.374 322.294 148.374 322.277 cv
148.374 322.26 148.374 322.243 148.374 322.226 cv
148.374 322.209 148.374 322.192 148.374 322.175 cv
148.374 322.158 148.374 322.141 148.374 322.124 cv
148.374 322.106 148.374 322.089 148.374 322.072 cv
148.374 322.055 148.374 322.038 148.374 322.021 cv
148.374 322.004 148.374 321.987 148.374 321.97 cv
148.374 321.953 148.374 321.936 148.374 321.919 cv
148.374 321.902 148.374 321.885 148.374 321.869 cv
148.374 321.852 148.374 321.835 148.374 321.818 cv
148.374 321.801 148.374 321.784 148.374 321.767 cv
148.374 321.75 148.374 321.733 148.374 321.716 cv
148.374 321.699 148.374 321.682 148.374 321.665 cv
148.374 321.648 148.374 321.631 148.374 321.614 cv
148.374 321.597 148.374 321.58 148.374 321.563 cv
148.374 321.546 148.374 321.529 148.374 321.512 cv
148.374 321.495 148.374 321.478 148.374 321.461 cv
148.374 321.444 148.374 321.427 148.374 321.41 cv
148.374 321.393 148.374 321.376 148.374 321.36 cv
148.374 321.343 148.374 321.326 148.374 321.309 cv
148.374 321.292 148.374 321.275 148.374 321.258 cv
148.374 321.241 148.374 321.224 148.374 321.207 cv
148.374 321.19 148.374 321.173 148.374 321.156 cv
148.374 321.139 148.374 321.122 148.374 321.105 cv
148.374 321.088 148.374 321.072 148.374 321.055 cv
148.374 321.038 148.374 321.021 148.374 321.004 cv
148.374 320.987 148.374 320.97 148.374 320.953 cv
148.374 320.936 148.374 320.919 148.374 320.902 cv
148.374 320.885 148.374 320.868 148.374 320.851 cv
148.374 320.835 148.374 320.818 148.374 320.801 cv
148.374 320.784 148.374 320.767 148.374 320.75 cv
148.374 320.733 148.374 320.716 148.374 320.699 cv
148.374 320.682 148.374 320.665 148.374 320.648 cv
148.374 320.631 148.374 320.614 148.374 320.598 cv
148.374 320.581 148.374 320.564 148.374 320.547 cv
148.374 320.53 148.374 320.513 148.374 320.496 cv
148.374 320.479 148.374 320.462 148.374 320.445 cv
148.374 320.428 148.374 320.411 148.374 320.394 cv
148.374 320.378 148.374 320.361 148.374 320.344 cv
148.374 320.327 148.374 320.31 148.374 320.293 cv
148.374 320.276 148.374 320.259 148.374 320.242 cv
148.374 320.225 148.374 320.208 148.374 320.191 cv
148.374 320.174 148.374 320.158 148.374 320.141 cv
148.374 320.124 148.374 320.107 148.374 320.09 cv
148.374 320.073 148.374 320.056 148.374 320.039 cv
148.374 320.022 148.374 320.005 148.374 319.988 cv
148.374 319.971 148.374 319.954 148.374 319.937 cv
148.374 319.92 148.374 319.904 148.374 319.887 cv
148.374 319.87 148.374 319.853 148.374 319.836 cv
148.374 319.819 148.374 319.802 148.374 319.785 cv
148.374 319.768 148.374 319.751 148.374 319.734 cv
148.374 319.717 148.374 319.7 148.374 319.683 cv
148.374 319.666 148.374 319.649 148.374 319.632 cv
148.374 319.616 148.374 319.599 148.374 319.582 cv
148.374 319.565 148.374 319.548 148.374 319.531 cv
148.374 319.514 148.374 319.497 148.374 319.48 cv
148.374 319.463 148.374 319.446 148.374 319.429 cv
148.374 319.412 148.374 319.395 148.374 319.378 cv
148.374 319.361 148.374 319.344 148.374 319.327 cv
148.374 319.31 148.374 319.293 148.374 319.276 cv
148.374 319.259 148.374 319.242 148.374 319.225 cv
148.374 319.208 148.374 319.191 148.374 319.174 cv
148.374 319.157 148.374 319.141 148.374 319.124 cv
148.374 319.107 148.374 319.09 148.374 319.073 cv
148.374 319.056 148.374 319.039 148.374 319.022 cv
148.374 319.005 148.374 318.988 148.374 318.971 cv
148.374 318.954 148.374 318.937 148.374 318.92 cv
148.374 318.903 148.374 318.886 148.374 318.869 cv
148.374 318.852 148.374 318.835 148.374 318.817 cv
148.374 318.8 148.374 318.783 148.374 318.766 cv
148.374 318.749 148.374 318.732 148.374 318.715 cv
148.374 318.698 148.374 318.681 148.374 318.664 cv
148.374 318.647 148.374 318.63 148.374 318.613 cv
148.374 318.596 148.374 318.579 148.374 318.562 cv
148.374 318.545 148.374 318.528 148.374 318.511 cv
148.374 318.494 148.374 318.477 148.374 318.46 cv
148.374 318.443 148.374 318.426 148.374 318.408 cv
148.374 318.391 148.374 318.374 148.374 318.357 cv
148.374 318.34 148.374 318.323 148.374 318.306 cv
148.374 318.289 148.374 318.272 148.374 318.255 cv
148.374 318.238 148.374 318.221 148.374 318.203 cv
148.374 318.186 148.374 318.169 148.374 318.152 cv
148.374 318.135 148.374 318.118 148.374 318.101 cv
148.374 318.084 148.374 318.067 148.374 318.049 cv
148.374 318.032 148.374 318.015 148.374 317.998 cv
148.374 317.981 148.374 317.964 148.374 317.947 cv
148.374 317.93 148.374 317.912 148.374 317.895 cv
148.374 317.878 148.374 317.861 148.374 317.844 cv
148.374 317.827 148.374 317.81 148.374 317.792 cv
148.374 317.775 148.374 317.758 148.374 317.741 cv
148.374 317.724 148.374 317.706 148.374 317.689 cv
148.374 317.672 148.374 317.655 148.374 317.638 cv
148.374 317.621 148.374 317.603 148.374 317.586 cv
148.374 317.569 148.374 317.552 148.374 317.535 cv
148.374 317.517 148.374 317.5 148.374 317.483 cv
148.374 317.466 148.374 317.448 148.374 317.431 cv
148.374 317.414 148.374 317.397 148.374 317.379 cv
148.374 317.362 148.374 317.345 148.374 317.328 cv
148.374 317.31 148.374 317.293 148.374 317.276 cv
148.374 317.259 148.374 317.241 148.374 317.224 cv
148.374 317.207 148.374 317.19 148.374 317.172 cv
148.374 317.155 148.374 317.138 148.374 317.12 cv
148.374 317.103 148.374 317.086 148.374 317.068 cv
148.374 317.051 148.374 317.034 148.374 317.017 cv
148.374 316.999 148.374 316.982 148.374 316.965 cv
148.374 316.947 148.374 316.93 148.374 316.913 cv
148.374 316.895 148.374 316.878 148.374 316.86 cv
148.374 316.843 148.374 316.826 148.374 316.808 cv
148.374 316.791 148.374 316.774 148.374 316.756 cv
148.374 316.739 148.374 316.721 148.374 316.704 cv
148.374 316.687 148.374 316.669 148.374 316.652 cv
148.374 316.634 148.374 316.617 148.374 316.6 cv
148.374 316.582 148.374 316.565 148.374 316.547 cv
148.374 316.53 148.374 316.513 148.374 316.495 cv
148.374 316.478 148.374 316.46 148.374 316.443 cv
148.374 316.425 148.374 316.408 148.374 316.39 cv
148.374 316.373 148.374 316.355 148.374 316.338 cv
148.374 316.32 148.374 316.303 148.374 316.285 cv
148.374 316.268 148.374 316.25 148.374 316.233 cv
148.374 316.215 148.374 316.198 148.374 316.18 cv
148.374 316.163 148.374 316.145 148.374 316.128 cv
148.373 316.11 148.374 316.093 148.374 316.075 cv
148.373 316.057 148.373 316.04 148.373 316.022 cv
148.373 316.005 148.373 315.987 148.373 315.97 cv
148.373 315.952 148.373 315.934 148.373 315.917 cv
148.373 315.899 148.373 315.882 148.373 315.864 cv
148.373 315.846 148.373 315.829 148.373 315.811 cv
148.373 315.793 148.373 315.776 148.373 315.758 cv
148.373 315.74 148.373 315.723 148.373 315.705 cv
148.373 315.652 148.373 315.599 148.373 315.546 cv
148.373 315.528 148.373 315.51 148.373 315.493 cv
148.373 315.475 148.373 315.457 148.373 315.439 cv
148.373 315.422 148.373 315.404 148.373 315.386 cv
148.373 315.368 148.373 315.351 148.373 315.333 cv
148.373 315.315 148.373 315.297 148.373 315.279 cv
148.373 315.262 148.373 315.244 148.373 315.226 cv
148.373 315.208 148.373 315.19 148.373 315.173 cv
148.373 315.155 148.373 315.137 148.373 315.119 cv
148.373 315.101 148.373 315.083 148.373 315.065 cv
148.373 315.048 148.373 315.03 148.373 315.012 cv
148.373 314.994 148.373 314.976 148.373 314.958 cv
148.373 314.94 148.373 314.922 148.373 314.904 cv
148.373 314.886 148.373 314.868 148.373 314.851 cv
148.373 314.797 148.373 314.743 148.373 314.689 cv
148.373 314.671 148.373 314.653 148.373 314.635 cv
148.373 314.617 148.373 314.599 148.373 314.581 cv
148.373 314.563 148.373 314.545 148.373 314.526 cv
148.373 314.508 148.373 314.49 148.373 314.472 cv
148.373 314.454 148.373 314.436 148.373 314.418 cv
148.373 314.364 148.373 314.309 148.373 314.255 cv
148.373 314.237 148.373 314.218 148.373 314.2 cv
148.373 314.182 148.373 314.164 148.373 314.146 cv
148.373 314.128 148.373 314.109 148.373 314.091 cv
148.373 314.073 148.373 314.055 148.373 314.036 cv
148.373 314.018 148.373 314 148.373 313.982 cv
148.373 313.927 148.373 313.872 148.373 313.817 cv
148.373 313.799 148.373 313.78 148.373 313.762 cv
148.373 313.743 148.373 313.725 148.373 313.707 cv
148.373 313.688 148.373 313.67 148.373 313.652 cv
148.373 313.633 148.373 313.615 148.373 313.596 cv
148.373 313.578 148.373 313.559 148.373 313.541 cv
148.373 313.486 148.373 313.43 148.373 313.375 cv
148.373 313.356 148.373 313.338 148.373 313.319 cv
148.373 313.301 148.373 313.282 148.373 313.263 cv
148.373 313.245 148.373 313.226 148.373 313.208 cv
148.373 313.189 148.373 313.171 148.373 313.152 cv
148.373 313.133 148.373 313.115 148.373 313.096 cv
148.373 313.04 148.373 312.984 148.373 312.928 cv
148.373 312.909 148.373 312.891 148.373 312.872 cv
148.373 312.853 148.373 312.834 148.373 312.816 cv
148.373 312.797 148.373 312.778 148.373 312.759 cv
148.373 312.741 148.373 312.722 148.373 312.703 cv
148.373 312.684 148.373 312.665 148.373 312.646 cv
148.373 312.59 148.373 312.533 148.373 312.477 cv
148.373 312.458 148.373 312.439 148.373 312.42 cv
148.373 312.363 148.373 312.306 148.373 312.249 cv
148.373 312.23 148.373 312.211 148.373 312.192 cv
148.373 312.135 148.373 312.078 148.373 312.02 cv
148.373 312.001 148.373 311.982 148.373 311.963 cv
148.373 311.944 148.373 311.924 148.373 311.905 cv
148.373 311.886 148.373 311.867 148.373 311.848 cv
148.373 311.828 148.373 311.809 148.373 311.79 cv
148.373 311.771 148.373 311.751 148.373 311.732 cv
148.373 311.674 148.373 311.616 148.373 311.558 cv
148.373 311.539 148.373 311.52 148.373 311.5 cv
148.373 311.442 148.373 311.384 148.373 311.325 cv
148.373 311.306 148.373 311.287 148.373 311.267 cv
148.373 311.209 148.373 311.15 148.373 311.091 cv
148.373 311.072 148.373 311.052 148.373 311.032 cv
148.373 310.973 148.373 310.914 148.373 310.855 cv
148.373 310.836 148.373 310.816 148.373 310.796 cv
148.373 310.737 148.373 310.678 148.373 310.618 cv
148.373 310.598 148.373 310.578 148.373 310.558 cv
148.373 310.499 148.373 310.439 148.373 310.379 cv
148.373 310.359 148.373 310.339 148.373 310.319 cv
148.373 310.259 148.373 310.199 148.373 310.139 cv
148.373 310.119 148.373 310.099 148.373 310.078 cv
148.373 310.018 148.373 309.958 148.373 309.897 cv
148.373 309.877 148.373 309.856 148.373 309.836 cv
148.373 309.775 148.373 309.714 148.373 309.653 cv
148.373 309.633 148.373 309.613 148.373 309.592 cv
148.373 309.531 148.373 309.47 148.373 309.408 cv
148.373 309.388 148.373 309.367 148.373 309.346 cv
148.373 309.285 148.373 309.223 148.373 309.161 cv
148.373 309.141 148.373 309.12 148.373 309.099 cv
148.373 309.037 148.373 308.975 148.373 308.913 cv
148.373 308.892 148.373 308.871 148.373 308.85 cv
148.373 308.788 148.373 308.725 148.373 308.662 cv
148.373 308.641 148.373 308.62 148.373 308.599 cv
148.373 308.452 148.373 308.305 148.373 308.156 cv
148.373 308.135 148.373 308.113 148.373 308.092 cv
148.373 308.043 148.373 307.994 148.373 307.945 cv
148.374 307.943 li
148.374 334.938 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 28.32 147.84 1664.48 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 59 
/M[3 0 0 -59 0 59 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~io8tWio8tWio8tWio8tWio9"Yj5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[jQ,C_jQ,C_jQ,C_jlPUc
jlPUcjlPUcjlPUcjlPUcjlPUck2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tjikND$kkND$kkND'm
kih6okih6okih6okih6okih6okih6okiq?rl07Hsl07Hsl07Hsl07Hsl07Hskl~>
<~e^`4#e^`7%f%/F'f%/F'f%/F'f%/F'f@SX+f@SX+f@SX+f@SX+f@S[-f\"j/g"G'3g"G'3g"G'3g"G'3
g"G'3g"G'3g=k97g=k97g=k97g=k97g=k<9gY:K;gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?h;-oCh;-oC
h;-oCh;-oDhVR,GhVR,Ghr!>Khr!>Khr!>Khr!>Khr!>Khr*GNi8EPOi8EPOhu~>
<~[^NWQ[^N]U\@B&Y\@B&Y\@B&Y\@B&Y\[f8]\[f;_]"5Ja]=Y\e]=Y\e]=Y\e]Y(ni]Y(qk]tM+m]tM+m
]tM.o^:q=q^:q=s^qdb$^qdb$^qdb$^qde&_83t(_83t(_84"*_Sa:/_o'C0_o'C0_o'C0`5KU4`5KU4
`5T^7`Pog9`l?$<`l?$<`l?$<`l?'>a2c6@a2c6AaN2HDaN;QGaiVZHaiVZHaT~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
500.16 350.178 mo
331.83 350.178 166.079 345.315 148.374 334.938 cv
148.374 334.938 li
148.374 306.055 li
148.374 305.966 148.375 305.878 148.375 305.79 cv
148.607 282.357 168.266 262.875 191.7 262.729 cv
403.512 262.729 615.323 262.729 827.134 262.729 cv
850.658 262.875 870.372 282.505 870.459 306.055 cv
870.459 334.938 li
855.464 344.849 676.398 350.178 500.16 350.178 cv
level3{
gsave
clp
[-3.82253e-6 -87.4492 87.4492 -3.82253e-6 509.416 350.178 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~q59q^VkEg^TD57TpnXMVUn.:USG8hJpn=/OTUPYJR/!;@pn!iISX0&AQM?u7pm[NCRZmN7P5(E,pR%':
Q]Lm,O8"p!pQ^a4P`5@#Mt`BmpQ:=,ObrgoM"cscpPt"&NeR4eK_LFYpPXXsMLtPZJbFqNp5"7mLOSrP
IeJMEp4[nfKR<EFHM2r9p4@S`JU$m=GP6Q1p4%5YIWb@4F7jp%om:`PHZA_)E:nKpoltBIG]*1uD=r'g
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.82253e-6 -87.4492 87.4492 -3.82253e-6 509.416 350.178 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~q"XXZq"XXZq"OOWp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4FVp\4CTp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
p@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Qp%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"N
p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"No^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
~>
<~VP^5fVP^5fVPU,cV50o_Una][USFTZUS=KWU7n9STqJ'OTV%jKT:VXGSt;OFSt2FCSXc4?S=H+>S=?";
S"#k8R[TY4R@0G0R$a5,Q^=&*Q^=#(QBmf$Q'ISuPa%DsPa%AqPEV/mP*1riOcb`eOH>QcOH>NaO,o<]
NfK-ZNK&pWNK&pVN/W^RMi3LNMMd:JM2@(GM2@(FLkpkBLPLY>L5(G;L5(G:KnY56KS5#2K7ef.JqAT*
JUrB'JUrB'J:N0#It)rtIt)rtIXZ`pI=6NlI!g<hH[C*dH?sm`H?sm`H$O[\G^+IXGB\7TGB\7TG'8%P
~>
<~TV.sNTV%jKT:VXGSt;OFSt2FCSXc4?S=?";S!oe7R[KS3R@0J1R$X/+Q^=&*Q^3r'QBd`#Q'IW!P`q;p
PEV2oPEV/mP*1riOcb`eOH>NaO,o<]NfK-[NK&mUN/W^SN/W[QMi3IMMMd:KM2@%ELkpkCLkphALPLV=
L5(G:KnY56KS5#2K7ef/K7\]+JUrB'JUrB&J:N0"It)rtIsuipI=6NlI=6NkI!g<gH[C*cH?sm_H$O[[
G^+IXG^+IXGB\7TG'8%PF`hhLFEDVHFEDSFEcQ2@EcQ2@EH,u<E,]c8Df9Q4DJj?0D/F-,D/F-,Ci!p(
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
178.858 341.524 mo
177.803 341.524 176.748 341.122 175.943 340.317 cv
174.333 338.707 174.333 336.096 175.943 334.486 cv
217.714 292.713 li
219.324 291.103 221.935 291.103 223.544 292.712 cv
265.323 334.486 li
266.933 336.096 266.933 338.707 265.323 340.316 cv
263.713 341.927 261.102 341.926 259.492 340.317 cv
220.629 301.458 li
181.773 340.316 li
180.969 341.122 179.913 341.524 178.858 341.524 cv
cp
0 0 0 rgb
f
250.982 379.628 mo
190.283 379.628 li
188.005 379.628 186.16 377.782 186.16 375.505 cv
186.16 341.673 li
186.16 339.396 188.005 337.55 190.283 337.55 cv
192.559 337.55 194.405 339.396 194.405 341.673 cv
194.405 371.382 li
246.859 371.382 li
246.859 341.673 li
246.859 339.396 248.705 337.55 250.982 337.55 cv
253.259 337.55 255.105 339.396 255.105 341.673 cv
255.105 375.505 li
255.105 377.782 253.259 379.628 250.982 379.628 cv
cp
f
222.113 345.189 mo
219.15 345.189 li
209.685 345.189 li
209.685 377.135 li
219.15 377.135 li
222.113 377.135 li
231.58 377.135 li
231.58 345.189 li
222.113 345.189 li
cp
.972549 .972549 .972549 rgb
f
210.2 376.62 mo
231.064 376.62 li
231.064 345.705 li
210.2 345.705 li
210.2 376.62 li
cp
232.095 377.65 mo
209.169 377.65 li
209.169 344.673 li
232.095 344.673 li
232.095 377.65 li
cp
0 0 0 rgb
f
265.296 340.08 mo
264.241 340.08 263.186 339.677 262.381 338.872 cv
223.518 300.015 li
184.663 338.872 li
183.053 340.482 180.442 340.481 178.832 338.872 cv
177.222 337.262 177.222 334.651 178.832 333.041 cv
220.603 291.269 li
222.213 289.658 224.824 289.659 226.434 291.268 cv
268.211 333.041 li
269.822 334.651 269.822 337.262 268.211 338.871 cv
267.407 339.677 266.351 340.08 265.296 340.08 cv
cp
.972549 .972549 .972549 rgb
f
253.871 378.184 mo
193.17 378.184 li
190.894 378.184 189.047 376.338 189.047 374.061 cv
189.047 340.229 li
189.047 337.952 190.894 336.106 193.17 336.106 cv
195.447 336.106 197.293 337.952 197.293 340.229 cv
197.293 369.938 li
249.748 369.938 li
249.748 340.229 li
249.748 337.952 251.595 336.106 253.871 336.106 cv
256.148 336.106 257.994 337.952 257.994 340.229 cv
257.994 374.061 li
257.994 376.338 256.148 378.184 253.871 378.184 cv
cp
f
225.002 343.745 mo
222.039 343.745 li
212.573 343.745 li
212.573 375.692 li
222.039 375.692 li
225.002 375.692 li
234.467 375.692 li
234.467 343.745 li
225.002 343.745 li
cp
f
827.134 262.729 mo
191.7 262.729 li
167.871 262.729 148.374 282.226 148.374 306.055 cv
148.374 363.822 li
148.374 387.65 167.871 407.147 191.7 407.147 cv
827.134 407.147 li
850.963 407.147 870.459 387.65 870.459 363.822 cv
870.459 306.055 li
870.459 282.226 850.963 262.729 827.134 262.729 cv
cp
827.134 269.95 mo
847.043 269.95 863.238 286.146 863.238 306.055 cv
863.238 363.822 li
863.238 383.729 847.043 399.925 827.134 399.925 cv
191.7 399.925 li
171.792 399.925 155.596 383.729 155.596 363.822 cv
155.596 306.055 li
155.596 286.146 171.792 269.95 191.7 269.95 cv
827.134 269.95 li
0 .258824 .341176 rgb
f
191.7 272.116 mo
172.986 272.116 157.762 287.34 157.762 306.055 cv
157.762 363.822 li
157.762 382.535 172.986 397.76 191.7 397.76 cv
827.134 397.76 li
845.849 397.76 861.073 382.535 861.073 363.822 cv
861.073 306.055 li
861.073 287.34 845.849 272.116 827.134 272.116 cv
191.7 272.116 li
cp
827.134 402.092 mo
191.7 402.092 li
170.597 402.092 153.43 384.924 153.43 363.822 cv
153.43 306.055 li
153.43 284.952 170.597 267.784 191.7 267.784 cv
827.134 267.784 li
848.238 267.784 865.405 284.952 865.405 306.055 cv
865.405 363.822 li
865.405 384.924 848.238 402.092 827.134 402.092 cv
cp
.945098 .760784 .701961 rgb
f
1853.57 407.147 mo
1848.41 407.147 li
1201.27 407.147 li
1162.84 407.147 1131.67 376.084 1131.48 337.697 cv
1853.2 337.697 li
1849.58 295.582 1819.88 262.729 1783.78 262.729 cv
1131.48 262.729 li
1131.48 337.358 li
1131.48 337.358 li
1131.48 262.729 li
1783.78 262.729 li
1822.32 262.729 1853.57 293.977 1853.57 332.52 cv
1853.57 332.52 li
1853.57 407.147 li
level3{
gsave
clp
[-6.31271e-6 -144.418 144.418 -6.31271e-6 1492.53 407.147 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-6.31271e-6 -144.418 144.418 -6.31271e-6 1492.53 407.147 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
1131.48 337.697 mo
1131.48 337.697 li
1131.48 337.358 li
1131.48 337.471 1131.48 337.584 1131.48 337.697 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.92 1130.88 1661.6 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 4 
/M[3 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~mHs<.mHs<.mHs<.~>
<~jlPUcjlPUcjlPUc~>
<~daHRldaHRldaHRl~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1853.2 337.697 mo
1131.48 337.697 li
1131.48 337.697 1131.48 337.697 1131.48 337.697 cv
1131.48 337.584 1131.48 337.471 1131.48 337.358 cv
1131.48 262.729 li
1783.78 262.729 li
1819.88 262.729 1849.58 295.582 1853.2 337.697 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[722.88 0 0 76.32 1130.88 1661.6 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1506 
/H 159 
/M[1506 0 0 -159 0 159 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1506 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1506 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1506 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
JieQGJieQGJieQGJieQGJieQGJif2Ymtu^SJr5/;Jr5/;Jr5/;Jr5/;Jr5/;VM]u!Jt[diJt[diJt[di
Jt[diJt[diPbIP-JieQGJieQGJieQGJieQGJieQGJifhkJr5/;Jr5/;Jr5/;Jr5/;Jr5/;Jr5eMn"G?,
Jt[diJt[diJt[diJt[diJt[diVP/T'JieQGJieQGJieQGJieQGJieQGPWS>kJr5/;Jr5/;Jr5/;Jr5/;
Jr5/;Jr6F_Jt[diJt[diJt[diJt[diJt[diJt\F&mlQ+_JieQGJieQGJieQGJieQGJieQGVE9BeJr5/;
Jr5/;Jr5/;Jr5/;Jr5/;P`"q'Jt[diJt[diJt[diJt[diJt[diJt]'8JieQGJieQGJieQGJieQGJieQG
Jif2YmtlXQJr,)9Jr,)9Jr,)9Jr,)9Jr,)9VMTntJtR^gJtR^gJtR^gJtR^gJtR^gPb@J+Ji\KEJi\KE
Ji\KEJi\KEJi\KEJi]biJr,)9Jr,)9Jr,)9Jr,)9Jr,)9Jr,_Kn">9*JtR^gJtR^gJtR^gJtR^gJtR^g
VP&N%Ji\KEJi\KEJi\KEJi\KEJi\KEPWJ8iJr,)9Jr,)9Jr,)9Jr,)9Jr,)9Jr-@]JtR^gJtR^gJtR^g
JtR^gJtR^gJtS@$mlH%]Ji\KEJi\KEJi\KEJi\KEJi\KEVE0<cJr,)9Jr,)9Jr,)9Jr,)9Jr,)9P_nk%
JtR^gJtR^gJtR^gJtR^gJtR^gJtT!6Ji\KEJi\KEJi\KEJi\KEJi\KEJi],WmtcROJr##7Jr##7Jr##7
Jr##7Jr##7VMKhrJtIXeJtIXeJtIXeJtIXeJtIXePb7D*Ji\KEJi\KEJi\KEJi\KEJi\KEJi]biJr##7
Jr##7Jr##7Jr##7Jr##7Jr#YIn"53(JtIXeJtIXeJtIXeJtIXeJtIXeVOrH#JiSECJiSECJiSECJiSEC
JiSECPWA2gJr##7Jr##7Jr##7Jr##7Jr##7Jr$:[JtIXeJtIXeJtIXeJtIXeJtIXeJtJ:"ml>t[JiSEC
JiSECJiSECJiSECJiSECVE'6aJr##7Jr##7Jr##7Jr##7Jr##7P_ee#JtIXeJtIXeJtIXeJtIXeJtIXe
JtJp4JiSECJiSECJiSECJiSECJiSECJiT&UmtZLMJqnr5Jqnr5Jqnr5Jqnr5Jqnr5VMBbpJt@RcJt@Rc
Jt@RcJt@RcJt@RcPb.>(JiSECJiSECJiSECJiSECJiSECJiT\gJqnr5Jqnr5Jqnr5Jqnr5Jqnr5JqoSG
n",-&Jt@RcJt@RcJt@RcJt@RcJt@RcVOiB!JiJ?AJiJ?AJiJ?AJiJ?AJiJ?APW8,eJqnr5Jqnr5Jqnr5
Jqnr5Jqnr5Jqp4YJt@RcJt@RcJt@RcJt@RcJt@RcJtA3uml5nYJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AVDs0_
Jqnr5Jqnr5Jqnr5Jqnr5Jqnr5P_\_!Jt@RcJt@RcJt@RcJt@RcJt@RcJtAj2JiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AJiJuSmtZLMJqnr5Jqnr5Jqnr5Jqnr5Jqnr5VMBbpJt@RcJt@RcJt@RcJt@RcJt@RcPb.>'JiJ?A
JiJ?AJiJ?AJiJ?AJiJ?AJiKVeJqel3Jqel3Jqel3Jqel3Jqel3JqfMEn"#'$Jt7LaJt7LaJt7LaJt7La
Jt7LaVO`;uJiJ?AJiJ?AJiJ?AJiJ?AJiJ?APW8,dJqel3Jqel3Jqel3Jqel3Jqel3Jqg.WJt7LaJt7La
Jt7LaJt7LaJt7LaJt8-sml5nYJiJ?AJiJ?AJiJ?AJiJ?AJiJ?AVDs0^Jqel3Jqel3Jqel3Jqel3Jqel3
P_SXtJt7LaJt7LaJt7LaJt7LaJt7LaJt8d0JiA9?JiA9?JiA9?JiA9?JiA9?JiAoQmtH@IJq\f1Jq\f1
Jq\f1Jq\f1Jq\f1VM0VlJt.F_Jt.F_Jt.F_Jt.F_Jt.F_Paq2$JiA9?JiA9?JiA9?JiA9?JiA9?JiBPc
Jq\f1Jq\f1Jq\f1Jq\f1Jq\f1Jq]GCn!o!"Jt.F_Jt.F_Jt.F_Jt.F_Jt.F_VOW5sJiA9?JiA9?JiA9?
JiA9?JiA9?PW/&bJq\f1Jq\f1Jq\f1Jq\f1Jq\f1Jq^(UJt.F_Jt.F_Jt.F_Jt.F_Jt.F_Jt/'qml,hW
JiA9?JiA9?JiA9?JiA9?JiA9?VDj*\Jq\f1Jq\f1Jq\f1Jq\f1Jq\f1P_JRrJt.F_Jt.F_Jt.F_Jt.F_
Jt.F_Jt/^.JiA9?JiA9?JiA9?JiA9?JiA9?JiAoQmtH@IJq\f1Jq\f1Jq\f1Jq\f1Jq\f1VM0VkJt%@]
Jt%@]Jt%@]Jt%@]Jt%@]Pah,"Ji83=Ji83=Ji83=Ji83=Ji83=Ji9JaJqS`/JqS`/JqS`/JqS`/JqS`/
JqTAAn!eouJt%@]Jt%@]Jt%@]Jt%@]Jt%@]VON/qJi83=Ji83=Ji83=Ji83=Ji83=PW%u`JqS`/JqS`/
JqS`/JqS`/JqS`/JqU"SJt%@]Jt%@]Jt%@]Jt%@]Jt%@]Jt&!oml#bUJi83=Ji83=Ji83=Ji83=Ji83=
VDa$ZJqS`/JqS`/JqS`/JqS`/JqS`/P_ALpJt%@]Jt%@]Jt%@]Jt%@]Jt%@]Jt&X,Ji83=Ji83=Ji83=
Ji83=Ji83=Ji8iOmt?:GJqS`/JqS`/JqS`/JqS`/JqS`/VM'PiJsq:[Jsq:[Jsq:[Jsq:[Jsq:[Pa_&!
Ji83=Ji83=Ji83=Ji83=Ji83=Ji9JaJqS`/JqS`/JqS`/JqS`/JqS`/JqTAAn!\isJsq:[Jsq:[Jsq:[
Jsq:[Jsq:[VOE)oJi/-;Ji/-;Ji/-;Ji/-;Ji/-;PVqo^JqJZ-JqJZ-JqJZ-JqJZ-JqJZ-JqKqQJsq:[
Jsq:[Jsq:[Jsq:[Jsq:[Jsqpmmko\SJi/-;Ji/-;Ji/-;Ji/-;Ji/-;VDWsXJqJZ-JqJZ-JqJZ-JqJZ-
JqJZ-P_8FnJsq:[Jsq:[Jsq:[Jsq:[Jsq:[JsrR*Ji/-;Ji/-;Ji/-;Ji/-;Ji/-;Ji/cMmt64EJqJZ-
JqJZ-JqJZ-JqJZ-JqJZ-VLsJgJsh4YJsh4YJsh4YJsh4YJsh4YPaUtuJi83=Ji83=Ji83=Ji83=Ji83=
Ji9JaJqAT+JqAT+JqAT+JqAT+JqAT+JqB5=n!ScqJsh4YJsh4YJsh4YJsh4YJsh4YVO<#oJi83=Ji83=
Ji83=Ji83=Ji83=PW%u^JqAT+JqAT+JqAT+JqAT+JqAT+JqBkOJsh4YJsh4YJsh4YJsh4YJsh4YJshjk
ml#bUJi83=Ji83=Ji83=Ji83=Ji83=VDa$YJqJZ-JqJZ-JqJZ-JqJZ-JqJZ-P_8FnJsq:[Jsq:[Jsq:[
Jsq:[Jsq:[JsrR*Ji83=Ji83=Ji83=Ji83=Ji83=Ji8iOmt64EJqJZ-JqJZ-JqJZ-JqJZ-JqJZ-VLsJh
Jsq:[Jsq:[Jsq:[Jsq:[Jsq:[Pa_&"JiA9?JiA9?JiA9?JiA9?JiA9?JiBPcJqS`/JqS`/JqS`/JqS`/
JqS`/JqTAAn!\isJsq:[Jsq:[Jsq:[Jsq:[Jsq:[VOE)rJiJ?AJiJ?AJiJ?AJiJ?AJiJ?APW8,aJqJZ-
JqJZ-JqJZ-JqJZ-JqJZ-JqKqQJsq:[Jsq:[Jsq:[Jsq:[Jsq:[Jsqpmml5nYJiJ?AJiJ?AJiJ?AJiJ?A
JiJ?AVDs0[JqJZ-JqJZ-JqJZ-JqJZ-JqJZ-P_8FnJsq:[Jsq:[Jsq:[Jsq:[Jsq:[JsrR*JiJ?AJiJ?A
JiJ?AJiJ?AJiJ?AJiJuSmt?:GJqS`/JqS`/JqS`/JqS`/JqS`/VM'PhJsh4YJsh4YJsh4YJsh4YJsh4Y
PaUu#JiSECJiSECJiSECJiSECJiSECJiT\gJqJZ-JqJZ-JqJZ-JqJZ-JqJZ-JqK;?n!\isJsq:[Jsq:[
Jsq:[Jsq:[Jsq:[VOE)sJiSECJiSECJiSECJiSECJiSECPWA2cJqS`/JqS`/JqS`/JqS`/JqS`/JqU"S
Jsq:[Jsq:[Jsq:[Jsq:[Jsq:[Jsqpmml>t[JiSECJiSECJiSECJiSECJiSECVE'6]JqS`/JqS`/JqS`/
JqS`/JqS`/P_ALoJsq:[Jsq:[Jsq:[Jsq:[Jsq:[JsrR*Ji\KEJi\KEJi\KEJi\KEJi\KEJi],Wmt?:G
JqS`/JqS`/JqS`/JqS`/JqS`/VM'PjJt%@]Jt%@]Jt%@]Jt%@]Jt%@]Pah,&Ji\KEJi\KEJi\KEJi\KE
Ji\KEJi]biJq\f1Jq\f1Jq\f1Jq\f1Jq\f1Jq]GCn!\isJsq:[Jsq:[Jsq:[Jsq:[Jsq:[VOE)uJieQG
JieQGJieQGJieQGJieQGPWS>fJq\f1Jq\f1Jq\f1Jq\f1Jq\f1Jq^(UJt%@]Jt%@]Jt%@]Jt%@]Jt%@]
Jt&!omlZ1aJinWIJinWIJinWIJinWIJinWIVEBHaJq\f1Jq\f1Jq\f1Jq\f1Jq\f1P_JRqJt%@]Jt%@]
Jt%@]Jt%@]Jt%@]Jt&X,JinWIJinWIJinWIJinWIJinWIJio8[mtH@IJq\f1Jq\f1Jq\f1Jq\f1Jq\f1
VM0VjJsq:[Jsq:[Jsq:[Jsq:[Jsq:[Pa_&'JinWIJinWIJinWIJinWIJinWIJionmJqel3Jqel3Jqel3
Jqel3Jqel3JqfMEn!\isJsq:[Jsq:[Jsq:[Jsq:[Jsq:[VOE*"Jj"]KJj"]KJj"]KJj"]KJj"]KPWeJh
Jq\f1Jq\f1Jq\f1Jq\f1Jq\f1Jq^(UJt%@]Jt%@]Jt%@]Jt%@]Jt%@]Jt&!omlc7cJj"]KJj"]KJj"]K
Jj"]KJj"]KVEKNcJqel3Jqel3Jqel3Jqel3Jqel3P_SXrJt%@]Jt%@]Jt%@]Jt%@]Jt%@]Jt&X,Jj+cM
Jj+cMJj+cMJj+cMJj+cMJj,D_mtQFKJqel3Jqel3Jqel3Jqel3Jqel3VM9\mJt.F_Jt.F_Jt.F_Jt.F_
Jt.F_Paq2+Jj+cMJj+cMJj+cMJj+cMJj+cMJj-%qJqel3Jqel3Jqel3Jqel3Jqel3JqfMEn!eouJt%@]
Jt%@]Jt%@]Jt%@]Jt%@]VON0%Jj4iOJj4iOJj4iOJj4iOJj4iOPX"VkJqel3Jqel3Jqel3Jqel3Jqel3
Jqg.WJt%@]Jt%@]Jt%@]Jt%@]Jt%@]Jt&!omm)IiJj=oQJj=oQJj=oQJj=oQJj=oQVEf`fJqel3Jqel3
Jqel3Jqel3Jqel3P_SXsJt.F_Jt.F_Jt.F_Jt.F_Jt.F_Jt/^.Jj4iOJj4iOJj4iOJj4iOJj4iOJj5Ja
mtQFKJqel3Jqel3Jqel3Jqel3Jqel3VM9\mJt.F_Jt.F_Jt.F_Jt.F_Jt.F_Paq2,Jj4iOJj4iOJj4iO
Jj4iOJj4iOJj6+sJqnr5Jqnr5Jqnr5Jqnr5Jqnr5JqoSGn!eouJt%@]Jt%@]Jt%@]Jt%@]Jt%@]VON0&
Jj=oQJj=oQJj=oQJj=oQJj=oQPX+\lJqel3Jqel3Jqel3Jqel3Jqel3Jqg.WJt%@]Jt%@]Jt%@]Jt%@]
Jt%@]Jt&!omm2OkJjFuSJjFuSJjFuSJjFuSJjFuSVEofhJqnr5Jqnr5Jqnr5Jqnr5Jqnr5P_\^tJt.F_
Jt.F_Jt.F_Jt.F_Jt.F_Jt/^.JjFuSJjFuSJjFuSJjFuSJjFuSJjGVemtZLMJqnr5Jqnr5Jqnr5Jqnr5
Jqnr5VMBbmJt%@]Jt%@]Jt%@]Jt%@]Jt%@]Pah,-JjFuSJjFuSJjFuSJjFuSJjFuSJjH8"Jqnr5Jqnr5
Jqnr5Jqnr5Jqnr5JqoSGn!eouJt%@]Jt%@]Jt%@]Jt%@]Jt%@]VON0(JjP&UJjP&UJjP&UJjP&UJjP&U
PX=hpJr##7Jr##7Jr##7Jr##7Jr##7Jr$:[Jt.F_Jt.F_Jt.F_Jt.F_Jt.F_Jt/'qmmD[oJjY,WJjY,W
JjY,WJjY,WJjY,WVF,rjJqnr5Jqnr5Jqnr5Jqnr5Jqnr5P_\^tJt.F_Jt.F_Jt.F_Jt.F_Jt.F_Jt/^.
JjY,WJjY,WJjY,WJjY,WJjY,WJjYbimtcROJr##7Jr##7Jr##7Jr##7Jr##7VMKhpJt7LaJt7LaJt7La
Jt7LaJt7LaPb%82Jjb2YJjb2YJjb2YJjb2YJjb2YJjcJ(Jr##7Jr##7Jr##7Jr##7Jr##7Jr#YIn!o!"
Jt.F_Jt.F_Jt.F_Jt.F_Jt.F_VOW6*JjY,WJjY,WJjY,WJjY,WJjY,WPXFnqJr##7Jr##7Jr##7Jr##7
Jr##7Jr$:[Jt.F_Jt.F_Jt.F_Jt.F_Jt.F_Jt/'qmmMaqJjb2YJjb2YJjb2YJjb2YJjb2YVF6#lJr##7
Jr##7Jr##7Jr##7Jr##7P_ee!Jt7LaJt7LaJt7LaJt7LaJt7LaJt8d0Jjk8[Jjk8[Jjk8[Jjk8[Jjk8[
JjknmmtlXQJr,)9Jr,)9Jr,)9Jr,)9Jr,)9VMTnqJt7LaJt7LaJt7LaJt7LaJt7LaPb%84Jjt>]Jjt>]
Jjt>]Jjt>]Jjt>]JjuV,Jr,)9Jr,)9Jr,)9Jr,)9Jr,)9Jr,_Kn"#'$Jt7LaJt7LaJt7LaJt7LaJt7La
VO`<.Jjt>]Jjt>]Jjt>]Jjt>]Jjt>]PXb+uJr,)9Jr,)9Jr,)9Jr,)9Jr,)9Jr-@]Jt7LaJt7LaJt7La
Jt7LaJt7LaJt8-smm_muJjt>]Jjt>]Jjt>]Jjt>]Jjt>]VFH/oJr,)9Jr,)9Jr,)9Jr,)9Jr,)9P_nk"
Jt7LaJt7LaJt7LaJt7LaJt7LaJt8d0Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk)%qmtlXQJr,)9Jr,)9Jr,)9
Jr,)9Jr,)9VMTnqJt7LaJt7LaJt7LaJt7LaJt7LaPb%85Jk(D_Jk(D_Jk(D_Jk(D_Jk(D_Jk)\.Jr5/;
Jr5/;Jr5/;Jr5/;Jr5/;Jr5eMn"#'$Jt7LaJt7LaJt7LaJt7LaJt7LaVO`</Jk(D_Jk(D_Jk(D_Jk(D_
Jk(D_PXk2!Jr,)9Jr,)9Jr,)9Jr,)9Jr,)9Jr-@]Jt7LaJt7LaJt7LaJt7LaJt7LaJt8-smmr%$Jk1Ja
Jk1JaJk1JaJk1JaJk1JaVFZ;qJr,)9Jr,)9Jr,)9Jr,)9Jr,)9P_nk"Jt7LaJt7LaJt7LaJt7LaJt7La
Jt8d0Jk1JaJk1JaJk1JaJk1JaJk1JaJk2+smtu^SJr5/;Jr5/;Jr5/;Jr5/;Jr5/;VM]tsJt@RcJt@Rc
Jt@RcJt@RcJt@RcPb.>8Jk:PcJk:PcJk:PcJk:PcJk:PcJk;h2Jr>5=Jr>5=Jr>5=Jr>5=Jr>5=Jr>kO
n",-&Jt@RcJt@RcJt@RcJt@RcJt@RcVOiB2Jk:PcJk:PcJk:PcJk:PcJk:PcPY(>%Jr>5=Jr>5=Jr>5=
Jr>5=Jr>5=Jr?LaJt@RcJt@RcJt@RcJt@RcJt@RcJtA3umn/1(JkCVeJkCVeJkCVeJkCVeJkCVeVFlGt
Jr5/;Jr5/;Jr5/;Jr5/;Jr5/;P`"q$Jt@RcJt@RcJt@RcJt@RcJt@RcJtAj2JkCVeJkCVeJkCVeJkCVe
JkCVeJkD8"mu)dUJr>5=Jr>5=Jr>5=Jr>5=Jr>5=VMg%tJt@RcJt@RcJt@RcJt@RcJt@RcPb.>:JkL\g
JkL\gJkL\gJkL\gJkL\gJkMt6Jr>5=Jr>5=Jr>5=Jr>5=Jr>5=Jr>kOn",-&Jt@RcJt@RcJt@RcJt@Rc
Jt@RcVOiB4JkL\gJkL\gJkL\gJkL\gJkL\gPY:J(JrG;?JrG;?JrG;?JrG;?JrG;?JrHRcJt@RcJt@Rc
Jt@RcJt@RcJt@RcJtA3umn87*JkL\gJkL\gJkL\gJkL\gJkL\gVFuN"JrG;?JrG;?JrG;?JrG;?JrG;?
P`5(&Jt@RcJt@RcJt@RcJt@RcJt@RcJtAj2JkUbiJkUbiJkUbiJkUbiJkUbiJkVD&mu)dUJr>5=Jr>5=
Jr>5=Jr>5=Jr>5=VMg%uJtIXeJtIXeJtIXeJtIXeJtIXePb7D=Jk^hkJk^hkJk^hkJk^hkJk^hkJk`+:
JrG;?JrG;?JrG;?JrG;?JrG;?JrGqQn",-&Jt@RcJt@RcJt@RcJt@RcJt@RcVOiB6Jk^hkJk^hkJk^hk
Jk^hkJk^hkPYLV+JrPAAJrPAAJrPAAJrPAAJrPAAJrQXeJtIXeJtIXeJtIXeJtIXeJtIXeJtJ:"mnSI0
JkgnmJkgnmJkgnmJkgnmJkgnmVG;`%JrG;?JrG;?JrG;?JrG;?JrG;?P`5('JtIXeJtIXeJtIXeJtIXe
JtIXeJtJp4JkgnmJkgnmJkgnmJkgnmJkgnmJkhP*mu2jWJrG;?JrG;?JrG;?JrG;?JrG;?VMp,!JtIXe
JtIXeJtIXeJtIXeJtIXePb7D?JkptoJkptoJkptoJkptoJkptoJkr7>JrPAAJrPAAJrPAAJrPAAJrPAA
JrQ"Sn">9*JtR^gJtR^gJtR^gJtR^gJtR^gVP&N;Jl%%qJl%%qJl%%qJl%%qJl%%qPYgh.JrPAAJrPAA
JrPAAJrPAAJrPAAJrQXeJtIXeJtIXeJtIXeJtIXeJtIXeJtJ:"mn\O2JkptoJkptoJkptoJkptoJkpto
VGDf'JrPAAJrPAAJrPAAJrPAAJrPAAP`>.(JtIXeJtIXeJtIXeJtIXeJtIXeJtJp4Jl%%qJl%%qJl%%q
Jl%%qJl%%qJl%\.muE![JrYGCJrYGCJrYGCJrYGCJrYGCVN-8$JtR^gJtR^gJtR^gJtR^gJtR^gPb@JA
Jl%%qJl%%qJl%%qJl%%qJl%%qJl&=@JrYGCJrYGCJrYGCJrYGCJrYGCJrZ(Un">9*JtR^gJtR^gJtR^g
JtR^gJtR^gVP&N<Jl.+sJl.+sJl.+sJl.+sJl.+sPYpn0JrYGCJrYGCJrYGCJrYGCJrYGCJrZ^gJtR^g
JtR^gJtR^gJtR^gJtR^gJtS@$mo"a8Jl71uJl71uJl71uJl71uJl71uVG`#,JrbMEJrbMEJrbMEJrbME
JrbMEP`P:+JtR^gJtR^gJtR^gJtR^gJtR^gJtT!6Jl.+sJl.+sJl.+sJl.+sJl.+sJl.b0muE![JrYGC
JrYGCJrYGCJrYGCJrYGCVN-8$JtR^gJtR^gJtR^gJtR^gJtR^gPb@JCJl71uJl71uJl71uJl71uJl71u
Jl8IDJrYGCJrYGCJrYGCJrYGCJrYGCJrZ(Un">9*JtR^gJtR^gJtR^gJtR^gJtR^gVP&N>Jl@8"Jl@8"
Jl@8"Jl@8"Jl@8"PZ.%3JrbMEJrbMEJrbMEJrbMEJrbMEJrcdiJt[diJt[diJt[diJt[diJt[diJt\F&
mo4m<JlI>$JlI>$JlI>$JlI>$JlI>$VGr//JrkSGJrkSGJrkSGJrkSGJrkSGP`Y@-Jt[diJt[diJt[di
Jt[diJt[diJt]'8JlRD&JlRD&JlRD&JlRD&JlRD&JlS%8muN']JrbMEJrbMEJrbMEJrbMEJrbMEVN6>'
JtdjkJtdjkJtdjkJtdjkJtdjkPbRVHJlRD&JlRD&JlRD&JlRD&JlRD&JlS[JJrbMEJrbMEJrbMEJrbME
JrbMEJrc.Wn"PE.JtdjkJtdjkJtdjkJtdjkJtdjkVP8ZBJlRD&JlRD&JlRD&JlRD&JlRD&PZ@16JrkSG
JrkSGJrkSGJrkSGJrkSGJrljkJt[diJt[diJt[diJt[diJt[diJt\F&moG$@Jl[J(Jl[J(Jl[J(Jl[J(
Jl[J(VH/;1JrkSGJrkSGJrkSGJrkSGJrkSGP`Y@.JtdjkJtdjkJtdjkJtdjkJtdjkJtf-:Jl[J(Jl[J(
Jl[J(Jl[J(Jl[J(Jl\+:muW-_JrkSGJrkSGJrkSGJrkSGJrkSGVN?D(JtdjkJtdjkJtdjkJtdjkJtdjk
PbRVIJl[J(Jl[J(Jl[J(Jl[J(Jl[J(Jl\aLJrkSGJrkSGJrkSGJrkSGJrkSGJrl4Yn"G?,Jt[diJt[di
Jt[diJt[diJt[diVP/TCJldP*JldP*JldP*JldP*JldP*PZR=9JrtYIJrtYIJrtYIJrtYIJrtYIJrupm
JtdjkJtdjkJtdjkJtdjkJtdjkJteL(moP*BJldP*JldP*JldP*JldP*JldP*VH8A3JrtYIJrtYIJrtYI
JrtYIJrtYIP`bF/JtdjkJtdjkJtdjkJtdjkJtdjkJtf-:JlmV,JlmV,JlmV,JlmV,JlmV,Jln7>mui9c
Js(_KJs(_KJs(_KJs(_KJs(_KVNQP+JtmpmJtmpmJtmpmJtmpmJtmpmPb[\MJm!\.Jm!\.Jm!\.Jm!\.
Jm!\.Jm"sRJs(_KJs(_KJs(_KJs(_KJs(_KJs)@]n"YK0JtmpmJtmpmJtmpmJtmpmJtmpmVPA`GJm!\.
Jm!\.Jm!\.Jm!\.Jm!\.PZdI<Js(_KJs(_KJs(_KJs(_KJs(_KJs*!oJtdjkJtdjkJtdjkJtdjkJtdjk
JteL(mob6FJm!\.Jm!\.Jm!\.Jm!\.Jm!\.VHJM6Js(_KJs(_KJs(_KJs(_KJs(_KP`kL1JtmpmJtmpm
JtmpmJtmpmJtmpmJto3<Jm*b0Jm*b0Jm*b0Jm*b0Jm*b0Jm+CBmui9cJs(_KJs(_KJs(_KJs(_KJs(_K
VNQP+JtmpmJtmpmJtmpmJtmpmJtmpmPb[\OJm3h2Jm3h2Jm3h2Jm3h2Jm3h2Jm5*VJs1eMJs1eMJs1eM
Js1eMJs1eMJs2F_n"YK0JtmpmJtmpmJtmpmJtmpmJtmpmVPA`IJm3h2Jm3h2Jm3h2Jm3h2Jm3h2P[!U?
Js1eMJs1eMJs1eMJs1eMJs1eMJs3'qJtmpmJtmpmJtmpmJtmpmJtmpmJtnR*mp(HLJm<n4Jm<n4Jm<n4
Jm<n4Jm<n4VHe_:Js1eMJs1eMJs1eMJs1eMJs1eMP`tR3Ju"!oJu"!oJu"!oJu"!oJu"!oJu#9>JmEt6
JmEt6JmEt6JmEt6JmEt6JmFUHn!&EgJs:kOJs:kOJs:kOJs:kOJs:kOVNc\.Ju"!oJu"!oJu"!oJu"!o
Ju"!oPbdbRJmEt6JmEt6JmEt6JmEt6JmEt6JmG6ZJs:kOJs:kOJs:kOJs:kOJs:kOJs;Lan"kW4Ju+'q
Ju+'qJu+'qJu+'qJu+'qVPSlMJmEt6JmEt6JmEt6JmEt6JmEt6P[3aBJs:kOJs:kOJs:kOJs:kOJs:kO
Js<-sJu"!oJu"!oJu"!oJu"!oJu"!oJu"X,mp:TPJmO%8JmO%8JmO%8JmO%8JmO%8VI"k=Js:kOJs:kO
Js:kOJs:kOJs:kOPa(X4Ju"!oJu"!oJu"!oJu"!oJu"!oJu#9>JmO%8JmO%8JmO%8JmO%8JmO%8JmO[J
n!&EgJs:kOJs:kOJs:kOJs:kOJs:kOVNc\/Ju+'qJu+'qJu+'qJu+'qJu+'qPbmhUJmX+:JmX+:JmX+:
JmX+:JmX+:JmYB^JsCqQJsCqQJsCqQJsCqQJsCqQJsDRcn"kW4Ju+'qJu+'qJu+'qJu+'qJu+'qVPSlO
JmX+:JmX+:JmX+:JmX+:JmX+:P[EmEJsCqQJsCqQJsCqQJsCqQJsCqQJsE3uJu+'qJu+'qJu+'qJu+'q
Ju+'qJu+^.mpCZRJmX+:JmX+:JmX+:JmX+:JmX+:VI+q?JsCqQJsCqQJsCqQJsCqQJsCqQPa1^6Ju+'q
Ju+'qJu+'qJu+'qJu+'qJu,?@Jma1<Jma1<Jma1<Jma1<Jma1<JmagNn!8QkJsM"SJsM"SJsM"SJsM"S
JsM"SVNuh2Ju4-sJu4-sJu4-sJu4-sJu4-sPc!nXJmj7>Jmj7>Jmj7>Jmj7>Jmj7>JmkNbJsM"SJsM"S
JsM"SJsM"SJsM"SJsMXen"t]6Ju4-sJu4-sJu4-sJu4-sJu4-sVP\rRJmj7>Jmj7>Jmj7>Jmj7>Jmj7>
P[X$HJsM"SJsM"SJsM"SJsM"SJsM"SJsN:"Ju4-sJu4-sJu4-sJu4-sJu4-sJu4d0mp^lXJms=@Jms=@
Jms=@Jms=@Jms=@VIG.DJsV(UJsV(UJsV(UJsV(UJsV(UPaCj9Ju4-sJu4-sJu4-sJu4-sJu4-sJu5EB
Jms=@Jms=@Jms=@Jms=@Jms=@JmssRn!AWmJsV(UJsV(UJsV(UJsV(UJsV(UVO)n3Ju4-sJu4-sJu4-s
Ju4-sJu4-sPc!nZJn'CBJn'CBJn'CBJn'CBJn'CBJn(ZfJsV(UJsV(UJsV(UJsV(UJsV(UJsV^gn#(c8
Ju=3uJu=3uJu=3uJu=3uJu=3uVPf#VJn0IDJn0IDJn0IDJn0IDJn0IDP[s6LJsV(UJsV(UJsV(UJsV(U
JsV(UJsW@$Ju=3uJu=3uJu=3uJu=3uJu=3uJu=j2mpq#\Jn0IDJn0IDJn0IDJn0IDJn0IDVIY:FJsV(U
JsV(UJsV(UJsV(UJsV(UPaCj:Ju=3uJu=3uJu=3uJu=3uJu=3uJu>KDJn0IDJn0IDJn0IDJn0IDJn0ID
Jn1*Vn!J]oJs_.WJs_.WJs_.WJs_.WJs_.WVO2t5Ju=3uJu=3uJu=3uJu=3uJu=3uPc*t]Jn9OFJn9OF
Jn9OFJn9OFJn9OFJn:fjJs_.WJs_.WJs_.WJs_.WJs_.WJs_din#(c8Ju=3uJu=3uJu=3uJu=3uJu=3u
VPf#XJnBUHJnBUHJnBUHJnBUHJnBUHP\0BOJs_.WJs_.WJs_.WJs_.WJs_.WJs`F&Ju=3uJu=3uJu=3u
Ju=3uJu=3uJu=j2mq75bJnK[JJnK[JJnK[JJnK[JJnK[JVItLKJsh4YJsh4YJsh4YJsh4YJsh4YPaV!=
JuF:"JuF:"JuF:"JuF:"JuF:"JuGQFJnK[JJnK[JJnK[JJnK[JJnK[JJnL<\n!ScqJsh4YJsh4YJsh4Y
Jsh4YJsh4YVO<%7JuF:"JuF:"JuF:"JuF:"JuF:"Pc4%`JnK[JJnK[JJnK[JJnK[JJnK[JJnLrnJsh4Y
Jsh4YJsh4YJsh4YJsh4YJshjkn#1i:JuF:"JuF:"JuF:"JuF:"JuF:"VPo)[JnTaLJnTaLJnTaLJnTaL
JnTaLP\BNRJsh4YJsh4YJsh4YJsh4YJsh4YJsiL(JuF:"JuF:"JuF:"JuF:"JuF:"JuFp4mqIAfJn]gN
Jn]gNJn]gNJn]gNJn]gNVJ1XNJsq:[Jsq:[Jsq:[Jsq:[Jsq:[Pa_'?JuO@$JuO@$JuO@$JuO@$JuO@$
JuPWHJn]gNJn]gNJn]gNJn]gNJn]gNJn^H`n!\isJsq:[Jsq:[Jsq:[Jsq:[Jsq:[VOE+9JuO@$JuO@$
JuO@$JuO@$JuO@$Pc=+cJn]gNJn]gNJn]gNJn]gNJn]gNJn_)rJsq:[Jsq:[Jsq:[Jsq:[Jsq:[Jsqpm
n#:o<JuO@$JuO@$JuO@$JuO@$JuO@$VQ#/^JnfmPJnfmPJnfmPJnfmPJnfmPP\TZUJsq:[Jsq:[Jsq:[
Jsq:[Jsq:[JsrR*JuO@$JuO@$JuO@$JuO@$JuO@$JuP!6mq[MjJnosRJnosRJnosRJnosRJnosRVJCdQ
Jt%@]Jt%@]Jt%@]Jt%@]Jt%@]Pah-AJuXF&JuXF&JuXF&JuXF&JuXF&JuY]JJnosRJnosRJnosRJnosR
JnosRJnpTdn!o!"Jt.F_Jt.F_Jt.F_Jt.F_Jt.F_VOW7<JuXF&JuXF&JuXF&JuXF&JuXF&PcF1fJnosR
JnosRJnosRJnosRJnosRJnq6!Jt.F_Jt.F_Jt.F_Jt.F_Jt.F_Jt/'qn#Cu>JuXF&JuXF&JuXF&JuXF&
JuXF&VQ,5aJo$$TJo$$TJo$$TJo$$TJo$$TP\ffXJt%@]Jt%@]Jt%@]Jt%@]Jt%@]Jt&X,JuXF&JuXF&
JuXF&JuXF&JuXF&JuY'8mqmYnJo-*VJo-*VJo-*VJo-*VJo-*VVJUpTJt.F_Jt.F_Jt.F_Jt.F_Jt.F_
Paq3BJuXF&JuXF&JuXF&JuXF&JuXF&JuY]JJo-*VJo-*VJo-*VJo-*VJo-*VJo-`hn"#'$Jt7LaJt7La
Jt7LaJt7LaJt7LaVO`=>JuaL(JuaL(JuaL(JuaL(JuaL(PcO7jJo60XJo60XJo60XJo60XJo60XJo7H'
Jt7LaJt7LaJt7LaJt7LaJt7LaJt8-sn#M&@JuaL(JuaL(JuaL(JuaL(JuaL(VQ5;dJo60XJo60XJo60X
Jo60XJo60XP]#r\Jt7LaJt7LaJt7LaJt7LaJt7LaJt8d0JuaL(JuaL(JuaL(JuaL(JuaL(Jub-:mr*er
Jo?6ZJo?6ZJo?6ZJo?6ZJo?6ZVJh'WJt7LaJt7LaJt7LaJt7LaJt7LaPb%9DJuaL(JuaL(JuaL(JuaL(
JuaL(JubcLJo?6ZJo?6ZJo?6ZJo?6ZJo?6ZJo?lln"#'$Jt7LaJt7LaJt7LaJt7LaJt7LaVO`=>JuaL(
JuaL(JuaL(JuaL(JuaL(PcO7kJo?6ZJo?6ZJo?6ZJo?6ZJo?6ZJo@N)Jt7LaJt7LaJt7LaJt7LaJt7La
Jt8-sn#M&@JuaL(JuaL(JuaL(JuaL(JuaL(VQ5;eJo?6ZJo?6ZJo?6ZJo?6ZJo?6ZP]-#]Jt7LaJt7La
Jt7LaJt7LaJt7LaJt8d0JuaL(JuaL(JuaL(JuaL(JuaL(Jub-:mr*erJo?6ZJo?6ZJo?6ZJo?6ZJo?6Z
VJh'WJt7LaJt7LaJt7LaJt7LaJt7LaPb%9DJuaL(JuaL(JuaL(JuaL(JuaL(JubcLJo?6ZJo?6ZJo?6Z
Jo?6ZJo?6ZJo?lln"#'$Jt7LaJt7LaJt7LaJt7LaJt7LaVO`=>JuaL(JuaL(JuaL(JuaL(JuaL(PcO7j
Jo60XJo60XJo60XJo60XJo60XJo7H'Jt7LaJt7LaJt7LaJt7LaJt7LaJt8-sn#M&@JuaL(JuaL(JuaL(
JuaL(JuaL(VQ5;dJo60XJo60XJo60XJo60XJo60XP]#r[Jt.F_Jt.F_Jt.F_Jt.F_Jt.F_Jt/^.JuXF&
JuXF&JuXF&JuXF&JuXF&JuY'8J,~>

%%EndBinary
grestore
np
1783.78 262.729 mo
1131.48 262.729 li
1131.48 337.358 li
1131.48 375.901 1162.73 407.147 1201.27 407.147 cv
1853.57 407.147 li
1853.57 332.52 li
1853.57 293.977 1822.32 262.729 1783.78 262.729 cv
cp
1783.78 269.95 mo
1818.28 269.95 1846.35 298.018 1846.35 332.52 cv
1846.35 399.925 li
1201.27 399.925 li
1166.77 399.925 1138.7 371.858 1138.7 337.358 cv
1138.7 269.95 li
1783.78 269.95 li
0 .258824 .341176 rgb
f
1140.87 272.116 mo
1140.87 337.358 li
1140.87 370.664 1167.97 397.76 1201.27 397.76 cv
1844.18 397.76 li
1844.18 332.52 li
1844.18 299.213 1817.08 272.116 1783.78 272.116 cv
1140.87 272.116 li
cp
1848.51 402.092 mo
1201.27 402.092 li
1165.58 402.092 1136.54 373.053 1136.54 337.358 cv
1136.54 267.784 li
1783.78 267.784 li
1819.47 267.784 1848.51 296.823 1848.51 332.52 cv
1848.51 402.092 li
cp
level3{
gsave
clp
[-5.87079e-6 -134.308 134.308 -5.87079e-6 1492.53 402.092 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-5.87079e-6 -134.308 134.308 -5.87079e-6 1492.53 402.092 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
1406.07 313.113 mo
1406.07 350.705 li
1426.28 350.705 li
1426.28 356.117 li
1399.21 356.117 li
1399.21 313.113 li
1406.07 313.113 li
cp
1 1 1 rgb
f
1466.74 334.408 mo
1466.74 331.924 1466.43 329.666 1465.82 327.635 cv
1465.21 325.604 1464.31 323.874 1463.13 322.444 cv
1461.94 321.015 1460.47 319.905 1458.72 319.117 cv
1456.96 318.328 1454.94 317.934 1452.66 317.934 cv
1450.29 317.934 1448.23 318.328 1446.46 319.117 cv
1444.7 319.905 1443.22 321.015 1442.04 322.444 cv
1440.86 323.874 1439.97 325.604 1439.38 327.635 cv
1438.79 329.666 1438.49 331.924 1438.49 334.408 cv
1438.49 336.873 1438.79 339.14 1439.41 341.21 cv
1440.02 343.281 1440.92 345.065 1442.1 346.564 cv
1443.28 348.063 1444.75 349.226 1446.51 350.054 cv
1448.26 350.882 1450.29 351.295 1452.6 351.295 cv
1455.06 351.295 1457.19 350.872 1458.97 350.024 cv
1460.76 349.177 1462.22 348.003 1463.38 346.504 cv
1464.53 345.006 1465.38 343.227 1465.92 341.166 cv
1466.46 339.105 1466.74 336.853 1466.74 334.408 cv
cp
1473.66 334.408 mo
1473.66 337.779 1473.18 340.836 1472.22 343.576 cv
1471.27 346.317 1469.89 348.664 1468.08 350.616 cv
1466.28 352.568 1464.07 354.071 1461.46 355.126 cv
1458.84 356.181 1455.89 356.708 1452.6 356.708 cv
1449.11 356.708 1446.05 356.156 1443.41 355.052 cv
1440.78 353.948 1438.59 352.404 1436.83 350.424 cv
1435.08 348.442 1433.76 346.09 1432.88 343.37 cv
1432.01 340.648 1431.57 337.661 1431.57 334.408 cv
1431.57 331.056 1432.03 328.03 1432.96 325.329 cv
1433.89 322.627 1435.25 320.329 1437.04 318.437 cv
1438.83 316.543 1441.04 315.085 1443.67 314.06 cv
1446.29 313.034 1449.29 312.521 1452.66 312.521 cv
1456.03 312.521 1459.02 313.039 1461.63 314.074 cv
1464.25 315.109 1466.44 316.579 1468.21 318.481 cv
1469.99 320.384 1471.34 322.681 1472.26 325.372 cv
1473.19 328.064 1473.66 331.076 1473.66 334.408 cv
cp
f
1515.95 352.168 mo
1514.73 353.066 1513.36 353.849 1511.84 354.52 cv
1510.32 355.19 1508.66 355.723 1506.87 356.117 cv
1505.08 356.511 1503.16 356.708 1501.13 356.708 cv
1497.66 356.708 1494.65 356.156 1492.08 355.052 cv
1489.52 353.948 1487.39 352.404 1485.69 350.424 cv
1484 348.442 1482.73 346.09 1481.89 343.37 cv
1481.05 340.648 1480.64 337.661 1480.64 334.408 cv
1480.64 331.056 1481.05 328.03 1481.88 325.329 cv
1482.71 322.627 1483.96 320.329 1485.63 318.437 cv
1487.31 316.543 1489.41 315.085 1491.93 314.06 cv
1494.46 313.034 1497.41 312.521 1500.78 312.521 cv
1503.22 312.521 1505.38 312.787 1507.24 313.32 cv
1509.1 313.853 1510.73 314.576 1512.12 315.493 cv
1513.51 316.41 1514.69 317.5 1515.67 318.762 cv
1516.65 320.024 1517.47 321.375 1518.14 322.814 cv
1511.96 325.032 li
1511.52 324.086 1510.99 323.183 1510.35 322.326 cv
1509.7 321.469 1508.93 320.714 1508.02 320.063 cv
1507.12 319.413 1506.07 318.895 1504.87 318.51 cv
1503.68 318.126 1502.32 317.934 1500.78 317.934 cv
1498.47 317.934 1496.49 318.328 1494.83 319.117 cv
1493.18 319.905 1491.81 321.015 1490.72 322.444 cv
1489.64 323.874 1488.84 325.604 1488.33 327.635 cv
1487.81 329.666 1487.56 331.924 1487.56 334.408 cv
1487.56 336.873 1487.84 339.14 1488.41 341.21 cv
1488.99 343.281 1489.84 345.065 1490.97 346.564 cv
1492.11 348.063 1493.52 349.226 1495.22 350.054 cv
1496.91 350.882 1498.88 351.295 1501.13 351.295 cv
1502.55 351.295 1503.86 351.158 1505.05 350.882 cv
1506.24 350.605 1507.33 350.256 1508.3 349.832 cv
1509.28 349.408 1510.15 348.93 1510.91 348.397 cv
1511.67 347.865 1512.3 347.333 1512.81 346.8 cv
1512.81 339.347 li
1501.25 339.347 li
1501.25 334.23 li
1519.12 334.23 li
1519.12 349.344 li
1518.23 350.33 1517.17 351.271 1515.95 352.168 cv
cp
f
1535.88 356.117 mo
1529.02 356.117 li
1529.02 313.113 li
1535.88 313.113 li
1535.88 356.117 li
cp
f
1577.56 356.117 mo
1553.07 320.744 li
1553.19 323.583 1553.25 326.186 1553.25 328.552 cv
1553.25 356.117 li
1547.12 356.117 li
1547.12 313.113 li
1555.14 313.113 li
1579.95 348.723 li
1579.79 345.529 1579.72 342.729 1579.72 340.323 cv
1579.72 313.113 li
1585.81 313.113 li
1585.81 356.117 li
1577.56 356.117 li
cp
f
1853.57 1362.23 mo
1201.27 1362.23 li
1162.73 1362.23 1131.48 1393.47 1131.48 1432.01 cv
1131.48 1506.64 li
1783.78 1506.64 li
1822.32 1506.64 1853.57 1475.4 1853.57 1436.85 cv
1853.57 1362.23 li
.741176 .831373 .85098 rgb
f
1249.82 1362.23 mo
1201.27 1362.23 li
1162.73 1362.23 1131.48 1393.47 1131.48 1432.01 cv
1131.48 1506.64 li
1249.82 1506.64 li
1249.82 1362.23 li
.960784 .462745 .423529 rgb
f
1853.57 1434.78 mo
1249.82 1434.78 li
1249.82 1362.23 li
1853.57 1362.23 li
1853.57 1434.78 li
level3{
gsave
clp
[-2.81207e-6 -64.3326 64.3326 -2.81207e-6 1492.53 1430.35 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~e`>oDj6+qPk1&GRe)TT>io\\KjjN/Mdc'<8iT8JGjO)rId,=!3i8i8CjNlcEcf!j/hrE#>j3HQBc/7O*
hVuf:ilp9=bhh=%h;QQ5iQL'9b2)%!gu-<0i5sd4akYgqgYg0-hoOR0a4oLlg>Bs)ho=C,`nK:gg"s^$
hSn1(`7`tbf\OHth8@n#_q<b]fA+6pgqq[u_:RGXfA"*lgVDCp^t.5Sf%Rmhg:u1l^=CrOe_.XcftGng
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.81207e-6 -64.3326 64.3326 -2.81207e-6 1492.53 1430.35 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~eC<!teC<!teC2mqe'ldpe'c[mdaHRlda?IidF$@hdF$@hdEp7ed*U.dd*U.dd*L%acd0q`cd0q`cd'h]
cHa_\cHa\Zc-=MXc-=MXc-=JVbfn;Tbfn;Tbfn8RbKJ)PbKJ&Nb0%lLb0%lLb0%iJaiVZHaiVWFaN2HD
aN2HDaN2HCa2c6@a2c6@a2c6?`l?$<`l?$<`l?$;`Pog8`Pog7`5KU4`5KU4`5KU3_o'C0_o'C/_SX1,
_SX1,_SX1,_83t(_83t(_83t(^qdb$^qdb$^V@Ou^V@Ou^V@Ou^:q=q^:q=q^:q=q]tM+m]tM+m]Y(ni
~>
<~j5]1[j5T(Xio8tWio8tWio8tWio/kTiSibSiSibSiS`YPi8EPOi8EPOi8EPOi8<GLhr!>Khr!>Khr!>K
hr!>Khr!;IhVR,GhVR,GhVR,GhVR)Eh;-oCh;-oCh;-oCh;-lAgt^]?gt^]?gt^]?gt^Z=gY:K;gY:K;
gY:K;gY:K:g=k97g=k97g=k97g=k96g"G'3g"G'3g"G'3g"G'2f\"j/f\"j/f\"j/f\"j.f@SX+f@SX+
f@SX+f@SX+f%/F'f%/F'f%/F'f%/F'f%/F'e^`4#e^`4#e^`4#e^`4#eC<!teC<!teC<!teC<!te'ldp
~>
<~k2tggk2tggk2k^djlPUcjlPUcjlPUcjlGL`jQ,C_jQ,C_jQ,C_jQ#:\j5]1[j5]1[j5]1[j5]1[j5T(X
io8tWio8tWio8tWio8tWio8qUiSibSiSibSiSibSiSi_Qi8EPOi8EPOi8EPOi8EPOi8EMMhr!>Khr!>K
hr!>Khr!>Khr!>JhVR,GhVR,GhVR,GhVR,GhVR,Fh;-oCh;-oCh;-oCh;-oBgt^]?gt^]?gt^]?gt^]>
gY:K;gY:K;gY:K;gY:K;gY:K;g=k97g=k97g=k97g=k97g"G'3g"G'3g"G'3g"G'3g"G'3f\"j/f\"j/
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
1249.82 1434.78 mo
1131.48 1434.78 li
1131.48 1432.01 li
1131.48 1393.47 1162.73 1362.23 1201.27 1362.23 cv
1249.82 1362.23 li
1249.82 1434.78 li
level3{
gsave
clp
[-2.81207e-6 -64.3326 64.3326 -2.81207e-6 1492.53 1430.35 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-2.81207e-6 -64.3326 64.3326 -2.81207e-6 1492.53 1430.35 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
1853.57 1362.23 mo
1201.27 1362.23 li
1162.73 1362.23 1131.48 1393.47 1131.48 1432.01 cv
1131.48 1506.64 li
1783.78 1506.64 li
1822.32 1506.64 1853.57 1475.4 1853.57 1436.85 cv
1853.57 1362.23 li
cp
1846.35 1369.45 mo
1846.35 1436.85 li
1846.35 1471.35 1818.28 1499.42 1783.78 1499.42 cv
1138.7 1499.42 li
1138.7 1432.01 li
1138.7 1397.52 1166.77 1369.45 1201.27 1369.45 cv
1846.35 1369.45 li
0 .290196 .231373 rgb
f
1140.87 1497.26 mo
1783.78 1497.26 li
1817.08 1497.26 1844.18 1470.16 1844.18 1436.85 cv
1844.18 1371.61 li
1201.27 1371.61 li
1167.97 1371.61 1140.87 1398.71 1140.87 1432.01 cv
1140.87 1497.26 li
cp
1783.78 1501.59 mo
1136.54 1501.59 li
1136.54 1432.01 li
1136.54 1396.32 1165.58 1367.28 1201.27 1367.28 cv
1848.51 1367.28 li
1848.51 1436.85 li
1848.51 1472.55 1819.47 1501.59 1783.78 1501.59 cv
cp
.478431 .862745 .772549 rgb
f
1221.58 1417.38 mo
1212.62 1408.92 1198.08 1408.92 1189.11 1417.38 cv
1189.11 1417.38 li
1189.11 1417.38 li
1180.15 1408.92 1165.61 1408.92 1156.64 1417.38 cv
1147.68 1425.84 1147.68 1439.56 1156.64 1448.02 cv
1189.11 1478.66 li
1221.58 1448.02 li
1230.54 1439.56 1230.54 1425.84 1221.58 1417.38 cv
cp
.176471 .176471 .176471 rgb
f
1224.66 1414.3 mo
1215.69 1405.84 1201.16 1405.84 1192.19 1414.3 cv
1192.19 1414.3 li
1192.19 1414.3 li
1183.23 1405.84 1168.68 1405.84 1159.72 1414.3 cv
1150.75 1422.76 1150.75 1436.48 1159.72 1444.94 cv
1192.19 1475.58 li
1224.66 1444.94 li
1233.62 1436.48 1233.62 1422.76 1224.66 1414.3 cv
cp
1 1 1 rgb
f
1762.64 486.966 mo
1138.49 486.966 li
1134.64 486.966 1131.48 490.119 1131.48 493.976 cv
1131.48 559.173 li
1762.64 559.173 li
1762.64 486.966 li
cp
.945098 .760784 .701961 rgb
f
1138.49 631.383 mo
1762.64 631.383 li
1762.64 559.173 li
1131.48 559.173 li
1131.48 624.372 li
1131.48 628.228 1134.64 631.383 1138.49 631.383 cv
cp
.960784 .462745 .423529 rgb
f
1762.64 486.966 mo
1138.49 486.966 li
1134.64 486.966 1131.48 490.119 1131.48 493.976 cv
1131.48 559.173 li
1131.48 624.372 li
1131.48 628.228 1134.64 631.383 1138.49 631.383 cv
1762.64 631.383 li
1762.64 559.173 li
1762.64 486.966 li
cp
1755.42 494.186 mo
1755.42 559.173 li
1755.42 624.162 li
1138.7 624.162 li
1138.7 559.173 li
1138.7 494.186 li
1755.42 494.186 li
0 .290196 .231373 rgb
f
1692.51 559.886 mo
1692.51 515.41 1728.56 479.355 1773.04 479.355 cv
1817.51 479.355 1853.57 515.41 1853.57 559.886 cv
1853.57 604.362 1817.51 640.417 1773.04 640.417 cv
1728.56 640.417 1692.51 604.362 1692.51 559.886 cv
cp
.368627 .341176 .4 rgb
f
1773.04 479.355 mo
1728.56 479.355 1692.51 515.41 1692.51 559.886 cv
1692.51 604.362 1728.56 640.417 1773.04 640.417 cv
1817.51 640.417 1853.57 604.362 1853.57 559.886 cv
1853.57 515.41 1817.51 479.355 1773.04 479.355 cv
cp
1773.04 486.576 mo
1813.46 486.576 1846.35 519.462 1846.35 559.886 cv
1846.35 600.31 1813.46 633.196 1773.04 633.196 cv
1732.61 633.196 1699.73 600.31 1699.73 559.886 cv
1699.73 519.462 1732.61 486.576 1773.04 486.576 cv
.219608 .172549 .231373 rgb
f
1815.2 556.26 mo
1808.42 549.489 li
1805.34 546.403 1800.28 541.347 1797.2 538.258 cv
1783.89 524.942 li
1780.8 521.854 1775.74 521.854 1772.66 524.942 cv
1765.88 531.713 li
1762.8 534.801 1762.8 539.856 1765.88 542.943 cv
1771.51 548.566 li
1732.53 548.566 li
1728.17 548.566 1724.59 552.142 1724.59 556.508 cv
1724.59 567.235 li
1724.59 571.601 1728.17 575.178 1732.53 575.178 cv
1771.51 575.178 li
1765.88 580.801 li
1762.8 583.887 1762.8 588.944 1765.88 592.032 cv
1772.66 598.802 li
1775.74 601.89 1780.8 601.89 1783.89 598.802 cv
1797.2 585.485 li
1800.28 582.399 1805.34 577.342 1808.42 574.254 cv
1815.2 567.492 li
1818.28 564.404 1818.28 559.348 1815.2 556.26 cv
cp
.176471 .176471 .176471 rgb
f
1819.17 552.29 mo
1812.4 545.519 li
1809.31 542.432 1804.25 537.375 1801.17 534.289 cv
1787.86 520.971 li
1784.77 517.884 1779.71 517.884 1776.63 520.971 cv
1769.85 527.742 li
1766.77 530.829 1766.77 535.885 1769.85 538.973 cv
1775.48 544.595 li
1736.51 544.595 li
1732.14 544.595 1728.56 548.172 1728.56 552.538 cv
1728.56 563.264 li
1728.56 567.631 1732.14 571.207 1736.51 571.207 cv
1775.48 571.207 li
1769.85 576.83 li
1766.77 579.917 1766.77 584.972 1769.85 588.06 cv
1776.63 594.831 li
1779.71 597.918 1784.77 597.918 1787.86 594.831 cv
1801.17 581.515 li
1804.25 578.428 1809.31 573.37 1812.4 570.283 cv
1819.17 563.521 li
1822.25 560.433 1822.25 555.377 1819.17 552.29 cv
cp
1 1 1 rgb
f
266.253 1578.85 mo
266.253 1651.06 li
870.459 1651.06 li
870.459 1578.85 li
266.253 1578.85 li
cp
.721569 .909804 .721569 rgb
f
266.253 1723.27 mo
870.459 1723.27 li
870.459 1651.06 li
266.253 1651.06 li
266.253 1723.27 li
cp
.588235 .819608 .509804 rgb
f
266.253 1578.85 mo
161.688 1578.85 li
151.198 1578.85 148.374 1585.16 148.374 1592.87 cv
148.374 1651.06 li
148.374 1709.25 li
148.374 1716.96 151.198 1723.27 161.688 1723.27 cv
266.253 1723.27 li
266.253 1651.06 li
266.253 1578.85 li
cp
.960784 .568627 .231373 rgb
f
870.459 1578.85 mo
344.872 1578.85 li
167.451 1578.85 li
156.96 1578.85 148.374 1585.16 148.374 1592.87 cv
148.374 1651.06 li
148.374 1709.25 li
148.374 1716.96 156.96 1723.27 167.451 1723.27 cv
344.872 1723.27 li
870.459 1723.27 li
870.459 1651.06 li
870.459 1578.85 li
cp
863.238 1586.07 mo
863.238 1651.06 li
863.238 1716.05 li
344.872 1716.05 li
167.451 1716.05 li
160.773 1716.05 155.595 1712.39 155.595 1709.25 cv
155.595 1651.06 li
155.595 1592.87 li
155.595 1589.73 160.773 1586.07 167.451 1586.07 cv
344.872 1586.07 li
863.238 1586.07 li
.423529 .203922 .14902 rgb
f
167.451 1588.24 mo
161.421 1588.24 157.761 1591.46 157.761 1592.87 cv
157.761 1709.25 li
157.761 1710.67 161.421 1713.88 167.451 1713.88 cv
861.073 1713.88 li
861.073 1588.24 li
167.451 1588.24 li
cp
865.405 1718.22 mo
167.451 1718.22 li
159.981 1718.22 153.428 1714.02 153.428 1709.25 cv
153.428 1592.87 li
153.428 1588.1 159.981 1583.91 167.451 1583.91 cv
865.405 1583.91 li
865.405 1718.22 li
cp
.709804 .376471 .2 rgb
f
245.514 1686.2 mo
245.508 1686.21 li
245.507 1686.21 li
239.79 1691.84 233.676 1690.9 233.676 1690.9 cv
233.676 1690.9 216.083 1689.35 193.806 1667.08 cv
171.524 1644.8 169.977 1627.2 169.977 1627.2 cv
169.977 1627.2 169.041 1621.09 174.675 1615.37 cv
174.669 1615.37 li
174.685 1615.37 li
174.712 1615.34 li
177.475 1612.56 181.811 1614.34 181.811 1614.34 cv
184.526 1615.85 188.275 1618.81 192.057 1622.59 cv
195.837 1626.38 198.805 1630.12 200.303 1632.84 cv
200.303 1632.84 201.235 1633.8 199.951 1638.04 cv
199.476 1639.61 198.194 1640.98 197.649 1641.4 cv
196.831 1642.03 196.017 1642.54 195.23 1642.96 cv
191.804 1645.31 198.113 1655.34 201.828 1659.06 cv
205.543 1662.77 215.566 1669.08 217.917 1665.65 cv
218.334 1664.86 218.84 1664.05 219.479 1663.23 cv
219.899 1662.69 221.272 1661.41 222.837 1660.93 cv
227.08 1659.64 228.042 1660.57 228.042 1660.57 cv
230.753 1662.07 234.505 1665.04 238.285 1668.82 cv
242.07 1672.61 245.036 1676.35 246.534 1679.07 cv
246.534 1679.07 248.318 1683.4 245.541 1686.17 cv
245.514 1686.2 li
cp
.176471 .176471 .176471 rgb
f
248.135 1683.57 mo
248.129 1683.58 li
248.126 1683.58 li
242.41 1689.22 236.297 1688.28 236.297 1688.28 cv
236.297 1688.28 218.701 1686.73 196.425 1664.46 cv
174.146 1642.18 172.597 1624.58 172.597 1624.58 cv
172.597 1624.58 171.66 1618.47 177.294 1612.76 cv
177.29 1612.75 li
177.304 1612.75 li
177.333 1612.72 li
180.095 1609.94 184.432 1611.72 184.432 1611.72 cv
187.147 1613.23 190.896 1616.19 194.676 1619.97 cv
198.456 1623.75 201.425 1627.5 202.925 1630.22 cv
202.925 1630.22 203.855 1631.18 202.573 1635.42 cv
202.096 1636.99 200.814 1638.36 200.269 1638.78 cv
199.452 1639.42 198.638 1639.92 197.851 1640.34 cv
194.424 1642.7 200.734 1652.72 204.45 1656.44 cv
208.164 1660.14 218.185 1666.46 220.537 1663.03 cv
220.954 1662.24 221.461 1661.43 222.097 1660.61 cv
222.521 1660.07 223.891 1658.78 225.458 1658.31 cv
229.7 1657.02 230.662 1657.96 230.662 1657.96 cv
233.374 1659.46 237.126 1662.42 240.905 1666.2 cv
244.689 1669.99 247.654 1673.73 249.155 1676.45 cv
249.155 1676.45 250.938 1680.78 248.163 1683.55 cv
248.135 1683.57 li
cp
1 1 1 rgb
f
798.251 1930.75 mo
220.583 1930.75 li
186.102 1930.75 158.023 1902.83 157.763 1868.41 cv
861.071 1868.41 li
860.811 1902.83 832.731 1930.75 798.251 1930.75 cv
level3{
gsave
clp
[-6.31267e-6 144.417 -144.417 -6.31267e-6 509.417 1795.72 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-6.31267e-6 144.417 -144.417 -6.31267e-6 509.417 1795.72 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
798.251 1795.72 mo
220.583 1795.72 li
180.868 1795.72 148.374 1828.22 148.374 1867.93 cv
148.374 1907.65 180.868 1940.14 220.583 1940.14 cv
798.251 1940.14 li
837.966 1940.14 870.459 1907.65 870.459 1867.93 cv
870.459 1828.22 837.966 1795.72 798.251 1795.72 cv
798.251 1802.94 mo
834.087 1802.94 863.238 1832.1 863.238 1867.93 cv
863.238 1903.77 834.087 1932.92 798.251 1932.92 cv
220.583 1932.92 li
184.747 1932.92 155.595 1903.77 155.595 1867.93 cv
155.595 1832.1 184.747 1802.94 220.583 1802.94 cv
798.251 1802.94 li
.121569 .188235 .239216 rgb
f
220.583 1805.11 mo
185.942 1805.11 157.761 1833.29 157.761 1867.93 cv
157.761 1902.57 185.942 1930.75 220.583 1930.75 cv
798.251 1930.75 li
832.891 1930.75 861.073 1902.57 861.073 1867.93 cv
861.073 1833.29 832.891 1805.11 798.251 1805.11 cv
220.583 1805.11 li
798.251 1935.09 mo
220.583 1935.09 li
183.553 1935.09 153.428 1904.96 153.428 1867.93 cv
153.428 1830.91 183.553 1800.78 220.583 1800.78 cv
798.251 1800.78 li
835.28 1800.78 865.405 1830.91 865.405 1867.93 cv
865.405 1904.96 835.28 1935.09 798.251 1935.09 cv
.568627 .560784 .690196 rgb
f
870.448 1868.41 mo
865.403 1868.41 li
865.404 1868.25 865.405 1868.09 865.405 1867.93 cv
865.405 1830.91 835.28 1800.78 798.251 1800.78 cv
220.583 1800.78 li
183.553 1800.78 153.428 1830.91 153.428 1867.93 cv
153.428 1868.09 153.429 1868.25 153.43 1868.41 cv
148.386 1868.41 li
148.385 1868.25 148.374 1868.09 148.374 1867.93 cv
148.374 1867.93 li
148.374 1828.22 180.868 1795.72 220.583 1795.72 cv
798.251 1795.72 li
837.966 1795.72 870.459 1828.22 870.459 1867.93 cv
870.459 1867.93 li
870.459 1868.09 870.448 1868.25 870.448 1868.41 cv
level3{
gsave
clp
[-3.10514e-6 71.0372 -71.0372 -3.10514e-6 509.417 1801.42 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~E-m4UH@g!YJS]O\CNb/AFae"FHtRMIAT<$,E-Yr3G[bQ7?u0smCNWruFBiO#>\J+\AoLmbDc^Ie<b#uH
@V\qOCJnMR;-mp3?"Zo;AklQA9Nbn!=^t$)@RsO.7o`nc<*hsj>shIo5u:cN:Kg"Y=[#M]4\Sp=8l[oD
<B*NJ3(Hk)78Yp1:btI61."_j5YNjr9.rM&/NlZV4@gq`7k-Ph-oaXC2aerM66nET,;VS/1-Zm94s)IA
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.10514e-6 71.0372 -71.0372 -3.10514e-6 509.417 1801.42 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Df9Q4Df0H0D/=$)Chmg%CMIU!C2%BqBP1sjB4baeARo=^A7K+Z@q&nV@UW\Q?sd8J?X@&F?<piA>[(E:
>?b<9>$>'3=]nj/='&F'<`W4#<E3!t<)cdp;Gp@h;,L.d:JX_\:/4MX9he>V9MA)P91qlL8P)HD84Z6@
7n6'=7Rfj9779O26UO4-6:!n&5X7S!5<h@s5<_7o4Ztqj4?GVc3]];^3B/uW2`EZS2`<QO2)R6J1c$pC
1,:U?0ekC;0JG170/"t3/hS_-/1`>'.k<)!.4H\p.4HYn-RU8h-71#b,U=W\,9nEX+sJ3T+X%sN+!2RH
~>
<~H?sm`H?jd\G^"@UGBS.QG'.qMF`__HF)l;AEcQ2?EH#l9E,TZ5Df0H1DJa6,Chmg%CMIU!C2%BrBkV0n
BP;$kAnGUcAS#FaA7T1[@q/tW@U`bS@:<PO?XI,G?=$oC?!U]?>[1K;>?b97=]nj/=BJ[-='&F'<`W4#
<E3$u<)cgq;c6Lj;,L1e:f'ta:JXb]:/4PY9h\5R91qoN91hfJ8P)KE84Z9A7n6'=7R]a66psF16UO4-
6:+"*5s[b$5<h@s5!D.o5!D+m4?P_g4$,Mc3]];_3B9&Y2`EZS2E!HO2)R6K1c.!E1,:U?0ekC;0JG17
~>
<~JqAT+Jq8K(JUi9$J:E&tIXQWmI=6NkI!^3eH[:!aH?jd]H$FRYG^"@UGBS.PF`__IFEDVHFE;MDEcH)=
EH,r:E,]`6Df9N2DJj<.D/F**CMR["C2.KuBk_6oBP;$kB4kggAnGUcAS#C_A7T1[@q/tW@U`bS@:<PO
?XI/H?=$rD?!U`@>[1N<>?b<8>$>*4=]nm0=BJ[,='&I(<`N.!<)cgr<)Z^n;GpCi;,L1e:f'ta:JOYZ
9he>V9he;T91qoN8kM]J8kMZH84Z9B7n6'>7Rfj:77BX66psF26UO1,5s[e&5s[b$5<h@s5!D.o4Ztqk
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
861.071 1868.41 mo
157.763 1868.41 li
157.762 1868.25 157.761 1868.09 157.761 1867.93 cv
157.761 1833.29 185.942 1805.11 220.583 1805.11 cv
798.251 1805.11 li
832.891 1805.11 861.073 1833.29 861.073 1867.93 cv
861.073 1868.09 861.072 1868.25 861.071 1868.41 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[704.64 0 0 64.8 156.96 130.88 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 1468 
/H 135 
/M[1468 0 0 -135 0 135 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 1468 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1468 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 1468 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K!g3<K!g3<K!g3<K!g3<K!g3<K!i1tag?Z,K!^-:K!^-:K!^-:K!^-:K!^-:o!F"jK#rVdK#rVdK#rVd
K#rVdK#rVd]#i(%K!g3<K!g3<K!g3<K!g3<K!g3<K!k0WK!U'8K!U'8K!U'8K!U'8K!U'8K!W%paiT.V
K#rVdK#rVdK#rVdK#rVdK#rVdo#ZKkK!g3<K!g3<K!g3<K!g3<K!g3<]!]YdK!U'8K!U'8K!U'8K!U'8
K!U'8K!Y$SK#iPbK#iPbK#iPbK#iPbK#iPbK#kOEag6T*K!U'8K!U'8K!U'8K!U'8K!U'8o!<qRK!L!6
K!L!6K!L!6K!L!6K!L!6]!BGuK#`J`K#`J`K#`J`K#`J`K#`J`K#dH&K!U'8K!U'8K!U'8K!U'8K!U'8
K!W%pag-N(K!L!6K!L!6K!L!6K!L!6K!L!6o!3kfK#`J`K#`J`K#`J`K#`J`K#`J`]#Vq!K!U'8K!U'8
K!U'8K!U'8K!U'8K!Y$SK!L!6K!L!6K!L!6K!L!6K!L!6K!MtnaiB"RK#`J`K#`J`K#`J`K#`J`K#`J`
o#H?gK!U'8K!U'8K!U'8K!U'8K!U'8]!KM`K!Bp4K!Bp4K!Bp4K!Bp4K!Bp4K!FmOK#`J`K#`J`K#`J`
K#`J`K#`J`K#bICag6T*K!U'8K!U'8K!U'8K!U'8K!U'8o!<qQK!Bp4K!Bp4K!Bp4K!Bp4K!Bp4]!9At
K#`J`K#`J`K#`J`K#`J`K#`J`K#dH&K!L!6K!L!6K!L!6K!L!6K!L!6K!MtnafpB$K!9j2K!9j2K!9j2
K!9j2K!9j2o!!_cK#WD^K#WD^K#WD^K#WD^K#WD^]#MjsK!Bp4K!Bp4K!Bp4K!Bp4K!Bp4K!FmOK!9j2
K!9j2K!9j2K!9j2K!9j2K!;hjai8qPK#WD^K#WD^K#WD^K#WD^K#WD^o#?9dK!Bp4K!Bp4K!Bp4K!Bp4
K!Bp4]!9A]K!9j2K!9j2K!9j2K!9j2K!9j2K!=gMK#N>\K#N>\K#N>\K#N>\K#N>\K#P=?ag$H&K!Bp4
K!Bp4K!Bp4K!Bp4K!Bp4o!*eNK!9j2K!9j2K!9j2K!9j2K!9j2]!0;qK#N>\K#N>\K#N>\K#N>\K#N>\
K#R<"K!Bp4K!Bp4K!Bp4K!Bp4K!Bp4K!Dnlafg<"K!0d0K!0d0K!0d0K!0d0K!0d0numYaK#N>\K#N>\
K#N>\K#N>\K#N>\]#DdqK!9j2K!9j2K!9j2K!9j2K!9j2K!=gMK!'^.K!'^.K!'^.K!'^.K!'^.K!)\f
ai&eLK#E8ZK#E8ZK#E8ZK#E8ZK#E8Zo#--aK!9j2K!9j2K!9j2K!9j2K!9j2]!0;ZK!'^.K!'^.K!'^.
K!'^.K!'^.K!+[IK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#G7=afg<"K!0d0K!0d0K!0d0K!0d0K!0d0numYJ
K!'^.K!'^.K!'^.K!'^.K!'^.\us/nK#E8ZK#E8ZK#E8ZK#E8ZK#E8ZK#I5uK!'^.K!'^.K!'^.K!'^.
K!'^.K!)\fafU/sJusX,JusX,JusX,JusX,JusX,nu[M]K#<2XK#<2XK#<2XK#<2XK#<2X]#2XmK!'^.
K!'^.K!'^.K!'^.K!'^.K!+[IJujR*JujR*JujR*JujR*JujR*JulPbahr_JK#<2XK#<2XK#<2XK#<2X
K#<2Xo#$'^K!'^.K!'^.K!'^.K!'^.K!'^.\us/VJujR*JujR*JujR*JujR*JujR*JunOEK#3,VK#3,V
K#3,VK#3,VK#3,VK#5+9af^5uK!'^.K!'^.K!'^.K!'^.K!'^.nudSFJuaL(JuaL(JuaL(JuaL(JuaL(
\uWriK#3,VK#3,VK#3,VK#3,VK#3,VK#7)qK!'^.K!'^.K!'^.K!'^.K!'^.K!)\fafC#oJuaL(JuaL(
JuaL(JuaL(JuaL(nuIAZK#3,VK#3,VK#3,VK#3,VK#3,V]#)RjJujR*JujR*JujR*JujR*JujR*JunOE
JuaL(JuaL(JuaL(JuaL(JuaL(JucJ`ah`SFK#*&TK#*&TK#*&TK#*&TK#*&To"fpZJujR*JujR*JujR*
JujR*JujR*\ua#SJuaL(JuaL(JuaL(JuaL(JuaL(JueICK#*&TK#*&TK#*&TK#*&TK#*&TK#,%7afL)q
JujR*JujR*JujR*JujR*JujR*nuRGCJuXF&JuXF&JuXF&JuXF&JuXF&\uNlgK#*&TK#*&TK#*&TK#*&T
K#*&TK#.#oJuaL(JuaL(JuaL(JuaL(JuaL(JucJ`af0lkJuO@$JuO@$JuO@$JuO@$JuO@$nu75VK"uuR
K"uuRK"uuRK"uuRK"uuR]"lFgJuaL(JuaL(JuaL(JuaL(JuaL(JueICJuO@$JuO@$JuO@$JuO@$JuO@$
JuQ>\ahWMDK"uuRK"uuRK"uuRK"uuRK"uuRo"]jXJuaL(JuaL(JuaL(JuaL(JuaL(\uWrPJuO@$JuO@$
JuO@$JuO@$JuO@$JuS=?K"loPK"loPK"loPK"loPK"loPK"nn3af9rmJuXF&JuXF&JuXF&JuXF&JuXF&
nu@;?JuF:"JuF:"JuF:"JuF:"JuF:"\u<`cK"loPK"loPK"loPK"loPK"loPK"plkJuXF&JuXF&JuXF&
JuXF&JuXF&JuZD^af'fiJuF:"JuF:"JuF:"JuF:"JuF:"nu./TK"loPK"loPK"loPK"loPK"loP]"c@d
JuO@$JuO@$JuO@$JuO@$JuO@$JuS=?Ju=3uJu=3uJu=3uJu=3uJu=3uJu?2XahEA@K"ciNK"ciNK"ciN
K"ciNK"ciNo"K^TJuO@$JuO@$JuO@$JuO@$JuO@$\uEfLJu=3uJu=3uJu=3uJu=3uJu=3uJuA1;K"ciN
K"ciNK"ciNK"ciNK"ciNK"eh1af0lkJuO@$JuO@$JuO@$JuO@$JuO@$nu75=Ju=3uJu=3uJu=3uJu=3u
Ju=3u\u3Z`K"ZcLK"ZcLK"ZcLK"ZcLK"ZcLK"^`gJuF:"JuF:"JuF:"JuF:"JuF:"JuH8ZaejZeJu4-s
Ju4-sJu4-sJu4-sJu4-sntq#PK"ZcLK"ZcLK"ZcLK"ZcLK"ZcL]"Q4aJuF:"JuF:"JuF:"JuF:"JuF:"
JuJ7=Ju4-sJu4-sJu4-sJu4-sJu4-sJu6,Vah<;>K"ZcLK"ZcLK"ZcLK"ZcLK"ZcLo"BXQJu=3uJu=3u
Ju=3uJu=3uJu=3u\u3ZHJu+'qJu+'qJu+'qJu+'qJu+'qJu/%7K"ZcLK"ZcLK"ZcLK"ZcLK"ZcLK"\b/
aes`gJu=3uJu=3uJu=3uJu=3uJu=3unu%)9Ju+'qJu+'qJu+'qJu+'qJu+'q\u!N]K"Q]JK"Q]JK"Q]J
K"Q]JK"Q]JK"UZeJu=3uJu=3uJu=3uJu=3uJu=3uJu?2XaeaTcJu+'qJu+'qJu+'qJu+'qJu+'qntgrN
K"Q]JK"Q]JK"Q]JK"Q]JK"Q]J]"H.^Ju4-sJu4-sJu4-sJu4-sJu4-sJu8+9Ju"!oJu"!oJu"!oJu"!o
Ju"!oJu#uRah*/:K"HWHK"HWHK"HWHK"HWHK"HWHo"0LNJu4-sJu4-sJu4-sJu4-sJu4-s\u*TFJu"!o
Ju"!oJu"!oJu"!oJu"!oJu%t5K"HWHK"HWHK"HWHK"HWHK"HWHK"JV+aeaTcJu+'qJu+'qJu+'qJu+'q
Ju+'qntgr5JtmpmJtmpmJtmpmJtmpmJtmpm\tdBZK"HWHK"HWHK"HWHK"HWHK"HWHK"LTcJu+'qJu+'q
Ju+'qJu+'qJu+'qJu-&TaeFB]JtdjkJtdjkJtdjkJtdjkJtdjkntL`IK"?QFK"?QFK"?QFK"?QFK"?QF
]"6"[Ju+'qJu+'qJu+'qJu+'qJu+'qJu/%7JtdjkJtdjkJtdjkJtdjkJtdjkJtfiNah!)8K"?QFK"?QF
K"?QFK"?QFK"?QFo"'FKJu"!oJu"!oJu"!oJu"!oJu"!o\tmHBJtdjkJtdjkJtdjkJtdjkJtdjkJthh1
K"6KDK"6KDK"6KDK"6KDK"6KDK"8J'aeXNaJu"!oJu"!oJu"!oJu"!oJu"!ont^l3JtdjkJtdjkJtdjk
JtdjkJtdjk\t[<WK"6KDK"6KDK"6KDK"6KDK"6KDK":H_Ju"!oJu"!oJu"!oJu"!oJu"!oJu#uRae=<[
Jt[diJt[diJt[diJt[diJt[dintCZGK"6KDK"6KDK"6KDK"6KDK"6KD]",qWJtdjkJtdjkJtdjkJtdjk
JtdjkJthh1JtR^gJtR^gJtR^gJtR^gJtR^gJtT]Jagcr4K"-EBK"-EBK"-EBK"-EBK"-EBo!j:GJtdjk
JtdjkJtdjkJtdjkJtdjk\t[<>JtR^gJtR^gJtR^gJtR^gJtR^gJtV\-K"-EBK"-EBK"-EBK"-EBK"-EB
K"/D%aeFB]JtdjkJtdjkJtdjkJtdjkJtdjkntL`/JtR^gJtR^gJtR^gJtR^gJtR^g\tI0TK"-EBK"-EB
K"-EBK"-EBK"-EBK"1B]JtdjkJtdjkJtdjkJtdjkJtdjkJtfiNae+0WJtIXeJtIXeJtIXeJtIXeJtIXe
nt1NCK"$?@K"$?@K"$?@K"$?@K"$?@]!oeUJtdjkJtdjkJtdjkJtdjkJtdjkJthh1Jt@RcJt@RcJt@Rc
Jt@RcJt@RcJtBQFagQf0K!p9>K!p9>K!p9>K!p9>K!p9>o!X.CJtR^gJtR^gJtR^gJtR^gJtR^g\tI0:
Jt@RcJt@RcJt@RcJt@RcJt@RcJtDP)K!p9>K!p9>K!p9>K!p9>K!p9>K!r8!ae46YJtR^gJtR^gJtR^g
JtR^gJtR^gnt:T+Jt@RcJt@RcJt@RcJt@RcJt@Rc\t7$PK!p9>K!p9>K!p9>K!p9>K!p9>K!t6YJtR^g
JtR^gJtR^gJtR^gJtR^gJtT]Jadn$SJt7LaJt7LaJt7LaJt7LaJt7LanstB@K!p9>K!p9>K!p9>K!p9>
K!p9>]!f_QJtIXeJtIXeJtIXeJtIXeJtIXeJtMV+Jt7LaJt7LaJt7LaJt7LaJt7LaJt9KDag?Z,K!^-:
K!^-:K!^-:K!^-:K!^-:o!F"@JtIXeJtIXeJtIXeJtIXeJtIXe\t@*8Jt7LaJt7LaJt7LaJt7LaJt7La
Jt;J'K!^-:K!^-:K!^-:K!^-:K!^-:K!`+rae+0WJtIXeJtIXeJtIXeJtIXeJtIXent1N(Jt.F_Jt.F_
Jt.F_Jt.F_Jt.F_\t$mLK!^-:K!^-:K!^-:K!^-:K!^-:K!b*UJt@RcJt@RcJt@RcJt@RcJt@RcJtBQF
ad[mOJt%@]Jt%@]Jt%@]Jt%@]Jt%@]nsb6<K!^-:K!^-:K!^-:K!^-:K!^-:]!TSNJt@RcJt@RcJt@Rc
Jt@RcJt@RcJtDP)Jt%@]Jt%@]Jt%@]Jt%@]Jt%@]Jt'?@ag?Z,K!^-:K!^-:K!^-:K!^-:K!^-:o!F">
Jt7LaJt7LaJt7LaJt7LaJt7La\t-s4Jt%@]Jt%@]Jt%@]Jt%@]Jt%@]Jt)>#K!U'8K!U'8K!U'8K!U'8
K!U'8K!W%padn$SJt7LaJt7LaJt7LaJt7LaJt7LanstB%Jt%@]Jt%@]Jt%@]Jt%@]Jt%@]\spgJK!U'8
K!U'8K!U'8K!U'8K!U'8K!Y$SJt7LaJt7LaJt7LaJt7LaJt7LaJt9KDadRgMJsq:[Jsq:[Jsq:[Jsq:[
Jsq:[nsY09K!L!6K!L!6K!L!6K!L!6K!L!6]!BGJJt.F_Jt.F_Jt.F_Jt.F_Jt.F_Jt2D%Jsh4YJsh4Y
Jsh4YJsh4YJsh4YJsj3<ag-N(K!L!6K!L!6K!L!6K!L!6K!L!6o!3k:Jt%@]Jt%@]Jt%@]Jt%@]Jt%@]
\spg0Jsh4YJsh4YJsh4YJsh4YJsh4YJsl1tK!Bp4K!Bp4K!Bp4K!Bp4K!Bp4K!Dnlad[mOJt%@]Jt%@]
Jt%@]Jt%@]Jt%@]nsb5uJs_.WJs_.WJs_.WJs_.WJs_.W\sUUEK!Bp4K!Bp4K!Bp4K!Bp4K!Bp4K!FmO
Jsq:[Jsq:[Jsq:[Jsq:[Jsq:[Jss9>ad@[IJs_.WJs_.WJs_.WJs_.WJs_.WnsG$5K!9j2K!9j2K!9j2
K!9j2K!9j2]!0;FJsq:[Jsq:[Jsq:[Jsq:[Jsq:[Jsu8!Js_.WJs_.WJs_.WJs_.WJs_.WJsa-:afpB$
K!9j2K!9j2K!9j2K!9j2K!9j2o!!_7Jsq:[Jsq:[Jsq:[Jsq:[Jsq:[\sga-JsV(UJsV(UJsV(UJsV(U
JsV(UJsZ%pK!9j2K!9j2K!9j2K!9j2K!9j2K!;hjadRgMJsq:[Jsq:[Jsq:[Jsq:[Jsq:[nsY/sJsV(U
JsV(UJsV(UJsV(UJsV(U\sLOBK!0d0K!0d0K!0d0K!0d0K!0d0K!4aKJsh4YJsh4YJsh4YJsh4YJsh4Y
Jsj3<ad.OEJsM"SJsM"SJsM"SJsM"SJsM"Sns4m2K!0d0K!0d0K!0d0K!0d0K!0d0]!'5CJs_.WJs_.W
Js_.WJs_.WJs_.WJsc+rJsM"SJsM"SJsM"SJsM"SJsM"SJsO!6af^5uK!'^.K!'^.K!'^.K!'^.K!'^.
nudS3Js_.WJs_.WJs_.WJs_.WJs_.W\sUU*JsM"SJsM"SJsM"SJsM"SJsM"SJsPtnK!'^.K!'^.K!'^.
K!'^.K!'^.K!)\fad@[IJs_.WJs_.WJs_.WJs_.WJs_.WnsG#oJsCqQJsCqQJsCqQJsCqQJsCqQ\s:C?
K!'^.K!'^.K!'^.K!'^.K!'^.K!+[IJs_.WJs_.WJs_.WJs_.WJs_.WJsa-:acqCAJs:kOJs:kOJs:kO
Js:kOJs:kOns"a.JusX,JusX,JusX,JusX,JusX,\uj)@JsV(UJsV(UJsV(UJsV(UJsV(UJsZ%pJs:kO
Js:kOJs:kOJs:kOJs:kOJs<j2afU/sJusX,JusX,JusX,JusX,JusX,nu[M0JsM"SJsM"SJsM"SJsM"S
JsM"S\sCI%Js1eMJs1eMJs1eMJs1eMJs1eMJs5bhJujR*JujR*JujR*JujR*JujR*JulPbad%ICJsCqQ
JsCqQJsCqQJsCqQJsCqQns+fjJs1eMJs1eMJs1eMJs1eMJs1eM\s(7;JujR*JujR*JujR*JujR*JujR*
JunOEJsCqQJsCqQJsCqQJsCqQJsCqQJsEp4ac_7=Js(_KJs(_KJs(_KJs(_KJs(_KnreU*JuaL(JuaL(
JuaL(JuaL(JuaL(\uWr<JsCqQJsCqQJsCqQJsCqQJsCqQJsGnlJrtYIJrtYIJrtYIJrtYIJrtYIJs!X,
afC#oJuaL(JuaL(JuaL(JuaL(JuaL(nuIA-JsCqQJsCqQJsCqQJsCqQJsCqQ\s:C"JrtYIJrtYIJrtYI
JrtYIJrtYIJs#VdJuaL(JuaL(JuaL(JuaL(JuaL(JucJ`acqCAJs:kOJs:kOJs:kOJs:kOJs:kOns"`g
JrtYIJrtYIJrtYIJrtYIJrtYI\rk+7JuXF&JuXF&JuXF&JuXF&JuXF&Ju\CAJs1eMJs1eMJs1eMJs1eM
Js1eMJs3d0acV1;JrtYIJrtYIJrtYIJrtYIJrtYInr\O(JuXF&JuXF&JuXF&JuXF&JuXF&\uNl9Js1eM
Js1eMJs1eMJs1eMJs1eMJs5bhJrkSGJrkSGJrkSGJrkSGJrkSGJrmR*af0lkJuO@$JuO@$JuO@$JuO@$
JuO@$nu75(Js(_KJs(_KJs(_KJs(_KJs(_K\rt0rJrbMEJrbMEJrbMEJrbMEJrbMEJrfJ`JuO@$JuO@$
JuO@$JuO@$JuO@$JuQ>\ac_7=Js(_KJs(_KJs(_KJs(_KJs(_KnreTcJrbMEJrbMEJrbMEJrbMEJrbME
\rXt4JuO@$JuO@$JuO@$JuO@$JuO@$JuS=?Js(_KJs(_KJs(_KJs(_KJs(_KJs*^.ac:t5JrYGCJrYGC
JrYGCJrYGCJrYGCnrA=#JuF:"JuF:"JuF:"JuF:"JuF:"\u<`5JrtYIJrtYIJrtYIJrtYIJrtYIJs#Vd
JrYGCJrYGCJrYGCJrYGCJrYGCJr[F&aes`gJu=3uJu=3uJu=3uJu=3uJu=3unu%)%JrtYIJrtYIJrtYI
JrtYIJrtYI\rk*pJrYGCJrYGCJrYGCJrYGCJrYGCJr]D^Ju=3uJu=3uJu=3uJu=3uJu=3uJu?2XacM+9
JrkSGJrkSGJrkSGJrkSGJrkSGnrSH_JrPAAJrPAAJrPAAJrPAAJrPAA\rFh0Ju=3uJu=3uJu=3uJu=3u
Ju=3uJuA1;JrkSGJrkSGJrkSGJrkSGJrkSGJrmR*ac1n3JrPAAJrPAAJrPAAJrPAAJrPAAnr87!Ju=3u
Ju=3uJu=3uJu=3uJu=3u\u3Z3JrkSGJrkSGJrkSGJrkSGJrkSGJroPbJrG;?JrG;?JrG;?JrG;?JrG;?
JrI:"aeaTcJu+'qJu+'qJu+'qJu+'qJu+'qntgr!JrbMEJrbMEJrbMEJrbMEJrbME\rXslJrG;?JrG;?
JrG;?JrG;?JrG;?JrK8ZJu+'qJu+'qJu+'qJu+'qJu+'qJu-&TacD%7JrbMEJrbMEJrbMEJrbMEJrbME
nrJB]JrG;?JrG;?JrG;?JrG;?JrG;?\r=b-Ju+'qJu+'qJu+'qJu+'qJu+'qJu/%7JrYGCJrYGCJrYGC
JrYGCJrYGCJr[F&abtb/Jr>5=Jr>5=Jr>5=Jr>5=Jr>5=nr&*rJu+'qJu+'qJu+'qJu+'qJu+'q\u!N.
JrPAAJrPAAJrPAAJrPAAJrPAAJrT>\Jr5/;Jr5/;Jr5/;Jr5/;Jr5/;Jr7-saeXNaJu"!oJu"!oJu"!o
Ju"!oJu"!ont^ksJrPAAJrPAAJrPAAJrPAAJrPAA\rFghJr5/;Jr5/;Jr5/;Jr5/;Jr5/;Jr9,VJtmpm
JtmpmJtmpmJtmpmJtmpmJtooPac1n3JrPAAJrPAAJrPAAJrPAAJrPAAnr86XJr,)9Jr,)9Jr,)9Jr,)9
Jr,)9\r"P(JtmpmJtmpmJtmpmJtmpmJtmpmJtqn3JrPAAJrPAAJrPAAJrPAAJrPAAJrR@$abbV+Jr,)9
Jr,)9Jr,)9Jr,)9Jr,)9nqhsnJtmpmJtmpmJtmpmJtmpmJtmpm\tdB+JrG;?JrG;?JrG;?JrG;?JrG;?
JrK8ZJr,)9Jr,)9Jr,)9Jr,)9Jr,)9Jr.'qaeFB]JtdjkJtdjkJtdjkJtdjkJtdjkntL_oJr>5=Jr>5=
Jr>5=Jr>5=Jr>5=\r4[cJqnr5Jqnr5Jqnr5Jqnr5Jqnr5JqroPJtdjkJtdjkJtdjkJtdjkJtdjkJtfiN
abtb/Jr>5=Jr>5=Jr>5=Jr>5=Jr>5=nr&*TJqnr5Jqnr5Jqnr5Jqnr5Jqnr5\qeD$Jt[diJt[diJt[di
Jt[diJt[diJt_b/Jr5/;Jr5/;Jr5/;Jr5/;Jr5/;Jr7-sabPJ'Jqnr5Jqnr5Jqnr5Jqnr5Jqnr5nqVgj
Jt[diJt[diJt[diJt[diJt[di\tR6'Jr5/;Jr5/;Jr5/;Jr5/;Jr5/;Jr9,VJqnr5Jqnr5Jqnr5Jqnr5
Jqnr5Jqppmae=<[Jt[diJt[diJt[diJt[diJt[dintCYmJr5/;Jr5/;Jr5/;Jr5/;Jr5/;\r+UaJqel3
Jqel3Jqel3Jqel3Jqel3JqiiNJtR^gJtR^gJtR^gJtR^gJtR^gJtT]JabbV+Jr,)9Jr,)9Jr,)9Jr,)9
Jr,)9nqhsQJqel3Jqel3Jqel3Jqel3Jqel3\q\>"JtR^gJtR^gJtR^gJtR^gJtR^gJtV\-Jr##7Jr##7
Jr##7Jr##7Jr##7Jr%!oab58!JqS`/JqS`/JqS`/JqS`/JqS`/nq;UeJtIXeJtIXeJtIXeJtIXeJtIXe
\t@*#Jr##7Jr##7Jr##7Jr##7Jr##7Jr&uRJqS`/JqS`/JqS`/JqS`/JqS`/JqU^gae+0WJtIXeJtIXe
JtIXeJtIXeJtIXent1MhJqnr5Jqnr5Jqnr5Jqnr5Jqnr5\qeC\JqS`/JqS`/JqS`/JqS`/JqS`/JqW]J
Jt@RcJt@RcJt@RcJt@RcJt@RcJtBQFabPJ'Jqnr5Jqnr5Jqnr5Jqnr5Jqnr5nqVgMJqS`/JqS`/JqS`/
JqS`/JqS`/\qJ1sJt@RcJt@RcJt@RcJt@RcJt@RcJtDP)Jqnr5Jqnr5Jqnr5Jqnr5Jqnr5Jqppmab,1t
JqJZ-JqJZ-JqJZ-JqJZ-JqJZ-nq2ObJt7LaJt7LaJt7LaJt7LaJt7La\t-rtJqel3Jqel3Jqel3Jqel3
Jqel3JqiiNJqAT+JqAT+JqAT+JqAT+JqAT+JqCRcadn$SJt7LaJt7LaJt7LaJt7LaJt7LanstAdJq\f1
Jq\f1Jq\f1Jq\f1Jq\f1\qS7XJqAT+JqAT+JqAT+JqAT+JqAT+JqEQFJt.F_Jt.F_Jt.F_Jt.F_Jt.F_
Jt0EBab>>#Jq\f1Jq\f1Jq\f1Jq\f1Jq\f1nqD[HJq8N)Jq8N)Jq8N)Jq8N)Jq8N)\q.tnJt.F_Jt.F_
Jt.F_Jt.F_Jt.F_Jt2D%Jq\f1Jq\f1Jq\f1Jq\f1Jq\f1Jq^diaao%pJq8N)Jq8N)Jq8N)Jq8N)Jq8N)
npuC_Jt.F_Jt.F_Jt.F_Jt.F_Jt.F_\t$lqJqS`/JqS`/JqS`/JqS`/JqS`/JqW]JJq8N)Jq8N)Jq8N)
Jq8N)Jq8N)Jq:Laad[mOJt%@]Jt%@]Jt%@]Jt%@]Jt%@]nsb5aJqS`/JqS`/JqS`/JqS`/JqS`/\qJ1T
Jq&B%Jq&B%Jq&B%Jq&B%Jq&B%Jq*?@Jsq:[Jsq:[Jsq:[Jsq:[Jsq:[Jss9>ab,1tJqJZ-JqJZ-JqJZ-
JqJZ-JqJZ-nq2ODJq&B%Jq&B%Jq&B%Jq&B%Jq&B%\pqhjJsq:[Jsq:[Jsq:[Jsq:[Jsq:[Jsu8!JqAT+
JqAT+JqAT+JqAT+JqAT+JqCRcaa\nlJq&B%Jq&B%Jq&B%Jq&B%Jq&B%npc7[Jsq:[Jsq:[Jsq:[Jsq:[
Jsq:[\sg`mJqAT+JqAT+JqAT+JqAT+JqAT+JqEQFJq&B%Jq&B%Jq&B%Jq&B%Jq&B%Jq(@]adIaKJsh4Y
Jsh4YJsh4YJsh4YJsh4YnsP)]JqAT+JqAT+JqAT+JqAT+JqAT+\q8%QJpr<#Jpr<#Jpr<#Jpr<#Jpr<#
Jq!9>Js_.WJs_.WJs_.WJs_.WJs_.WJsa-:aao%pJq8N)Jq8N)Jq8N)Jq8N)Jq8N)npuCAJpr<#Jpr<#
Jpr<#Jpr<#Jpr<#\phbgJs_.WJs_.WJs_.WJs_.WJs_.WJsc+rJq8N)Jq8N)Jq8N)Jq8N)Jq8N)Jq:La
aaJbhJpi6!Jpi6!Jpi6!Jpi6!Jpi6!npQ+WJs_.WJs_.WJs_.WJs_.WJs_.W\sUTiJq/H'Jq/H'Jq/H'
Jq/H'Jq/H'Jq3EBJp`/tJp`/tJp`/tJp`/tJp`/tJpb.Wad7UGJsV(UJsV(UJsV(UJsV(UJsV(Uns=rX
Jq&B%Jq&B%Jq&B%Jq&B%Jq&B%\pqhKJpW)rJpW)rJpW)rJpW)rJpW)rJp['8JsM"SJsM"SJsM"SJsM"S
JsM"SJsO!6aa\nlJq&B%Jq&B%Jq&B%Jq&B%Jq&B%npc7<JpW)rJpW)rJpW)rJpW)rJpW)r\pMPbJsM"S
JsM"SJsM"SJsM"SJsM"SJsPtnJq&B%Jq&B%Jq&B%Jq&B%Jq&B%Jq(@]aa8VdJpW)rJpW)rJpW)rJpW)r
JpW)rnp>tSJsM"SJsM"SJsM"SJsM"SJsM"S\sCHeJpr<#Jpr<#Jpr<#Jpr<#Jpr<#Jq!9>JpDrnJpDrn
JpDrnJpDrnJpDrnJpFqQad%ICJsCqQJsCqQJsCqQJsCqQJsCqQns+fUJpr<#Jpr<#Jpr<#Jpr<#Jpr<#
\phbHJpDrnJpDrnJpDrnJpDrnJpDrnJpHp4Js:kOJs:kOJs:kOJs:kOJs:kOJs<j2aaJbhJpi6!Jpi6!
Jpi6!Jpi6!Jpi6!npQ+8JpDrnJpDrnJpDrnJpDrnJpDrn\p;D^Js:kOJs:kOJs:kOJs:kOJs:kOJs>hj
Jpi6!Jpi6!Jpi6!Jpi6!Jpi6!Jpk4Yaa&J`JpDrnJpDrnJpDrnJpDrnJpDrnnp,hOJs:kOJs:kOJs:kO
Js:kOJs:kO\s1<aJp`/tJp`/tJp`/tJp`/tJp`/tJpd-:Jp;llJp;llJp;llJp;llJp;llJp=kOach=?
Js1eMJs1eMJs1eMJs1eMJs1eMnrnZQJp`/tJp`/tJp`/tJp`/tJp`/t\pVVEJp;llJp;llJp;llJp;ll
Jp;llJp?j2Js1eMJs1eMJs1eMJs1eMJs1eMJs3d0aaA\fJp`/tJp`/tJp`/tJp`/tJp`/tnpH%5Jp2fj
Jp2fjJp2fjJp2fjJp2fj\p)8ZJs(_KJs(_KJs(_KJs(_KJs(_KJs,\fJpW)rJpW)rJpW)rJpW)rJpW)r
JpY(Ua``8ZJp)`hJp)`hJp)`hJp)`hJp)`hnofVJJs(_KJs(_KJs(_KJs(_KJs(_K\rt0]JpN#pJpN#p
JpN#pJpN#pJpN#pJpR!6Jp)`hJp)`hJp)`hJp)`hJp)`hJp+_KacV1;JrtYIJrtYIJrtYIJrtYIJrtYI
nr\NMJpN#pJpN#pJpN#pJpN#pJpN#p\pDJAJp)`hJp)`hJp)`hJp)`hJp)`hJp-^.JrtYIJrtYIJrtYI
JrtYIJrtYIJs!X,J,~>

%%EndBinary
grestore
np
865.403 1868.41 mo
861.071 1868.41 li
861.072 1868.25 861.073 1868.09 861.073 1867.93 cv
861.073 1833.29 832.891 1805.11 798.251 1805.11 cv
220.583 1805.11 li
185.942 1805.11 157.761 1833.29 157.761 1867.93 cv
157.761 1868.09 157.762 1868.25 157.763 1868.41 cv
153.43 1868.41 li
153.429 1868.25 153.428 1868.09 153.428 1867.93 cv
153.428 1830.91 183.553 1800.78 220.583 1800.78 cv
798.251 1800.78 li
835.28 1800.78 865.405 1830.91 865.405 1867.93 cv
865.405 1868.09 865.404 1868.25 865.403 1868.41 cv
level3{
gsave
clp
[-3.10514e-6 71.0372 -71.0372 -3.10514e-6 509.417 1801.42 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~\[Thn\'2=ibdY%([^F;e[*#e_b-\Ls['If[ZH0>VaKi%kZ*;9QYK*lN`ilPbYH>dHXMq<C`3$)YXK0:?
Wl(m:_lBZPWi3e6Vno=0_5O6HVkq2,V8&n'^SRa@UnbZ"U;!Cr]q_:7U7f/mTY-tj]:bb-TUrcfS[tD`
\t5G&SX[0[R^elV\=8nqR[LXRR'rEL[[EJjR$P.HQF3'E[$Hr`Q'8P>PI$L:ZBUNXPEE,5OKjq/Y`Y!N
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.10514e-6 71.0372 -71.0372 -3.10514e-6 509.417 1801.42 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~\@B&Y\@8rV\$i`R[^NWQ[^ENN[C*EM[C!<J['R*FZa7!EZa-mBZE^[>Z*CR=Z*:I:Yck76YHP.5YHG%2
Y-+q1Y-+n/Xf\\+XK8M)XK8J'X/i8#WiE)!WiE%tWMukrWMuhpW2QVlVl-GjVl-DhVP^5fVP^2dV59u`
Unjf]USFTZUSFTYU8"BVU8"BUTqS0QTV.sNTV.sMT:_aJT:_aISt;OESXl=BSXl=AS=H+=S"#n:S"#n9
R[T\6R@0J2R@0J2R$a8.R$a8.Q^=&*QBmi&QBmi&Q'IW"Pa%DsPa%DsPEV2oPEV2oP*1ukOcbcgOH>Qc
~>
<~[^NWQ[^NWQ[^ENN[C*EM[C!<J['R*FZa-mBZEgdAZE^[>Z*CR=Z*:I:Yck76YHP.5YHG%2Y-+q1Y-"h.
Xf\\+XK8J'X/i;%X/i8#WiE)!WiE%tWMuhpW2QVlVl-GjVl-DhVP^5fVP^2dV59u`Unjf^Unjc\USFTZ
USFTYU8"BUTqS0QTV.sNTV.sMT:_aJT:_aISt;OESXl=BSXl=AS=H+>S=H+=S"#n9R[T\5R@0J2R@0J1
R$a8.R$a8.Q^=&*QBmi&QBmi&Q'IW"Q'IW"Pa%DsPEV2oP*1ukP*1ukOcbcgOcbcgOH>QcO,o?_NfK-[
~>
<~bfn;Tbfe2QbKJ)PbK@uMb0%lLb/qcIaiVZHaiMQEaN2HDaN)?Aa2c6@a2c6@a2Z-=`l?$<`l5p9`Pog8
`Pod6`5KU4`5KR2_o'C0_o'C0_o'@._SX1,_SX.*_83t(_83q&^qdb$^qd_"^V@Ou^V@Ls^:q=q^:q=q
^:q=p]tM+m]tM+l]Y(ni]Y(nh]=Y\e]=Y\d]"5Ja]"5Ja]"5J`\[f8]\[f8\\@B&Y\@B&X\$riU\$riT
[^NWQ[^NWQ[C*EM[C*EM[C*EM['[3I['[3IZa7!EZa7!EZEgdAZEgdAZ*CR=Z*CR=Yct@9Yct@9YHP.5
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
759.87 1875.42 mo
796.237 1924.37 li
796.237 1795.72 li
723.506 1795.72 li
723.506 1924.37 li
759.87 1875.42 li
cp
1 .933333 .576471 rgb
f
723.506 1795.72 mo
723.506 1924.37 li
759.87 1875.42 li
796.237 1924.37 li
796.237 1795.72 li
792.641 1795.72 li
792.641 1914.9 li
762.843 1873.5 li
762.174 1872.57 761.061 1872.01 759.87 1872.01 cv
758.68 1872.01 757.566 1872.57 756.896 1873.5 cv
727.103 1914.9 li
727.103 1795.72 li
723.506 1795.72 li
cp
.937255 .827451 .207843 rgb
f
796.237 1799.92 mo
796.237 1794.95 li
792.641 1794.95 li
727.103 1794.95 li
723.506 1794.95 li
723.506 1799.92 li
796.237 1799.92 li
cp
f
870.459 118.45 mo
870.459 158.166 837.966 190.658 798.251 190.658 cv
220.583 190.658 li
180.868 190.658 148.374 158.166 148.374 118.45 cv
148.374 78.7358 180.868 46.2412 220.583 46.2412 cv
798.251 46.2412 li
837.966 46.2412 870.459 78.7358 870.459 118.45 cv
.890196 .909804 .588235 rgb
f
798.251 46.2412 mo
731.754 46.2412 li
731.754 190.658 li
798.251 190.658 li
837.966 190.658 870.459 158.166 870.459 118.45 cv
870.459 78.7358 837.966 46.2412 798.251 46.2412 cv
.960784 .568627 .231373 rgb
f
731.754 118.929 mo
148.386 118.929 li
148.385 118.769 148.374 118.61 148.374 118.45 cv
148.374 118.45 li
148.374 78.7358 180.868 46.2412 220.583 46.2412 cv
731.754 46.2412 li
731.754 118.929 li
level3{
gsave
clp
[-3.10518e-6 -71.0382 71.0382 -3.10518e-6 509.417 113.229 ]ct
/15 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~mI7dUn@S)W]C#+!m-qRPn@@oS\Er[om-hFMn$hWO[d3CilgM4Hn$MEK[-R.dlgD(Dm]u-GZ0Lb]lL(nA
m]YpCYNbGWl0YV;mB,X?XQf,Rl0YP8mAoI;Wp&fKkj5;4m&9.7Vs*KFkNo)/l_`k2V<@0?kNer,l_EV.
UZUm:k3Jc(lCmA*T]YO3jm&K"lCR,&T&o7.jlr>tl($i!S)ih'jQW,ol'g\tRH3V"j62ljka1>nQK.1p
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.10518e-6 -71.0382 71.0382 -3.10518e-6 509.417 113.229 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~m-O**m-O**m-O**m-O**m-F!'lg*m&lg*m&lg*m&lg*m&lg*m&lg!d#lK[["lK[["lK[["lK[["lK[["
lK[["lK[Wul07Hsl07Hsl07Hsl07Hsl07Hsl07Eqkih6okih6okih6okih6okih6okih3mkND$kkND$k
kND$kkND$kkND$kkND$kkND$jk2tggk2tggk2tggk2tggk2tggk2tgfjlPUcjlPUcjlPUcjlPUcjlPUc
jlPUcjQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[io8tWio8tWio8tW
~>
<~n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*]W3mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2md9E/mHs<.
mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs9,m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O'(lg*m&
lg*m&lg*m&lg*m&lg*m&lg*m&lg*m%lK[["lK[["lK[["lK[["lK[["lK[["lK[["lK[[!l07Hsl07Hs
l07Hsl07Hsl07Hsl07Hsl07Hskih6okih6okih6okih6okih6okih6okih6okih6okND$kkND$kkND$k
~>
<~]=Y\e]=PSb]"5Ja]",A^\[]/Z\@B&Y\@8rV\$riU\$i`R[^NWQ[^ENN[C!<J['R*FZa7!EZa7!EZa-mB
ZEga?Z*CR=Z*CO;Yct=7YHP.5YHP+3Y-+q1Y-+n/Xf\\+XK8M)XK8J'X/i;%X/i8#WiE)!WiE%tWMuhp
W2QYnW2QYmVl-GiVP^5fVP^5eV5:#bV5:#aUnjf]USFTZUSFTYU8"BVU8"BUTqS0RTqS0QTV.sMT:_aI
St;OFSt;OFSXl=BSXl=BS=H+>S=H+>S"#n:R[T\6R[T\6R@0J2R@0J2R$a8.Q^=&*Q^=&*QBmi&Q'IW"
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
870.448 118.929 mo
731.754 118.929 li
731.754 46.2412 li
798.251 46.2412 li
837.966 46.2412 870.459 78.7358 870.459 118.45 cv
870.459 118.45 li
870.459 118.61 870.448 118.769 870.448 118.929 cv
level3{
gsave
clp
[-3.10518e-6 -71.0382 71.0382 -3.10518e-6 509.417 113.229 ]ct
/16 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~q72+Q\:OFaJ,$L&ppPVG[X@kXHhasopp>;@ZZu8NG5/@cpp"r9Y]KTDEqlhXpoeZ3Y&=$:DYU>MpT/0)
X(qC0C%nW@pSqm#WFbh&AbW-6pSVKpVd]=s@/$L)pS;-iUg<_i>PFmspS(gaTih#^=8&:fp7PFZT2bNU
;tce[p75(SS58jK:A1/Op6n\KRS*:A9(nZEp6\ADQUgb97J2s7op%o;PsY/.5kU@,oohT4P!/K#4S=gu
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.10518e-6 -71.0382 71.0382 -3.10518e-6 509.417 113.229 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~q"XXZq"XXZq"OOWp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4FVp\4CTp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
p@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Qp%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"N
p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"No^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
~>
<~\@B&Y\@8rV\$i`R[^NWQ[^ENN[C*EM[C!<J['R*FZa7!EZa-mBZE^[>Z*CR=Z*:I:Yck76YHP.5YHG%2
Y-+q1Y-+n/Xf\\+XK8M)XK8J'X/i8#WiE)!WiE%tWMukrWMuhpW2QVlVl-GjVl-DhVP^5fVP^2dV59u`
Unjf]USFTZUSFTYU8"BVU8"BUTqS0QTV.sNTV.sMT:_aJT:_aISt;OESXl=BSXl=AS=H+=S"#n:S"#n9
R[T\6R@0J2R@0J2R$a8.R$a8.Q^=&*QBmi&QBmi&Q'IW"Pa%DsPa%DsPEV2oPEV2oP*1ukOcbcgOH>Qc
~>
<~JUrB'JUi9#IsuiqIXZ`oI=-EiI!^3eH[:!aH?jd\G^"@UGB\7SG'.qMF`__IFE;MEF)l;AEcH)=EH#l9
E,]`6DJj<.D/F-,Ci!m&CMR["C2.HsBk_6oBP;$kB4kggAS#C_A7T4]A7T1[@U`bS@:<PO?sm>K?XI,G
?=$rD?!U`@>[(E9>$>*5>$5!1=BJ[,='&I(<`W7$<E3$u<)cgq;c?Um;Gg:f:f'tb:esk^:/4PY9he>U
9MA,R91qlL8P)KF8P)KF84Z6@7Rfj:7Rfg86psF26UO4.6:+"*5s[b$5<h@s5<h=q4Ztqk4?P_g4$,Mc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
798.25 46.2412 mo
220.583 46.2412 li
180.868 46.2412 148.374 78.7358 148.374 118.45 cv
148.374 158.166 180.868 190.658 220.583 190.658 cv
798.25 190.658 li
837.966 190.658 870.459 158.166 870.459 118.45 cv
870.459 78.7358 837.966 46.2412 798.25 46.2412 cv
cp
798.25 53.4629 mo
834.087 53.4629 863.238 82.6162 863.238 118.45 cv
863.238 154.285 834.087 183.438 798.25 183.438 cv
220.583 183.438 li
184.747 183.438 155.595 154.285 155.595 118.45 cv
155.595 82.6162 184.747 53.4629 220.583 53.4629 cv
798.25 53.4629 li
0 .290196 .231373 rgb
f
220.583 55.6289 mo
185.942 55.6289 157.761 83.8096 157.761 118.45 cv
157.761 153.089 185.942 181.272 220.583 181.272 cv
798.25 181.272 li
832.891 181.272 861.073 153.089 861.073 118.45 cv
861.073 83.8096 832.891 55.6289 798.25 55.6289 cv
220.583 55.6289 li
cp
798.25 185.604 mo
220.583 185.604 li
183.553 185.604 153.428 155.479 153.428 118.45 cv
153.428 81.4209 183.553 51.2959 220.583 51.2959 cv
798.25 51.2959 li
835.28 51.2959 865.405 81.4209 865.405 118.45 cv
865.405 155.479 835.28 185.604 798.25 185.604 cv
cp
.721569 .909804 .721569 rgb
f
782.13 133.055 mo
781.001 133.055 779.921 132.591 779.143 131.772 cv
759.571 111.192 li
758.002 109.542 758.067 106.932 759.717 105.364 cv
761.367 103.794 763.976 103.859 765.546 105.51 cv
782.13 122.949 li
798.712 105.51 li
800.283 103.86 802.893 103.795 804.542 105.362 cv
806.191 106.932 806.257 109.542 804.688 111.192 cv
785.119 131.772 li
784.34 132.591 783.26 133.055 782.13 133.055 cv
cp
0 0 0 rgb
f
815.615 161.263 mo
748.644 161.263 li
746.367 161.263 744.521 159.417 744.521 157.14 cv
744.521 138.187 li
744.521 135.91 746.367 134.063 748.644 134.063 cv
750.921 134.063 752.767 135.91 752.767 138.187 cv
752.767 153.017 li
811.492 153.017 li
811.492 138.187 li
811.492 135.91 813.337 134.063 815.615 134.063 cv
817.892 134.063 819.738 135.91 819.738 138.187 cv
819.738 157.14 li
819.738 159.417 817.892 161.263 815.615 161.263 cv
cp
f
782.13 133.021 mo
779.854 133.021 778.007 131.175 778.007 128.898 cv
778.007 81.2051 li
778.007 78.9277 779.854 77.082 782.13 77.082 cv
784.407 77.082 786.253 78.9277 786.253 81.2051 cv
786.253 128.898 li
786.253 131.175 784.407 133.021 782.13 133.021 cv
cp
f
814.903 151.545 mo
748.935 151.545 li
748.935 143.299 li
814.903 143.299 li
814.903 151.545 li
cp
f
785.02 131.61 mo
783.89 131.61 782.81 131.147 782.032 130.329 cv
762.459 109.748 li
760.89 108.098 760.955 105.489 762.605 103.92 cv
764.254 102.351 766.865 102.414 768.434 104.066 cv
785.019 121.504 li
801.601 104.066 li
803.172 102.416 805.781 102.352 807.43 103.919 cv
809.08 105.488 809.146 108.098 807.577 109.748 cv
788.007 130.329 li
787.229 131.147 786.149 131.61 785.02 131.61 cv
cp
.972549 .972549 .972549 rgb
f
818.502 159.818 mo
751.532 159.818 li
749.255 159.818 747.409 157.972 747.409 155.695 cv
747.409 136.742 li
747.409 134.465 749.255 132.619 751.532 132.619 cv
753.809 132.619 755.655 134.465 755.655 136.742 cv
755.655 151.572 li
814.38 151.572 li
814.38 136.742 li
814.38 134.465 816.226 132.619 818.502 132.619 cv
820.78 132.619 822.625 134.465 822.625 136.742 cv
822.625 155.695 li
822.625 157.972 820.78 159.818 818.502 159.818 cv
cp
f
785.02 131.578 mo
782.743 131.578 780.896 129.731 780.896 127.455 cv
780.896 79.7603 li
780.896 77.4839 782.743 75.6372 785.02 75.6372 cv
787.296 75.6372 789.143 77.4839 789.143 79.7603 cv
789.143 127.455 li
789.143 129.731 787.296 131.578 785.02 131.578 cv
cp
f
817.792 150.101 mo
751.822 150.101 li
751.822 141.855 li
817.792 141.855 li
817.792 150.101 li
cp
.960784 .960784 .960784 rgb
f
1131.48 1217.81 mo
1131.48 1178.1 1163.98 1145.6 1203.69 1145.6 cv
1781.36 1145.6 li
1821.08 1145.6 1853.57 1178.1 1853.57 1217.81 cv
1853.57 1257.53 1821.08 1290.02 1781.36 1290.02 cv
1203.69 1290.02 li
1163.98 1290.02 1131.48 1257.53 1131.48 1217.81 cv
.972549 .870588 .631373 rgb
f
1781.36 1280.63 mo
1816 1280.63 1844.18 1252.45 1844.18 1217.81 cv
1844.18 1183.17 1816 1154.99 1781.36 1154.99 cv
1203.69 1154.99 li
1169.05 1154.99 1140.87 1183.17 1140.87 1217.81 cv
1140.87 1252.45 1169.05 1280.63 1203.69 1280.63 cv
1781.36 1280.63 li
1203.69 1150.66 mo
1781.36 1150.66 li
1818.39 1150.66 1848.51 1180.78 1848.51 1217.81 cv
1848.51 1254.84 1818.39 1284.96 1781.36 1284.96 cv
1203.69 1284.96 li
1166.66 1284.96 1136.54 1254.84 1136.54 1217.81 cv
1136.54 1180.78 1166.66 1150.66 1203.69 1150.66 cv
.945098 .764706 .345098 rgb
f
1781.36 1290.02 mo
1203.69 1290.02 li
1163.98 1290.02 1131.48 1257.53 1131.48 1217.81 cv
1131.48 1217.65 1131.5 1217.49 1131.5 1217.33 cv
1136.54 1217.33 li
1136.54 1217.49 1136.54 1217.65 1136.54 1217.81 cv
1136.54 1254.84 1166.66 1284.96 1203.69 1284.96 cv
1781.36 1284.96 li
1818.39 1284.96 1848.51 1254.84 1848.51 1217.81 cv
1848.51 1217.65 1848.51 1217.49 1848.51 1217.33 cv
1853.56 1217.33 li
1853.56 1217.49 1853.57 1217.65 1853.57 1217.81 cv
1853.57 1257.53 1821.08 1290.02 1781.36 1290.02 cv
1781.36 1280.63 mo
1203.69 1280.63 li
1169.05 1280.63 1140.87 1252.45 1140.87 1217.81 cv
1140.87 1217.65 1140.87 1217.49 1140.87 1217.33 cv
1844.18 1217.33 li
1844.18 1217.49 1844.18 1217.65 1844.18 1217.81 cv
1844.18 1252.45 1816 1280.63 1781.36 1280.63 cv
level3{
gsave
clp
[3.00207e-6 68.6793 -68.6793 3.00207e-6 1492.53 1222.42 ]ct
/17 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qs))qlGNJ`_YWN5qWYiml+m/[_#!<1qWPZike?oW^&$s+qWPTgkIgZS]_^g'qWGHdkIUNQ\bbI!qW><a
k-t3L\,,6qqW50^jgFpG[JAplq;o!ZjKn[CZh`[fq;ejWjK\O@Ykd=`q;\[Sj0/:=YPI4]q;SRQiiW%9
XSLkWq;SINiN)e5WqkVQq;J=KiMcS1W;,;Lpu&(Fi2?A.VYK)GptqqChk^&)V"iiBptqh@hP0f%U%mK<
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.00207e-6 68.6793 -68.6793 3.00207e-6 1492.53 1222.42 ]ct
clp
/17 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qYL'bqYBs_q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'g\q"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
<~l07Hsl07Hsl07Hsl0.?pkih6okih6okih6okih6oki_-lkND$kkND$kkND$kkND$kkN:phk2tggk2tgg
k2tggk2tggk2tggk2tdejlPUcjlPUcjlPUcjlPUcjlPRajQ,C_jQ,C_jQ,C_jQ,C_jQ,@]j5]1[j5]1[
j5]1[j5]1[j5]1Zio8tWio8tWio8tWio8tWio8tWio8tViSibSiSibSiSibSiSibSiSibRi8EPOi8EPO
i8EPOi8EPOi8EPOhr!>Khr!>Khr!>Khr!>Khr!>Khr!>KhVR,GhVR,GhVR,GhVR,GhVR,Gh;-oCh;-oC
~>
<~_SX1,_SX1,_SO()_8*k%^qdb$^q[Y!^V@Ou^V7Fr^:h4n]tM+m]tD"j]Y(ni]Xtef]=Y\e]=Y\e]=PSb
]"5G_\[f8]\[f5[\@B&Y\@B#W\$rfS[^NWQ[^NTO[C*EM[C*BK['[3I['[3I['[0GZa6sCZEgdAZEga?
Z*CR=Z*CR<Yct@8YHP.5YHP.4Y-+q1Y-+q1Y-+q0Xf\_-Xf\_,XK8M(X/i;%X/i;$WiE)!WiE(uWMukq
W2QYnW2QYnVl-GjVl-GjVl-GjVP^5fVP^5fV5:#bUnjf^Unjf^USFTZUSFTZU8"BVTqS0RTqS0RTV.sN
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /17 /Gradient get_res exec grestore
}if
np
1781.36 1284.96 mo
1203.69 1284.96 li
1166.66 1284.96 1136.54 1254.84 1136.54 1217.81 cv
1136.54 1217.65 1136.54 1217.49 1136.54 1217.33 cv
1140.87 1217.33 li
1140.87 1217.49 1140.87 1217.65 1140.87 1217.81 cv
1140.87 1252.45 1169.05 1280.63 1203.69 1280.63 cv
1781.36 1280.63 li
1816 1280.63 1844.18 1252.45 1844.18 1217.81 cv
1844.18 1217.65 1844.18 1217.49 1844.18 1217.33 cv
1848.51 1217.33 li
1848.51 1217.49 1848.51 1217.65 1848.51 1217.81 cv
1848.51 1254.84 1818.39 1284.96 1781.36 1284.96 cv
level3{
gsave
clp
[3.00207e-6 68.6793 -68.6793 3.00207e-6 1492.53 1222.42 ]ct
/18 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~p=Y](fTc*^P4mOkp=GE"f9#^XNqV%ap"#)per9:PMY5MWp!efje;3eIL\9,Np!\WfdtIDCKD!ZEo[8<_
d=Cl:J+V-;o[&$Yd!YK4Hh>X2oZqgTc[#0.GP'1)o?MLMc#rX&FS!auo?;7Hb]36uE:_7ko?2%CbAHjn
D"Gebo?(h=a_C=fB_'5Wo#PG6aCXq_AFdcOo#G51a("VZ@IhEGo#4u+`Er)R?1Gj<n\eZ%`*2]K=n0C3
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.00207e-6 68.6793 -68.6793 3.00207e-6 1492.53 1222.42 ]ct
clp
/18 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%7nKo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qbHoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSEo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AAnaZ/>naZ/>
naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
~>
<~f\"j/f[na,f@SX+f@SX+f@JO(f%/F'f%/F'f%&=$e^`4#e^`4#e^W*ueC<!teC2mqe'ldpe'ldpe'c[m
daHRldaHRldaHRldaHOjdF$@hdF$=fd*U.dd*U.dd*U+bcd0q`cd0q`cd0n^cHa_\cHa_\cHa\Zc-=MX
c-=MXc-=MWbfn;Tbfn;Tbfn;SbKJ)PbKJ)PbKJ)Ob0%lLb0%lLb0%lKaiVZHaiVZHaiVZGaN2HDaN2HC
a2c6@a2c6@a2c6@`l?$<`l?$<`l?$<`l?$<`Pog8`Pog8`5KU4`5KU4`5KU4_o'C0_o'C0_o'C0_SX1,
~>
<~PEV2oPEV2nP*(lhOcbcfOH5H`O,o?^NfB$XNK&pVN/NUPMi3LNMM[1HM2@(FLkgb@LPLY?LPCP<L4t>8
KnY25KS4u1K7ec-JqAQ)JUr?%J:N-!It)orIXZ]nI=6KjI!g9fH[C'bH?sm`H$OXZG^+IXGB\4RG'8%P
F`hhKFEDVHFEDVGF)uDCEcQ2?EH,u;E,]c7Df9Q3DJj?/D/F-+Ci!p'CMR^#C2.KtBk_9pBP;'lB4kjh
AnGXeAS#FaA7T4]@q0"Y@q/tW@:<SQ@:<SQ?smAM?XI/I?=$rE?!U`A>[1N=>?b<9>$>*5=]nm1=BJ[-
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /18 /Gradient get_res exec grestore
}if
np
1255.43 1217.81 mo
1304.38 1181.45 li
1141.39 1181.45 li
1135.11 1192.14 1131.48 1204.57 1131.48 1217.81 cv
1131.48 1231.05 1135.11 1243.48 1141.39 1254.18 cv
1304.38 1254.18 li
1255.43 1217.81 li
cp
0 .345098 .454902 rgb
f
1141.39 1254.18 mo
1304.38 1254.18 li
1255.43 1217.81 li
1304.38 1181.45 li
1141.39 1181.45 li
1140.7 1182.62 1140.05 1183.82 1139.42 1185.04 cv
1294.92 1185.04 li
1253.52 1214.84 li
1252.59 1215.5 1252.03 1216.62 1252.03 1217.81 cv
1252.03 1219 1252.59 1220.11 1253.52 1220.78 cv
1294.92 1250.58 li
1139.42 1250.58 li
1140.05 1251.8 1140.7 1253 1141.39 1254.18 cv
cp
0 .258824 .341176 rgb
f
1203.69 1150.66 mo
1781.36 1150.66 li
1818.39 1150.66 1848.51 1180.78 1848.51 1217.81 cv
1848.51 1254.84 1818.39 1284.96 1781.36 1284.96 cv
1203.69 1284.96 li
1166.66 1284.96 1136.54 1254.84 1136.54 1217.81 cv
1136.54 1180.78 1166.66 1150.66 1203.69 1150.66 cv
cp
1203.69 1290.02 mo
1781.36 1290.02 li
1821.08 1290.02 1853.57 1257.53 1853.57 1217.81 cv
1853.57 1178.1 1821.08 1145.6 1781.36 1145.6 cv
1203.69 1145.6 li
1163.98 1145.6 1131.48 1178.1 1131.48 1217.81 cv
1131.48 1257.53 1163.98 1290.02 1203.69 1290.02 cv
cp
f
1839.58 712.625 mo
1145.48 712.625 li
1137.78 712.625 1131.48 718.921 1131.48 726.621 cv
1131.48 784.696 li
1853.57 784.696 li
1853.57 726.621 li
1853.57 718.921 1847.27 712.625 1839.58 712.625 cv
cp
.952941 .784314 .388235 rgb
f
1131.48 842.773 mo
1131.48 850.469 1137.78 856.766 1145.48 856.766 cv
1839.58 856.766 li
1847.27 856.766 1853.57 850.469 1853.57 842.773 cv
1853.57 784.696 li
1131.48 784.696 li
1131.48 842.773 li
cp
.960784 .568627 .231373 rgb
f
1275.62 842.773 mo
1275.62 850.469 1269.33 856.766 1261.63 856.766 cv
1145.48 856.766 li
1137.78 856.766 1131.48 850.469 1131.48 842.773 cv
1131.48 726.621 li
1131.48 718.921 1137.78 712.625 1145.48 712.625 cv
1261.63 712.625 li
1269.33 712.625 1275.62 718.921 1275.62 726.621 cv
1275.62 842.773 li
cp
.129412 .768627 .619608 rgb
f
1225.87 781.362 mo
1213.06 781.362 li
1213.49 776.169 li
1227.18 776.169 li
1225.87 781.362 li
cp
1209.23 827.258 mo
1209.91 819.151 li
1216.43 819.151 li
1214.4 827.258 li
1209.23 827.258 li
cp
1187.17 819.151 mo
1193.69 819.151 li
1194.36 827.258 li
1189.19 827.258 li
1187.17 819.151 li
cp
1190.1 776.169 mo
1190.54 781.362 li
1177.71 781.362 li
1176.42 776.169 li
1190.1 776.169 li
cp
1195.35 781.362 mo
1194.92 776.169 li
1208.67 776.169 li
1208.24 781.362 li
1195.35 781.362 li
cp
1206.73 799.471 mo
1196.86 799.471 li
1195.75 786.164 li
1207.84 786.164 li
1206.73 799.471 li
cp
1211.55 799.471 mo
1212.65 786.164 li
1224.68 786.164 li
1221.35 799.471 li
1211.55 799.471 li
cp
1211.15 804.271 mo
1220.15 804.271 li
1217.63 814.349 li
1210.31 814.349 li
1211.15 804.271 li
cp
1178.91 786.164 mo
1190.93 786.164 li
1192.04 799.471 li
1182.24 799.471 li
1178.91 786.164 li
cp
1183.44 804.271 mo
1192.44 804.271 li
1193.28 814.349 li
1185.96 814.349 li
1183.44 804.271 li
cp
1205.09 819.151 mo
1204.42 827.258 li
1199.18 827.258 li
1198.5 819.151 li
1205.09 819.151 li
cp
1198.1 814.349 mo
1197.26 804.271 li
1206.33 804.271 li
1205.49 814.349 li
1198.1 814.349 li
cp
1234.34 767.293 mo
1169.25 767.293 li
1170.92 773.972 li
1184.24 827.258 li
1186.62 836.752 li
1216.98 836.752 li
1218.65 830.072 li
1232.12 776.169 li
1232.13 776.169 li
1234.34 767.293 li
cp
.176471 .176471 .176471 rgb
f
1198.7 746.404 mo
1189.3 749.795 li
1192.84 737.542 li
1200.48 736.155 li
1198.7 746.404 li
cp
f
1202.98 762.587 mo
1198.67 764.183 li
1195.85 755.263 li
1203.55 757.985 li
1202.98 762.587 li
cp
f
1214.53 757.841 mo
1205.11 753.162 li
1204.44 744.712 li
1211.21 748.566 li
1214.53 757.841 li
cp
f
1229.39 777.847 mo
1216.57 777.847 li
1217.01 772.654 li
1230.69 772.654 li
1229.39 777.847 li
cp
1212.75 823.744 mo
1213.42 815.637 li
1219.94 815.637 li
1217.92 823.744 li
1212.75 823.744 li
cp
1190.68 815.637 mo
1197.2 815.637 li
1197.87 823.744 li
1192.7 823.744 li
1190.68 815.637 li
cp
1193.62 772.654 mo
1194.05 777.847 li
1181.23 777.847 li
1179.93 772.654 li
1193.62 772.654 li
cp
1198.87 777.847 mo
1198.44 772.654 li
1212.19 772.654 li
1211.75 777.847 li
1198.87 777.847 li
cp
1210.24 795.956 mo
1200.38 795.956 li
1199.27 782.648 li
1211.36 782.648 li
1210.24 795.956 li
cp
1215.06 795.956 mo
1216.17 782.648 li
1228.19 782.648 li
1224.87 795.956 li
1215.06 795.956 li
cp
1214.66 800.758 mo
1223.67 800.758 li
1221.14 810.835 li
1213.82 810.835 li
1214.66 800.758 li
cp
1182.43 782.648 mo
1194.45 782.648 li
1195.56 795.956 li
1185.76 795.956 li
1182.43 782.648 li
cp
1186.96 800.758 mo
1195.96 800.758 li
1196.79 810.835 li
1189.48 810.835 li
1186.96 800.758 li
cp
1208.6 815.637 mo
1207.93 823.744 li
1202.69 823.744 li
1202.01 815.637 li
1208.6 815.637 li
cp
1201.61 810.835 mo
1200.78 800.758 li
1209.84 800.758 li
1209.01 810.835 li
1201.61 810.835 li
cp
1237.86 763.778 mo
1172.76 763.778 li
1174.43 770.458 li
1187.75 823.744 li
1190.13 833.237 li
1220.49 833.237 li
1222.16 826.557 li
1235.63 772.654 li
1235.64 772.654 li
1237.86 763.778 li
cp
1 1 1 rgb
f
1202.22 742.89 mo
1192.82 746.28 li
1196.36 734.028 li
1203.99 732.64 li
1202.22 742.89 li
cp
f
1206.5 759.072 mo
1202.18 760.669 li
1199.37 751.748 li
1207.07 754.47 li
1206.5 759.072 li
cp
f
1218.04 754.326 mo
1208.62 749.647 li
1207.96 741.198 li
1214.72 745.052 li
1218.04 754.326 li
cp
f
1839.58 712.625 mo
1145.48 712.625 li
1137.78 712.625 1131.48 718.921 1131.48 726.621 cv
1131.48 784.696 li
1131.48 842.773 li
1131.48 850.469 1137.78 856.766 1145.48 856.766 cv
1839.58 856.766 li
1847.27 856.766 1853.57 850.469 1853.57 842.773 cv
1853.57 784.696 li
1853.57 726.621 li
1853.57 718.921 1847.27 712.625 1839.58 712.625 cv
cp
1839.58 719.847 mo
1843.31 719.847 1846.35 722.885 1846.35 726.621 cv
1846.35 784.696 li
1846.35 842.773 li
1846.35 846.508 1843.31 849.545 1839.58 849.545 cv
1145.48 849.545 li
1141.74 849.545 1138.7 846.508 1138.7 842.773 cv
1138.7 784.696 li
1138.7 726.621 li
1138.7 722.885 1141.74 719.847 1145.48 719.847 cv
1839.58 719.847 li
0 .439216 .54902 rgb
f
1145.48 722.013 mo
1142.94 722.013 1140.87 724.079 1140.87 726.621 cv
1140.87 842.773 li
1140.87 845.313 1142.94 847.38 1145.48 847.38 cv
1839.58 847.38 li
1842.12 847.38 1844.18 845.313 1844.18 842.773 cv
1844.18 726.621 li
1844.18 724.079 1842.12 722.013 1839.58 722.013 cv
1145.48 722.013 li
cp
1839.58 851.712 mo
1145.48 851.712 li
1140.55 851.712 1136.54 847.703 1136.54 842.773 cv
1136.54 726.621 li
1136.54 721.69 1140.55 717.68 1145.48 717.68 cv
1839.58 717.68 li
1844.5 717.68 1848.51 721.69 1848.51 726.621 cv
1848.51 842.773 li
1848.51 847.703 1844.5 851.712 1839.58 851.712 cv
cp
1 1 1 rgb
f
1839.58 1795.48 mo
1145.48 1795.48 li
1137.78 1795.48 1131.48 1801.77 1131.48 1809.48 cv
1131.48 1867.55 li
1853.57 1867.55 li
1853.57 1809.48 li
1853.57 1801.77 1847.27 1795.48 1839.58 1795.48 cv
cp
.945098 .760784 .701961 rgb
f
1131.48 1925.63 mo
1131.48 1933.32 1137.78 1939.62 1145.48 1939.62 cv
1839.58 1939.62 li
1847.27 1939.62 1853.57 1933.32 1853.57 1925.63 cv
1853.57 1867.55 li
1131.48 1867.55 li
1131.48 1925.63 li
cp
.741176 .831373 .85098 rgb
f
1275.62 1925.63 mo
1275.62 1933.32 1269.33 1939.62 1261.63 1939.62 cv
1145.48 1939.62 li
1137.78 1939.62 1131.48 1933.32 1131.48 1925.63 cv
1131.48 1809.48 li
1131.48 1801.77 1137.78 1795.48 1145.48 1795.48 cv
1261.63 1795.48 li
1269.33 1795.48 1275.62 1801.77 1275.62 1809.48 cv
1275.62 1925.63 li
cp
.658824 .360784 .466667 rgb
f
1839.58 1795.48 mo
1145.48 1795.48 li
1137.78 1795.48 1131.48 1801.77 1131.48 1809.48 cv
1131.48 1867.55 li
1131.48 1925.63 li
1131.48 1933.32 1137.78 1939.62 1145.48 1939.62 cv
1839.58 1939.62 li
1847.27 1939.62 1853.57 1933.32 1853.57 1925.63 cv
1853.57 1867.55 li
1853.57 1809.48 li
1853.57 1801.77 1847.27 1795.48 1839.58 1795.48 cv
cp
1839.58 1802.7 mo
1843.31 1802.7 1846.35 1805.74 1846.35 1809.48 cv
1846.35 1867.55 li
1846.35 1925.63 li
1846.35 1929.36 1843.31 1932.4 1839.58 1932.4 cv
1145.48 1932.4 li
1141.74 1932.4 1138.7 1929.36 1138.7 1925.63 cv
1138.7 1867.55 li
1138.7 1809.48 li
1138.7 1805.74 1141.74 1802.7 1145.48 1802.7 cv
1839.58 1802.7 li
0 .439216 .54902 rgb
f
1145.48 1804.87 mo
1142.94 1804.87 1140.87 1806.93 1140.87 1809.48 cv
1140.87 1925.63 li
1140.87 1928.17 1142.94 1930.23 1145.48 1930.23 cv
1839.58 1930.23 li
1842.12 1930.23 1844.18 1928.17 1844.18 1925.63 cv
1844.18 1809.48 li
1844.18 1806.93 1842.12 1804.87 1839.58 1804.87 cv
1145.48 1804.87 li
cp
1839.58 1934.57 mo
1145.48 1934.57 li
1140.55 1934.57 1136.54 1930.56 1136.54 1925.63 cv
1136.54 1809.48 li
1136.54 1804.54 1140.55 1800.53 1145.48 1800.53 cv
1839.58 1800.53 li
1844.5 1800.53 1848.51 1804.54 1848.51 1809.48 cv
1848.51 1925.63 li
1848.51 1930.56 1844.5 1934.57 1839.58 1934.57 cv
cp
1 1 1 rgb
f
1230.7 1847.9 mo
1224.03 1841.22 1215.37 1837.18 1206.16 1836.23 cv
1212.85 1829.54 li
1215.34 1827.05 1215.52 1823.62 1213.25 1821.92 cv
1210.98 1820.22 1207.08 1820.88 1204.58 1823.37 cv
1197.86 1830.09 li
1195.36 1832.59 1191.2 1836.02 1188.6 1837.71 cv
1186.01 1839.41 1186.01 1842.19 1188.6 1843.89 cv
1191.2 1845.58 1195.36 1849.01 1197.85 1851.51 cv
1204.58 1858.23 li
1207.07 1860.73 1210.98 1861.38 1213.25 1859.68 cv
1215.52 1857.98 1215.34 1854.55 1212.85 1852.06 cv
1206.8 1846.01 li
1213.23 1847.02 1219.2 1850 1223.9 1854.7 cv
1229.77 1860.57 1233 1868.36 1233 1876.66 cv
1233 1884.95 1229.77 1892.75 1223.9 1898.61 cv
1211.8 1910.71 1192.1 1910.72 1179.99 1898.61 cv
1167.88 1886.5 1167.89 1866.8 1179.99 1854.7 cv
1173.19 1847.89 li
1165.5 1855.57 1161.28 1865.79 1161.28 1876.65 cv
1161.27 1887.52 1165.5 1897.73 1173.19 1905.41 cv
1180.87 1913.1 1191.09 1917.33 1201.95 1917.33 cv
1212.81 1917.33 1223.03 1913.1 1230.71 1905.41 cv
1238.39 1897.73 1242.62 1887.52 1242.62 1876.66 cv
1242.62 1865.8 1238.39 1855.58 1230.7 1847.9 cv
cp
.176471 .176471 .176471 rgb
f
1233.91 1844.69 mo
1227.24 1838.01 1218.57 1833.97 1209.36 1833.03 cv
1216.06 1826.33 li
1218.55 1823.84 1218.73 1820.41 1216.46 1818.71 cv
1214.19 1817.02 1210.28 1817.67 1207.79 1820.17 cv
1201.07 1826.89 li
1198.57 1829.38 1194.41 1832.81 1191.81 1834.51 cv
1189.22 1836.21 1189.22 1838.98 1191.81 1840.68 cv
1194.4 1842.38 1198.57 1845.81 1201.06 1848.3 cv
1207.79 1855.03 li
1210.28 1857.52 1214.18 1858.17 1216.46 1856.47 cv
1218.73 1854.77 1218.55 1851.34 1216.06 1848.85 cv
1210.01 1842.81 li
1216.44 1843.81 1222.41 1846.79 1227.11 1851.49 cv
1232.97 1857.36 1236.2 1865.16 1236.2 1873.45 cv
1236.2 1881.74 1232.97 1889.54 1227.11 1895.4 cv
1215.01 1907.5 1195.31 1907.51 1183.2 1895.4 cv
1171.09 1883.3 1171.09 1863.6 1183.2 1851.49 cv
1176.4 1844.68 li
1168.71 1852.37 1164.49 1862.58 1164.49 1873.45 cv
1164.48 1884.31 1168.71 1894.53 1176.39 1902.21 cv
1184.08 1909.89 1194.29 1914.12 1205.16 1914.12 cv
1216.02 1914.12 1226.23 1909.89 1233.92 1902.21 cv
1241.6 1894.53 1245.83 1884.31 1245.83 1873.45 cv
1245.83 1862.59 1241.6 1852.37 1233.91 1844.69 cv
cp
1 1 1 rgb
f
1839.58 46.3799 mo
1145.48 46.3799 li
1137.78 46.3799 1131.48 52.6753 1131.48 60.374 cv
1131.48 118.45 li
1853.57 118.45 li
1853.57 60.374 li
1853.57 52.6753 1847.27 46.3799 1839.58 46.3799 cv
cp
.478431 .862745 .772549 rgb
f
1131.48 176.527 mo
1131.48 184.224 1137.78 190.521 1145.48 190.521 cv
1839.58 190.521 li
1847.27 190.521 1853.57 184.224 1853.57 176.527 cv
1853.57 118.45 li
1131.48 118.45 li
1131.48 176.527 li
cp
.129412 .768627 .619608 rgb
f
1275.62 176.527 mo
1275.62 184.224 1269.33 190.521 1261.63 190.521 cv
1145.48 190.521 li
1137.78 190.521 1131.48 184.224 1131.48 176.527 cv
1131.48 60.374 li
1131.48 52.6753 1137.78 46.3799 1145.48 46.3799 cv
1261.63 46.3799 li
1269.33 46.3799 1275.62 52.6753 1275.62 60.374 cv
1275.62 176.527 li
cp
.960784 .568627 .231373 rgb
f
1839.58 46.3799 mo
1145.48 46.3799 li
1137.78 46.3799 1131.48 52.6753 1131.48 60.374 cv
1131.48 118.45 li
1131.48 176.527 li
1131.48 184.224 1137.78 190.521 1145.48 190.521 cv
1839.58 190.521 li
1847.27 190.521 1853.57 184.224 1853.57 176.527 cv
1853.57 118.45 li
1853.57 60.374 li
1853.57 52.6753 1847.27 46.3799 1839.58 46.3799 cv
cp
1839.58 53.6011 mo
1843.31 53.6011 1846.35 56.6396 1846.35 60.374 cv
1846.35 118.45 li
1846.35 176.527 li
1846.35 180.262 1843.31 183.299 1839.58 183.299 cv
1145.48 183.299 li
1141.74 183.299 1138.7 180.262 1138.7 176.527 cv
1138.7 118.45 li
1138.7 60.374 li
1138.7 56.6396 1141.74 53.6011 1145.48 53.6011 cv
1839.58 53.6011 li
0 .439216 .54902 rgb
f
1145.48 55.7666 mo
1142.94 55.7666 1140.87 57.833 1140.87 60.374 cv
1140.87 176.527 li
1140.87 179.067 1142.94 181.133 1145.48 181.133 cv
1839.58 181.133 li
1842.12 181.133 1844.18 179.067 1844.18 176.527 cv
1844.18 60.374 li
1844.18 57.833 1842.12 55.7666 1839.58 55.7666 cv
1145.48 55.7666 li
cp
1839.58 185.466 mo
1145.48 185.466 li
1140.55 185.466 1136.54 181.456 1136.54 176.527 cv
1136.54 60.374 li
1136.54 55.4443 1140.55 51.4346 1145.48 51.4346 cv
1839.58 51.4346 li
1844.5 51.4346 1848.51 55.4443 1848.51 60.374 cv
1848.51 176.527 li
1848.51 181.456 1844.5 185.466 1839.58 185.466 cv
cp
1 1 1 rgb
f
1177.25 153.619 mo
1176.16 153.619 1175.08 153.188 1174.27 152.336 cv
1172.7 150.687 1172.76 148.077 1174.41 146.508 cv
1202.4 119.896 li
1174.41 93.2813 li
1172.76 91.7124 1172.7 89.1025 1174.27 87.4526 cv
1175.83 85.8018 1178.44 85.7368 1180.09 87.3062 cv
1211.22 116.908 li
1212.04 117.686 1212.5 118.766 1212.5 119.896 cv
1212.5 121.024 1212.04 122.104 1211.22 122.883 cv
1180.09 152.483 li
1179.29 153.241 1178.27 153.619 1177.25 153.619 cv
cp
0 0 0 rgb
f
1205.82 153.619 mo
1204.73 153.619 1203.64 153.188 1202.83 152.336 cv
1201.26 150.687 1201.33 148.077 1202.98 146.508 cv
1230.96 119.896 li
1202.98 93.2813 li
1201.33 91.7124 1201.26 89.1025 1202.83 87.4526 cv
1204.4 85.8018 1207.01 85.7368 1208.66 87.3062 cv
1239.79 116.908 li
1240.61 117.686 1241.07 118.766 1241.07 119.896 cv
1241.07 121.024 1240.61 122.104 1239.79 122.883 cv
1208.66 152.483 li
1207.86 153.241 1206.84 153.619 1205.82 153.619 cv
cp
f
1180.14 152.173 mo
1179.05 152.173 1177.96 151.744 1177.15 150.892 cv
1175.58 149.242 1175.65 146.632 1177.3 145.063 cv
1205.28 118.451 li
1177.3 91.8364 li
1175.65 90.2676 1175.58 87.6582 1177.15 86.0078 cv
1178.72 84.3589 1181.33 84.2925 1182.98 85.8618 cv
1214.11 115.463 li
1214.93 116.241 1215.39 117.322 1215.39 118.451 cv
1215.39 119.581 1214.93 120.66 1214.11 121.438 cv
1182.98 151.039 li
1182.18 151.798 1181.16 152.173 1180.14 152.173 cv
cp
.972549 .972549 .972549 rgb
f
1208.71 152.173 mo
1207.62 152.173 1206.53 151.744 1205.72 150.892 cv
1204.15 149.242 1204.22 146.632 1205.87 145.063 cv
1233.85 118.451 li
1205.87 91.8364 li
1204.22 90.2676 1204.15 87.6582 1205.72 86.0078 cv
1207.29 84.3579 1209.9 84.2925 1211.55 85.8618 cv
1242.67 115.463 li
1243.49 116.241 1243.96 117.322 1243.96 118.451 cv
1243.96 119.581 1243.49 120.66 1242.67 121.438 cv
1211.55 151.039 li
1210.75 151.798 1209.73 152.173 1208.71 152.173 cv
cp
f
870.459 891.364 mo
148.374 891.364 li
148.374 1035.78 li
434.19 1035.78 li
509.417 1111.01 li
584.644 1035.78 li
870.459 1035.78 li
870.459 891.364 li
.721569 .909804 .721569 rgb
f
246.918 891.364 mo
148.374 891.364 li
148.374 1035.78 li
246.918 1035.78 li
246.918 891.364 li
.960784 .462745 .423529 rgb
f
870.459 971.512 mo
246.918 971.512 li
246.918 891.364 li
870.459 891.364 li
870.459 971.512 li
level3{
gsave
clp
[-3.50342e-6 -80.1489 80.1489 -3.50342e-6 509.417 971.512 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.50342e-6 -80.1489 80.1489 -3.50342e-6 509.417 971.512 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
246.918 971.512 mo
148.374 971.512 li
148.374 891.364 li
246.918 891.364 li
246.918 971.512 li
level3{
gsave
clp
[-3.50342e-6 -80.1489 80.1489 -3.50342e-6 509.417 971.512 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.50342e-6 -80.1489 80.1489 -3.50342e-6 509.417 971.512 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
870.459 891.363 mo
148.374 891.363 li
148.374 1035.78 li
434.19 1035.78 li
509.417 1111.01 li
584.645 1035.78 li
870.459 1035.78 li
870.459 891.363 li
cp
863.238 898.584 mo
863.238 1028.56 li
584.645 1028.56 li
581.652 1028.56 li
579.538 1030.67 li
509.417 1100.79 li
439.295 1030.67 li
437.181 1028.56 li
434.19 1028.56 li
155.595 1028.56 li
155.595 898.584 li
863.238 898.584 li
0 .258824 .341176 rgb
f
157.761 1026.39 mo
438.078 1026.39 li
509.417 1097.73 li
580.756 1026.39 li
861.073 1026.39 li
861.073 900.75 li
157.761 900.75 li
157.761 1026.39 li
cp
509.417 1103.86 mo
436.285 1030.73 li
153.428 1030.73 li
153.428 896.417 li
865.405 896.417 li
865.405 1030.73 li
582.549 1030.73 li
509.417 1103.86 li
cp
.952941 .784314 .388235 rgb
f
189.524 945.87 mo
168.403 945.87 li
165.771 945.87 163.622 948.313 163.622 951.302 cv
163.622 978.565 li
163.622 981.547 165.771 983.994 168.403 983.994 cv
189.524 983.994 li
189.524 945.87 li
cp
.176471 .176471 .176471 rgb
f
224.45 927.143 mo
200.045 943.156 li
198.897 943.906 197.315 944.587 195.689 945.08 cv
195.689 984.919 li
197.176 985.398 198.62 986.019 199.668 986.713 cv
224.45 1002.97 li
226.727 1004.46 228.587 1003.24 228.587 1000.25 cv
228.587 929.859 li
228.587 926.869 226.727 925.651 224.45 927.143 cv
cp
f
192.605 942.902 mo
171.486 942.902 li
168.854 942.902 166.705 945.345 166.705 948.334 cv
166.705 975.599 li
166.705 978.582 168.854 981.028 171.486 981.028 cv
192.605 981.028 li
192.605 942.902 li
cp
1 1 1 rgb
f
227.534 924.176 mo
203.127 940.189 li
201.98 940.939 200.398 941.622 198.771 942.112 cv
198.771 981.951 li
200.26 982.433 201.703 983.051 202.751 983.745 cv
227.534 999.997 li
229.81 1001.49 231.67 1000.27 231.67 997.281 cv
231.67 926.893 li
231.67 923.904 229.81 922.684 227.534 924.176 cv
cp
f
1131.48 1073.39 mo
1131.48 928.974 li
1781.36 928.974 li
1821.08 928.974 1853.57 961.469 1853.57 1001.18 cv
1853.57 1040.9 1821.08 1073.39 1781.36 1073.39 cv
1131.48 1073.39 li
.478431 .862745 .772549 rgb
f
1276.59 928.974 mo
1131.48 928.974 li
1131.48 1073.39 li
1276.59 1073.39 li
1276.59 928.974 li
0 .258824 .341176 rgb
f
1784.58 929.046 mo
1784.57 929.046 1784.57 929.046 1784.57 929.045 cv
1784.57 929.045 1784.58 929.046 1784.58 929.046 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1783.68 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1784.47 929.041 mo
1784.46 929.041 1784.45 929.04 1784.45 929.04 cv
1784.46 929.04 1784.46 929.041 1784.47 929.041 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1783.68 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1784.35 929.036 mo
1784.35 929.036 1784.34 929.036 1784.34 929.036 cv
1784.34 929.036 1784.35 929.036 1784.35 929.036 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1783.68 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1784.12 929.027 mo
1784.12 929.027 1784.11 929.026 1784.1 929.026 cv
1784.11 929.027 1784.12 929.027 1784.12 929.027 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1783.2 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1784.01 929.023 mo
1784 929.023 1784 929.022 1783.99 929.022 cv
1784 929.022 1784 929.023 1784.01 929.023 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1783.2 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1783.89 929.019 mo
1783.89 929.018 1783.88 929.018 1783.87 929.018 cv
1783.88 929.018 1783.88 929.018 1783.89 929.019 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1783.2 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1783.78 929.015 mo
1783.77 929.015 1783.76 929.014 1783.76 929.014 cv
1783.77 929.014 1783.77 929.014 1783.78 929.015 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1783.2 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1783.66 929.011 mo
1783.66 929.011 1783.65 929.011 1783.64 929.01 cv
1783.65 929.011 1783.65 929.011 1783.66 929.011 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1782.72 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1783.55 929.008 mo
1783.54 929.007 1783.53 929.007 1783.52 929.007 cv
1783.53 929.007 1783.54 929.007 1783.55 929.008 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1782.72 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1783.44 929.004 mo
1783.42 929.004 1783.41 929.003 1783.4 929.003 cv
1783.41 929.003 1783.42 929.004 1783.44 929.004 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1782.72 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1783.32 929.001 mo
1783.31 929.001 1783.29 929 1783.28 929 cv
1783.29 929 1783.31 929.001 1783.32 929.001 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1782.72 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1783.21 928.998 mo
1783.19 928.998 1783.18 928.997 1783.16 928.997 cv
1783.18 928.997 1783.19 928.998 1783.21 928.998 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.92 0 0 1.44 1782.24 1070.24 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bqYL'b~>
<~lg*m&lg*m&lg*m&~>
<~`Pog8a2c6@a2c6@~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1783.09 928.995 mo
1783.07 928.995 1783.06 928.994 1783.04 928.994 cv
1783.06 928.994 1783.07 928.995 1783.09 928.995 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1782.24 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1782.98 928.992 mo
1782.96 928.992 1782.94 928.992 1782.92 928.991 cv
1782.94 928.992 1782.96 928.992 1782.98 928.992 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1782.24 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1782.86 928.99 mo
1782.84 928.99 1782.83 928.989 1782.81 928.989 cv
1782.83 928.989 1782.84 928.99 1782.86 928.99 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1782.24 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1782.75 928.988 mo
1782.73 928.987 1782.71 928.987 1782.69 928.987 cv
1782.71 928.987 1782.73 928.987 1782.75 928.988 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.92 0 0 1.44 1781.76 1070.24 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bqYL'b~>
<~lg*m&lg*m&lg*m&~>
<~`Pog8a2c6@a2c6@~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1782.63 928.986 mo
1782.62 928.985 1782.6 928.985 1782.58 928.985 cv
1782.6 928.985 1782.62 928.985 1782.63 928.986 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1781.76 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1782.52 928.984 mo
1782.5 928.983 1782.49 928.983 1782.47 928.983 cv
1782.49 928.983 1782.5 928.983 1782.52 928.984 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1781.76 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1782.4 928.982 mo
1782.38 928.982 1782.37 928.981 1782.35 928.981 cv
1782.37 928.982 1782.38 928.982 1782.4 928.982 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1781.76 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1782.29 928.98 mo
1782.27 928.98 1782.25 928.98 1782.24 928.98 cv
1782.25 928.98 1782.27 928.98 1782.29 928.98 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.92 0 0 1.44 1781.28 1070.24 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bqYL'b~>
<~lg*m&lg*m&lg*m&~>
<~`Pog8a2c6@a2c6@~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1782.17 928.979 mo
1782.15 928.979 1782.13 928.979 1782.12 928.978 cv
1782.13 928.979 1782.15 928.979 1782.17 928.979 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1781.28 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1782.06 928.978 mo
1782.03 928.978 1782.01 928.977 1781.98 928.977 cv
1782 928.977 1782.03 928.978 1782.06 928.978 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1781.28 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1781.94 928.977 mo
1781.91 928.977 1781.88 928.976 1781.85 928.976 cv
1781.88 928.976 1781.91 928.977 1781.94 928.977 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1781.28 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1781.83 928.976 mo
1781.79 928.976 1781.75 928.976 1781.72 928.975 cv
1781.75 928.976 1781.79 928.976 1781.83 928.976 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.92 0 0 1.44 1780.8 1070.24 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bqYL'b~>
<~lg*m&lg*m&lg*m&~>
<~`Pog8a2c6@a2c6@~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1781.71 928.975 mo
1781.68 928.975 1781.65 928.975 1781.63 928.975 cv
1781.65 928.975 1781.68 928.975 1781.71 928.975 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1780.8 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1781.59 928.975 mo
1781.58 928.975 1781.56 928.975 1781.55 928.975 cv
1781.56 928.975 1781.58 928.975 1781.59 928.975 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 1780.8 1070.24 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog:a2c6@`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
1853.54 1000.22 mo
1276.59 1000.22 li
1276.59 928.974 li
1781.36 928.974 li
1781.42 928.974 1781.49 928.975 1781.55 928.975 cv
1781.56 928.975 1781.58 928.975 1781.59 928.975 cv
1781.6 928.975 1781.61 928.975 1781.63 928.975 cv
1781.65 928.975 1781.68 928.975 1781.71 928.975 cv
1781.71 928.975 1781.71 928.975 1781.72 928.975 cv
1781.75 928.976 1781.79 928.976 1781.83 928.976 cv
1781.83 928.976 1781.84 928.976 1781.85 928.976 cv
1781.88 928.976 1781.91 928.977 1781.94 928.977 cv
1781.96 928.977 1781.97 928.977 1781.98 928.977 cv
1782.01 928.977 1782.03 928.978 1782.06 928.978 cv
1782.08 928.978 1782.1 928.978 1782.12 928.978 cv
1782.13 928.979 1782.15 928.979 1782.17 928.979 cv
1782.19 928.979 1782.22 928.98 1782.24 928.98 cv
1782.25 928.98 1782.27 928.98 1782.29 928.98 cv
1782.31 928.981 1782.33 928.981 1782.35 928.981 cv
1782.37 928.981 1782.38 928.982 1782.4 928.982 cv
1782.42 928.982 1782.45 928.983 1782.47 928.983 cv
1782.49 928.983 1782.5 928.983 1782.52 928.984 cv
1782.54 928.984 1782.56 928.984 1782.58 928.985 cv
1782.6 928.985 1782.62 928.985 1782.63 928.986 cv
1782.65 928.986 1782.67 928.986 1782.69 928.987 cv
1782.71 928.987 1782.73 928.987 1782.75 928.988 cv
1782.77 928.988 1782.79 928.989 1782.81 928.989 cv
1782.83 928.989 1782.84 928.99 1782.86 928.99 cv
1782.88 928.99 1782.9 928.991 1782.92 928.991 cv
1782.94 928.992 1782.96 928.992 1782.98 928.992 cv
1783 928.993 1783.02 928.993 1783.04 928.994 cv
1783.06 928.994 1783.07 928.995 1783.09 928.995 cv
1783.12 928.996 1783.14 928.996 1783.16 928.997 cv
1783.18 928.997 1783.19 928.998 1783.21 928.998 cv
1783.23 928.999 1783.26 928.999 1783.28 929 cv
1783.29 929 1783.31 929.001 1783.32 929.001 cv
1783.35 929.002 1783.37 929.002 1783.4 929.003 cv
1783.41 929.003 1783.42 929.004 1783.44 929.004 cv
1783.47 929.005 1783.49 929.006 1783.52 929.007 cv
1783.53 929.007 1783.54 929.007 1783.55 929.008 cv
1783.58 929.008 1783.61 929.009 1783.64 929.01 cv
1783.65 929.011 1783.66 929.011 1783.66 929.011 cv
1783.69 929.012 1783.73 929.013 1783.76 929.014 cv
1783.76 929.014 1783.77 929.015 1783.78 929.015 cv
1783.81 929.016 1783.84 929.017 1783.87 929.018 cv
1783.88 929.018 1783.89 929.018 1783.89 929.019 cv
1783.92 929.02 1783.96 929.021 1783.99 929.022 cv
1784 929.022 1784 929.023 1784.01 929.023 cv
1784.04 929.024 1784.07 929.025 1784.1 929.026 cv
1784.11 929.026 1784.12 929.027 1784.12 929.027 cv
1784.15 929.028 1784.19 929.03 1784.22 929.031 cv
1784.23 929.031 1784.23 929.031 1784.24 929.031 cv
1784.27 929.033 1784.3 929.034 1784.34 929.036 cv
1784.34 929.036 1784.35 929.036 1784.35 929.036 cv
1784.38 929.037 1784.41 929.039 1784.45 929.04 cv
1784.45 929.04 1784.46 929.041 1784.47 929.041 cv
1784.5 929.042 1784.53 929.044 1784.57 929.045 cv
1784.57 929.046 1784.57 929.046 1784.58 929.046 cv
1784.61 929.047 1784.65 929.049 1784.68 929.051 cv
1784.69 929.051 1784.69 929.051 1784.69 929.051 cv
1784.73 929.053 1784.76 929.054 1784.8 929.056 cv
1784.8 929.056 li
1784.84 929.058 1784.88 929.06 1784.92 929.062 cv
1784.92 929.062 li
1822.68 930.917 1853.04 962.134 1853.54 1000.22 cv
level3{
gsave
clp
[-3.24393e-6 -74.2124 74.2124 -3.24393e-6 1492.51 994.282 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.24393e-6 -74.2124 74.2124 -3.24393e-6 1492.51 994.282 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
1276.59 1000.22 mo
1131.48 1000.22 li
1131.48 928.974 li
1276.59 928.974 li
1276.59 1000.22 li
level3{
gsave
clp
[-3.24393e-6 -74.2124 74.2124 -3.24393e-6 1492.51 994.282 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.24393e-6 -74.2124 74.2124 -3.24393e-6 1492.51 994.282 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
1167.33 1027.03 mo
1240.74 1027.03 li
1240.74 975.341 li
1167.33 975.341 li
1167.33 1027.03 li
cp
1243.32 1032.18 mo
1164.75 1032.18 li
1163.33 1032.18 1162.18 1031.03 1162.18 1029.6 cv
1162.18 972.763 li
1162.18 971.341 1163.33 970.188 1164.75 970.188 cv
1243.32 970.188 li
1244.74 970.188 1245.9 971.341 1245.9 972.763 cv
1245.9 1029.6 li
1245.9 1031.03 1244.74 1032.18 1243.32 1032.18 cv
cp
.972549 .972549 .972549 rgb
f
1204.04 1012.61 mo
1203.35 1012.61 1202.7 1012.33 1202.22 1011.85 cv
1164.95 974.585 li
1163.95 973.58 1163.95 971.948 1164.95 970.942 cv
1165.96 969.936 1167.59 969.936 1168.6 970.942 cv
1204.04 1006.38 li
1239.48 970.942 li
1240.48 969.936 1242.12 969.936 1243.12 970.941 cv
1244.13 971.948 1244.13 973.58 1243.12 974.585 cv
1205.86 1011.85 li
1205.38 1012.33 1204.72 1012.61 1204.04 1012.61 cv
cp
f
1243.32 1032.18 mo
1242.23 1032.18 1241.3 1031.51 1240.92 1030.56 cv
1212.21 1001.85 li
1211.21 1000.84 1211.21 999.21 1212.21 998.203 cv
1213.22 997.197 1214.85 997.197 1215.86 998.203 cv
1245.14 1027.48 li
1245.62 1027.97 1245.9 1028.62 1245.9 1029.31 cv
1245.9 1029.6 li
1245.9 1031.03 1244.74 1032.18 1243.32 1032.18 cv
cp
f
1164.75 1032.18 mo
1163.33 1032.18 1162.18 1031.03 1162.18 1029.6 cv
1162.18 1029.3 li
1162.18 1028.62 1162.45 1027.96 1162.93 1027.48 cv
1192.21 998.202 li
1193.22 997.196 1194.85 997.196 1195.86 998.202 cv
1196.86 999.209 1196.86 1000.84 1195.86 1001.85 cv
1167.15 1030.55 li
1166.77 1031.51 1165.84 1032.18 1164.75 1032.18 cv
cp
f
1781.36 928.975 mo
1131.48 928.975 li
1131.48 1073.39 li
1781.36 1073.39 li
1821.08 1073.39 1853.57 1040.9 1853.57 1001.18 cv
1853.57 961.469 1821.08 928.975 1781.36 928.975 cv
cp
1781.36 936.196 mo
1817.19 936.196 1846.35 965.35 1846.35 1001.18 cv
1846.35 1037.02 1817.19 1066.17 1781.36 1066.17 cv
1138.7 1066.17 li
1138.7 936.196 li
1781.36 936.196 li
.423529 .203922 .14902 rgb
f
1140.87 1064.01 mo
1781.36 1064.01 li
1816 1064.01 1844.18 1035.82 1844.18 1001.18 cv
1844.18 966.544 1816 938.362 1781.36 938.362 cv
1140.87 938.362 li
1140.87 1064.01 li
cp
1781.36 1068.34 mo
1136.54 1068.34 li
1136.54 934.029 li
1781.36 934.029 li
1818.39 934.029 1848.51 964.155 1848.51 1001.18 cv
1848.51 1038.21 1818.39 1068.34 1781.36 1068.34 cv
cp
.721569 .909804 .721569 rgb
f
148.374 1290.02 mo
148.374 1145.6 li
798.251 1145.6 li
837.966 1145.6 870.459 1178.1 870.459 1217.81 cv
870.459 1257.53 837.966 1290.02 798.251 1290.02 cv
148.374 1290.02 li
.960784 .568627 .231373 rgb
f
870.459 1217.81 mo
870.459 1178.1 837.966 1145.6 798.251 1145.6 cv
717.611 1145.6 li
717.611 1290.02 li
798.251 1290.02 li
837.966 1290.02 870.459 1257.53 870.459 1217.81 cv
0 .290196 .231373 rgb
f
717.611 1216.84 mo
148.374 1216.84 li
148.374 1145.6 li
717.611 1145.6 li
717.611 1216.84 li
level3{
gsave
clp
[-3.24381e-6 -74.2098 74.2098 -3.24381e-6 509.404 1210.91 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.24381e-6 -74.2098 74.2098 -3.24381e-6 509.404 1210.91 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
802.947 1145.75 mo
802.945 1145.75 802.947 1145.75 802.945 1145.75 cv
802.947 1145.75 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 802.08 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
802.607 1145.73 mo
802.605 1145.73 802.603 1145.73 802.601 1145.73 cv
802.603 1145.73 802.605 1145.73 802.607 1145.73 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 802.08 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
802.494 1145.73 mo
802.491 1145.73 802.488 1145.73 802.486 1145.73 cv
802.488 1145.73 802.491 1145.73 802.494 1145.73 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 801.6 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
802.38 1145.72 mo
802.377 1145.72 802.375 1145.72 802.373 1145.72 cv
802.375 1145.72 802.377 1145.72 802.38 1145.72 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 801.6 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
802.154 1145.71 mo
802.149 1145.71 802.144 1145.71 802.139 1145.71 cv
802.146 1145.71 802.147 1145.71 802.154 1145.71 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 801.6 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
802.04 1145.7 mo
802.035 1145.7 802.028 1145.7 802.023 1145.7 cv
802.03 1145.7 802.033 1145.7 802.04 1145.7 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 801.12 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
801.927 1145.7 mo
801.92 1145.7 801.913 1145.69 801.906 1145.69 cv
801.913 1145.69 801.92 1145.7 801.927 1145.7 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 801.12 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
801.815 1145.69 mo
801.805 1145.69 801.796 1145.69 801.787 1145.69 cv
801.796 1145.69 801.805 1145.69 801.815 1145.69 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 801.12 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
801.701 1145.68 mo
801.692 1145.68 801.68 1145.68 801.671 1145.68 cv
801.68 1145.68 801.692 1145.68 801.701 1145.68 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 801.12 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
801.587 1145.68 mo
801.577 1145.68 801.567 1145.68 801.557 1145.68 cv
801.567 1145.68 801.577 1145.68 801.587 1145.68 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 800.64 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
801.471 1145.67 mo
801.464 1145.67 801.453 1145.67 801.446 1145.67 cv
801.456 1145.67 801.461 1145.67 801.471 1145.67 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 800.64 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
801.358 1145.67 mo
801.348 1145.67 801.337 1145.67 801.328 1145.67 cv
801.337 1145.67 801.348 1145.67 801.358 1145.67 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 800.64 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
801.243 1145.66 mo
801.235 1145.66 801.224 1145.66 801.216 1145.66 cv
801.226 1145.66 801.233 1145.66 801.243 1145.66 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 800.64 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
801.128 1145.66 mo
801.118 1145.66 801.109 1145.66 801.099 1145.66 cv
801.109 1145.66 801.119 1145.66 801.128 1145.66 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.92 0 0 1.44 800.16 853.76 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bqYL'b~>
<~lg*m&lg*m&lg*m&~>
<~`Pog8`Pog8a2c6@~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
801.015 1145.65 mo
801.003 1145.65 800.996 1145.65 800.984 1145.65 cv
800.993 1145.65 801.005 1145.65 801.015 1145.65 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 800.16 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
800.899 1145.65 mo
800.889 1145.65 800.88 1145.65 800.87 1145.65 cv
800.88 1145.65 800.889 1145.65 800.899 1145.65 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 800.16 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
800.786 1145.65 mo
800.774 1145.65 800.763 1145.65 800.75 1145.65 cv
800.762 1145.65 800.774 1145.65 800.786 1145.65 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 800.16 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
800.671 1145.64 mo
800.659 1145.64 800.648 1145.64 800.636 1145.64 cv
800.648 1145.64 800.659 1145.64 800.671 1145.64 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.92 0 0 1.44 799.68 853.76 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bqYL'b~>
<~lg*m&lg*m&lg*m&~>
<~`Pog8`Pog8a2c6@~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
800.555 1145.64 mo
800.545 1145.64 800.538 1145.64 800.528 1145.64 cv
800.537 1145.64 800.545 1145.64 800.555 1145.64 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 799.68 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
800.44 1145.64 mo
800.43 1145.64 800.419 1145.63 800.41 1145.63 cv
800.422 1145.63 800.428 1145.63 800.44 1145.64 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 799.68 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
800.327 1145.63 mo
800.315 1145.63 800.301 1145.63 800.289 1145.63 cv
800.301 1145.63 800.315 1145.63 800.327 1145.63 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 799.68 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
800.212 1145.63 mo
800.2 1145.63 800.185 1145.63 800.173 1145.63 cv
800.187 1145.63 800.197 1145.63 800.212 1145.63 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 799.68 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
800.097 1145.63 mo
800.082 1145.63 800.072 1145.63 800.058 1145.62 cv
800.072 1145.63 800.082 1145.63 800.097 1145.63 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 799.2 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
799.982 1145.62 mo
799.966 1145.62 799.953 1145.62 799.936 1145.62 cv
799.952 1145.62 799.966 1145.62 799.982 1145.62 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 799.2 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
799.868 1145.62 mo
799.851 1145.62 799.837 1145.62 799.82 1145.62 cv
799.837 1145.62 799.851 1145.62 799.868 1145.62 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 799.2 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
799.752 1145.62 mo
799.735 1145.62 799.716 1145.62 799.699 1145.62 cv
799.718 1145.62 799.733 1145.62 799.752 1145.62 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 799.2 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
799.638 1145.62 mo
799.619 1145.62 799.6 1145.61 799.581 1145.61 cv
799.6 1145.61 799.619 1145.62 799.638 1145.62 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 798.72 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
799.522 1145.61 mo
799.506 1145.61 799.487 1145.61 799.471 1145.61 cv
799.49 1145.61 799.503 1145.61 799.522 1145.61 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 798.72 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
799.406 1145.61 mo
799.391 1145.61 799.375 1145.61 799.36 1145.61 cv
799.375 1145.61 799.392 1145.61 799.406 1145.61 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 798.72 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
799.291 1145.61 mo
799.274 1145.61 799.253 1145.61 799.237 1145.61 cv
799.256 1145.61 799.272 1145.61 799.291 1145.61 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 798.72 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
799.176 1145.61 mo
799.161 1145.61 799.143 1145.61 799.128 1145.61 cv
799.143 1145.61 799.161 1145.61 799.176 1145.61 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 798.24 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
799.06 1145.61 mo
799.043 1145.61 799.022 1145.61 799.005 1145.61 cv
799.022 1145.61 799.043 1145.61 799.06 1145.61 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 798.24 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
798.945 1145.61 mo
798.919 1145.61 798.895 1145.61 798.868 1145.6 cv
798.892 1145.61 798.922 1145.61 798.945 1145.61 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 798.24 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
798.83 1145.6 mo
798.801 1145.6 798.771 1145.6 798.742 1145.6 cv
798.771 1145.6 798.802 1145.6 798.83 1145.6 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 798.24 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
798.715 1145.6 mo
798.678 1145.6 798.641 1145.6 798.605 1145.6 cv
798.641 1145.6 798.679 1145.6 798.715 1145.6 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 797.76 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
798.599 1145.6 mo
798.57 1145.6 798.543 1145.6 798.514 1145.6 cv
798.541 1145.6 798.573 1145.6 798.599 1145.6 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 797.76 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
798.482 1145.6 mo
798.468 1145.6 798.454 1145.6 798.44 1145.6 cv
798.454 1145.6 798.468 1145.6 798.482 1145.6 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 2000 ]ct
[1.44 0 0 1.44 797.76 853.76 ]ct
snap_to_device
<<
/T 1
/W 3 
/H 3 
/M[3 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qYL'bqYL'bq>~>
<~lg*m&lg*m&lM~>
<~`Pog8`Pom<`r~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
870.434 1216.84 mo
717.611 1216.84 li
717.611 1145.6 li
798.251 1145.6 li
798.313 1145.6 798.377 1145.6 798.44 1145.6 cv
798.454 1145.6 798.468 1145.6 798.482 1145.6 cv
798.494 1145.6 798.502 1145.6 798.514 1145.6 cv
798.543 1145.6 798.57 1145.6 798.599 1145.6 cv
798.602 1145.6 798.603 1145.6 798.605 1145.6 cv
798.641 1145.6 798.678 1145.6 798.715 1145.6 cv
798.724 1145.6 798.733 1145.6 798.742 1145.6 cv
798.771 1145.6 798.801 1145.6 798.83 1145.6 cv
798.845 1145.6 798.854 1145.6 798.868 1145.6 cv
798.895 1145.61 798.919 1145.61 798.945 1145.61 cv
798.967 1145.61 798.983 1145.61 799.005 1145.61 cv
799.022 1145.61 799.043 1145.61 799.06 1145.61 cv
799.084 1145.61 799.104 1145.61 799.128 1145.61 cv
799.143 1145.61 799.161 1145.61 799.176 1145.61 cv
799.197 1145.61 799.215 1145.61 799.237 1145.61 cv
799.253 1145.61 799.274 1145.61 799.291 1145.61 cv
799.313 1145.61 799.339 1145.61 799.36 1145.61 cv
799.375 1145.61 799.391 1145.61 799.406 1145.61 cv
799.428 1145.61 799.449 1145.61 799.471 1145.61 cv
799.487 1145.61 799.506 1145.61 799.522 1145.61 cv
799.542 1145.61 799.562 1145.61 799.581 1145.61 cv
799.6 1145.61 799.619 1145.62 799.638 1145.62 cv
799.657 1145.62 799.68 1145.62 799.699 1145.62 cv
799.716 1145.62 799.735 1145.62 799.752 1145.62 cv
799.774 1145.62 799.799 1145.62 799.82 1145.62 cv
799.837 1145.62 799.851 1145.62 799.868 1145.62 cv
799.889 1145.62 799.914 1145.62 799.936 1145.62 cv
799.953 1145.62 799.966 1145.62 799.982 1145.62 cv
800.006 1145.62 800.034 1145.62 800.058 1145.62 cv
800.072 1145.63 800.082 1145.63 800.097 1145.63 cv
800.12 1145.63 800.149 1145.63 800.173 1145.63 cv
800.185 1145.63 800.2 1145.63 800.212 1145.63 cv
800.238 1145.63 800.263 1145.63 800.289 1145.63 cv
800.301 1145.63 800.315 1145.63 800.327 1145.63 cv
800.353 1145.63 800.383 1145.63 800.41 1145.63 cv
800.419 1145.63 800.43 1145.64 800.44 1145.64 cv
800.469 1145.64 800.499 1145.64 800.528 1145.64 cv
800.538 1145.64 800.545 1145.64 800.555 1145.64 cv
800.581 1145.64 800.61 1145.64 800.636 1145.64 cv
800.648 1145.64 800.659 1145.64 800.671 1145.64 cv
800.697 1145.64 800.724 1145.64 800.75 1145.65 cv
800.763 1145.65 800.774 1145.65 800.786 1145.65 cv
800.814 1145.65 800.841 1145.65 800.87 1145.65 cv
800.88 1145.65 800.889 1145.65 800.899 1145.65 cv
800.927 1145.65 800.955 1145.65 800.984 1145.65 cv
800.996 1145.65 801.003 1145.65 801.015 1145.65 cv
801.043 1145.66 801.071 1145.66 801.099 1145.66 cv
801.109 1145.66 801.118 1145.66 801.128 1145.66 cv
801.157 1145.66 801.188 1145.66 801.216 1145.66 cv
801.224 1145.66 801.235 1145.66 801.243 1145.66 cv
801.271 1145.67 801.299 1145.67 801.328 1145.67 cv
801.337 1145.67 801.348 1145.67 801.358 1145.67 cv
801.386 1145.67 801.418 1145.67 801.446 1145.67 cv
801.453 1145.67 801.464 1145.67 801.471 1145.67 cv
801.5 1145.68 801.529 1145.68 801.557 1145.68 cv
801.567 1145.68 801.577 1145.68 801.587 1145.68 cv
801.615 1145.68 801.642 1145.68 801.671 1145.68 cv
801.68 1145.68 801.692 1145.68 801.701 1145.68 cv
801.73 1145.69 801.758 1145.69 801.787 1145.69 cv
801.796 1145.69 801.805 1145.69 801.815 1145.69 cv
801.846 1145.69 801.875 1145.69 801.906 1145.69 cv
801.913 1145.69 801.92 1145.7 801.927 1145.7 cv
801.958 1145.7 801.992 1145.7 802.023 1145.7 cv
802.028 1145.7 802.035 1145.7 802.04 1145.7 cv
802.071 1145.7 802.108 1145.7 802.139 1145.71 cv
802.144 1145.71 802.149 1145.71 802.154 1145.71 cv
802.187 1145.71 802.224 1145.71 802.258 1145.71 cv
802.26 1145.71 802.264 1145.71 802.266 1145.71 cv
802.302 1145.72 802.337 1145.72 802.373 1145.72 cv
802.375 1145.72 802.377 1145.72 802.38 1145.72 cv
802.415 1145.72 802.45 1145.72 802.486 1145.73 cv
802.488 1145.73 802.491 1145.73 802.494 1145.73 cv
802.529 1145.73 802.565 1145.73 802.601 1145.73 cv
802.603 1145.73 802.605 1145.73 802.607 1145.73 cv
802.645 1145.74 802.68 1145.74 802.718 1145.74 cv
802.72 1145.74 li
802.795 1145.74 802.869 1145.75 802.945 1145.75 cv
802.947 1145.75 802.945 1145.75 802.947 1145.75 cv
840.175 1148.17 869.933 1179.14 870.434 1216.84 cv
level3{
gsave
clp
[-3.24381e-6 -74.2098 74.2098 -3.24381e-6 509.404 1210.91 ]ct
/19 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~>`42<Mh,#fIoqMV<el*'L3upRHW#NC:kO!gJp:"@G"dF/8q1qSIWJ&.E^kFr7=/u@H>Z&pDErD^5Bgm+
F_X$]Bf^<K3HAakEFh%IAMnF;1N$YWD.,,7?nZ;&/S\TCBjE3%>:F2h-Y?L.AQU6h=!M3U,%=Op@8n=V
;]T4B**uJ\>Yc5B:)@).(0XBG=@s6.8eP2s&6242<C[Ks71<*_$;j.s:dPC_5R'tK"AM&^9K`DL49.u8
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-3.24381e-6 -74.2098 74.2098 -3.24381e-6 509.404 1210.91 ]ct
clp
/19 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>?b<9>?Y35=]ed.=BAR)<`N."<E)pr;c6Lk;Gg:f:esk_:JOYZ9h\5S9M8#N8kDTG8OuBC84Q0>7R]a7
77BU46UO1,6:*t(5X7Ou5<h=q4Ztni4?P\e3]]8]3B9&Y2`EWQ2E!EM2)R3I1G^dA1,:R=0JG.50/"q1
/M/P*/1`>&.k3"t.4H\o-mpAh-71&c,pai_,U4NX+sJ3S+WqmL+!2RG*ZZ7@*#oq;)]BV4)&X;/(`*u(
()@Z$'bqDs',)#m&eYfi&J5Qc%hB0]%LrpW$k*OQ$O[:K#mgnE#RCY?"pP89"U,#3!s8W-!WiB'!!!!!
~>
<~MMd:KMMd:JM26tDLkgb@LPCP<L4t>8KnP,4KS+o0K7\],Jq8K(JUi9$J:E&uIsuiqIXQWmI=-EiI!^3e
H[C'bH?sj^H$OXZGB\4RG'8%PF`heJFEDVHF)uABEcQ/>EH,r:E,]`6Df9Q4DJj<.D/F**Ci!m&CMR["
C2.KtBk_9pBP;'lB4kjhAnGXdAS#F`A7T4\@q0"X@U`eT@:<SP?smAL?XI/H?=$rD?!LW=>?b<9>?Y35
=]nm1=]nj/='&I)<`W7%<`W4#<)cgr<)cdp;GpCj;Gp@h:f'tb:JXb^:/4PZ9he>V9MA,R91qoN8kM]J
~>
<~JUrB'JUi9#IsuiqIXZ`oI=-EiI!^3eH[:!aH?jd\G^"@UGB\7SG'.qMF`__IFE;MEF)l;AEcH)=EH#l9
E,]`6DJj<.D/F-,Ci!m&CMR["C2.HsBk_6oBP;$kB4kggAS#C_A7T4]A7T1[@U`bS@:<PO?sm>K?XI,G
?=$rD?!U`@>[(E9>$>*5>$5!1=BJ[,='&I(<`W7$<E3$u<)cgq;c?Um;Gg:f:f'tb:esk^:/4PY9he>U
9MA,R91qlL8P)KF8P)KF84Z6@7Rfj:7Rfg86psF26UO4.6:+"*5s[b$5<h@s5<h=q4Ztqk4?P_g4$,Mc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /19 /Gradient get_res exec grestore
}if
np
798.25 1145.6 mo
148.374 1145.6 li
148.374 1290.02 li
798.25 1290.02 li
837.966 1290.02 870.459 1257.53 870.459 1217.81 cv
870.459 1178.1 837.966 1145.6 798.25 1145.6 cv
cp
798.25 1152.82 mo
834.084 1152.82 863.238 1181.98 863.238 1217.81 cv
863.238 1253.64 834.084 1282.8 798.25 1282.8 cv
155.595 1282.8 li
155.595 1152.82 li
798.25 1152.82 li
.423529 .203922 .14902 rgb
f
157.761 1280.63 mo
798.25 1280.63 li
832.891 1280.63 861.073 1252.45 861.073 1217.81 cv
861.073 1183.17 832.891 1154.99 798.25 1154.99 cv
157.761 1154.99 li
157.761 1280.63 li
cp
798.25 1284.96 mo
153.428 1284.96 li
153.428 1150.66 li
798.25 1150.66 li
835.28 1150.66 865.405 1180.78 865.405 1217.81 cv
865.405 1254.84 835.28 1284.96 798.25 1284.96 cv
cp
.721569 .909804 .721569 rgb
f
794.496 1204 mo
789.834 1204 783.82 1205.28 777.846 1210.14 cv
773.094 1214.01 770.69 1219.93 771.72 1225.22 cv
772.417 1228.78 774.563 1231.35 777.618 1232.3 cv
788.181 1235.56 794.364 1227.74 796.716 1221.77 cv
797.639 1216.06 798.953 1208.92 799.771 1204.54 cv
798.358 1204.25 796.561 1204 794.496 1204 cv
cp
782.886 1263.79 mo
775.787 1263.79 768.656 1262.11 762.536 1258.71 cv
750.12 1251.82 743.499 1239.31 743.894 1223.47 cv
744.346 1205.47 751.651 1190.91 764.46 1182.46 cv
776.884 1174.28 793.797 1172.53 807.551 1178.04 cv
817.107 1181.86 823.625 1189.12 826.409 1199.04 cv
829.658 1210.63 827.18 1225.07 820.376 1234.15 cv
813.101 1243.84 806.124 1242.56 803.461 1241.56 cv
800.916 1240.6 798.784 1238.69 797.396 1236.34 cv
791.696 1241.32 783.888 1243.73 774.944 1240.98 cv
768.676 1239.05 764.138 1233.81 762.804 1226.96 cv
761.114 1218.29 764.677 1209.15 772.106 1203.1 cv
788.864 1189.44 806.121 1196.93 806.852 1197.25 cv
810.134 1198.72 li
809.454 1202.26 li
808.62 1206.6 806.82 1216.24 805.691 1223.17 cv
805.844 1223.22 li
805.743 1223.52 805.646 1223.82 805.542 1224.12 cv
805.13 1226.71 804.831 1228.83 804.735 1230.03 cv
804.67 1230.92 805.447 1232.59 806.662 1233.05 cv
808.188 1233.64 810.656 1231.96 813.104 1228.69 cv
817.51 1222.81 820.488 1211.59 817.659 1201.49 cv
815.643 1194.29 811.104 1189.25 804.177 1186.47 cv
793.101 1182.05 779.477 1183.45 769.463 1190.05 cv
762.206 1194.83 753.456 1204.55 752.979 1223.69 cv
752.584 1239.45 760.355 1247.11 766.942 1250.76 cv
776.983 1256.34 791.019 1255.94 800.321 1249.81 cv
805.316 1257.4 li
798.875 1261.64 790.897 1263.79 782.886 1263.79 cv
cp
.176471 .176471 .176471 rgb
f
797.525 1200.97 mo
792.863 1200.97 786.85 1202.24 780.875 1207.12 cv
776.123 1210.98 773.719 1216.9 774.749 1222.19 cv
775.446 1225.75 777.592 1228.32 780.647 1229.26 cv
791.21 1232.53 797.39 1224.71 799.746 1218.74 cv
800.668 1213.03 801.983 1205.89 802.801 1201.52 cv
801.387 1201.21 799.588 1200.97 797.525 1200.97 cv
cp
785.914 1260.76 mo
778.814 1260.76 771.686 1259.08 765.563 1255.68 cv
753.146 1248.79 746.529 1236.28 746.923 1220.44 cv
747.375 1202.44 754.677 1187.88 767.488 1179.43 cv
779.914 1171.25 796.826 1169.5 810.58 1175.01 cv
820.136 1178.83 826.655 1186.09 829.438 1196.01 cv
832.688 1207.6 830.209 1222.04 823.405 1231.11 cv
816.13 1240.81 809.152 1239.53 806.49 1238.53 cv
803.949 1237.57 801.813 1235.66 800.423 1233.31 cv
794.725 1238.29 786.917 1240.69 777.973 1237.95 cv
771.706 1236.02 767.165 1230.78 765.833 1223.93 cv
764.144 1215.26 767.708 1206.12 775.136 1200.07 cv
791.89 1186.41 809.15 1193.9 809.878 1194.22 cv
813.164 1195.69 li
812.481 1199.23 li
811.652 1203.57 809.85 1213.21 808.72 1220.14 cv
808.874 1220.19 li
808.774 1220.49 808.676 1220.79 808.572 1221.09 cv
808.157 1223.68 807.861 1225.8 807.765 1227 cv
807.697 1227.9 808.476 1229.56 809.691 1230.02 cv
811.217 1230.62 813.686 1228.93 816.133 1225.66 cv
820.54 1219.79 823.521 1208.56 820.689 1198.46 cv
818.672 1191.27 814.134 1186.22 807.206 1183.44 cv
796.13 1179.02 782.506 1180.42 772.49 1187.02 cv
765.235 1191.8 756.485 1201.52 756.009 1220.67 cv
755.614 1236.42 763.382 1244.08 769.971 1247.73 cv
780.012 1253.31 794.048 1252.91 803.351 1246.78 cv
808.346 1254.37 li
801.904 1258.61 793.926 1260.76 785.914 1260.76 cv
cp
1 1 1 rgb
f
1853.57 1679.95 mo
1853.57 1703.77 1834.07 1723.27 1810.24 1723.27 cv
1174.81 1723.27 li
1150.98 1723.27 1131.48 1703.77 1131.48 1679.95 cv
1131.48 1622.18 li
1131.48 1598.35 1150.98 1578.85 1174.81 1578.85 cv
1810.24 1578.85 li
1834.07 1578.85 1853.57 1598.35 1853.57 1622.18 cv
1853.57 1679.95 li
cp
.960784 .462745 .423529 rgb
f
1853.57 1679.95 mo
1853.57 1651.06 li
1131.48 1651.06 li
1131.48 1679.95 li
1131.48 1703.77 1150.98 1723.27 1174.81 1723.27 cv
1810.24 1723.27 li
1834.07 1723.27 1853.57 1703.77 1853.57 1679.95 cv
cp
.960784 .34902 .321569 rgb
f
1174.81 1723.27 mo
1250.22 1723.27 li
1250.22 1578.85 li
1174.81 1578.85 li
1150.98 1578.85 1131.48 1598.35 1131.48 1622.18 cv
1131.48 1679.95 li
1131.48 1703.77 1150.98 1723.27 1174.81 1723.27 cv
cp
.423529 .203922 .14902 rgb
f
1202.33 1630.91 mo
1199.95 1633.29 1196.04 1637.2 1193.65 1639.58 cv
1184.98 1648.25 li
1182.6 1650.64 1178.69 1650.64 1176.3 1648.25 cv
1167.64 1639.58 li
1165.25 1637.2 1161.34 1637.2 1158.96 1639.58 cv
1150.28 1648.25 li
1147.9 1650.64 1147.9 1654.55 1150.28 1656.93 cv
1158.96 1665.61 li
1161.34 1667.99 1165.25 1671.9 1167.64 1674.29 cv
1176.3 1682.96 li
1178.69 1685.34 1182.6 1685.34 1184.98 1682.96 cv
1193.65 1674.29 li
1196.04 1671.9 1199.95 1667.99 1202.33 1665.61 cv
1211 1656.93 li
1213.39 1654.55 1217.29 1650.64 1219.68 1648.25 cv
1228.35 1639.58 li
1230.74 1637.2 1230.74 1633.29 1228.35 1630.91 cv
1219.68 1622.24 li
1217.29 1619.85 1213.39 1619.85 1211 1622.24 cv
1202.33 1630.91 li
cp
.176471 .176471 .176471 rgb
f
1205.4 1627.84 mo
1203.02 1630.23 1199.11 1634.13 1196.72 1636.52 cv
1188.05 1645.19 li
1185.67 1647.57 1181.76 1647.57 1179.37 1645.19 cv
1170.71 1636.52 li
1168.32 1634.13 1164.41 1634.13 1162.02 1636.52 cv
1153.35 1645.19 li
1150.97 1647.57 1150.97 1651.48 1153.35 1653.86 cv
1162.02 1662.54 li
1164.41 1664.92 1168.32 1668.83 1170.71 1671.22 cv
1179.37 1679.89 li
1181.76 1682.27 1185.67 1682.27 1188.05 1679.89 cv
1196.72 1671.22 li
1199.11 1668.83 1203.02 1664.92 1205.4 1662.54 cv
1214.07 1653.86 li
1216.46 1651.48 1220.36 1647.57 1222.75 1645.19 cv
1231.42 1636.52 li
1233.81 1634.13 1233.81 1630.23 1231.42 1627.84 cv
1222.75 1619.17 li
1220.36 1616.78 1216.46 1616.78 1214.07 1619.17 cv
1205.4 1627.84 li
cp
1 1 1 rgb
f
1810.24 1578.85 mo
1174.81 1578.85 li
1150.98 1578.85 1131.48 1598.35 1131.48 1622.18 cv
1131.48 1679.95 li
1131.48 1703.77 1150.98 1723.27 1174.81 1723.27 cv
1810.24 1723.27 li
1834.07 1723.27 1853.57 1703.77 1853.57 1679.95 cv
1853.57 1622.18 li
1853.57 1598.35 1834.07 1578.85 1810.24 1578.85 cv
cp
1810.24 1586.07 mo
1830.15 1586.07 1846.35 1602.27 1846.35 1622.18 cv
1846.35 1679.95 li
1846.35 1699.85 1830.15 1716.05 1810.24 1716.05 cv
1174.81 1716.05 li
1154.9 1716.05 1138.7 1699.85 1138.7 1679.95 cv
1138.7 1622.18 li
1138.7 1602.27 1154.9 1586.07 1174.81 1586.07 cv
1810.24 1586.07 li
.329412 .180392 .235294 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 /19 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.1.0
%%For: (\713\745\755\752\740) ()
%%Title: (192.eps)
%%CreationDate: 7/2/2013 6:57 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CNH#dOY4/9'uBps&KBSgAr"`;pF=L8,Cg!Wd5`dO/'/hok"I0gTLiRF>6(=4c*'A-ACe0c7AE.H?Hnub=>K^1X]nh,Al_r5
%eo-"YFS"qsr8RS?dEUQt]9qeP:Qt_>`@&Frbs,Q_ZbG>qammX/];tVt_q0)kBC#Hljiuo3h>M7.bF_S6(LNcJV;Idqrj'8N]_UmQ
%kjnB47k/TTL&:l1ic9HfF*Dd'Yj_l2KB@M5r5X.672=b,)?8^mm.0!.qJ.Rq56'W"IXf\Y$/b>]^0Nrc;#dIoKcY[6qkLk]dcY?7
%l+_\RIX?)7E-M.tEHD(sTAe8:0>'.<mJ?NUIR05r4nS=prGlnjIWPARnj.T.BOB./+$No%MZ8%neLcl00'0&U`BR<#Oh[ktJb&D1
%iIC7$m6BRUH=7RigA1U2A$hrk"$\B=UL3=l5]&@YjAYIlB_^E[lLsf@@El-WB^uYg,,I^-mJg'JVV0o=_k[g%8TE]U3gf8#knFW?
%T;YbjVh=&OJ]7lZT.\]ErU&U:f;Ift]0+c%G7WS;r!,r2cT1d>2t&BNGCR9>GTc9c`feQdQT+*n9:=+2_9(dfB"4`Ns#5Gth<EbM
%o`K4"c/h#\a);d![do2t=0'fBf6:LF?eqlg^Us:TGP,OqrkKm#(M4$:^`3.!FJ+K%8h7N0o[c3RNnW!oS(?!hW^C?oR1M&`?P@@,
%Fa*BLiqg-\UZ)+-hd)a2L(/G@jZbkpK@p-lb.kL57"L,KolZscdbc^mCc0T[IebR!I<BtP]Xbmi@$1BLLm\11f#-Uog\fh"(]GFT
%na8;rK7WLkE'jd]Y#4_I:];KOMr0#4q2Tq"qn&>A[pNCT\U!_eVhaFoYLe^$mS;*lbJdPds*];bMrN1oZp0!9mc%Z'E-cO$fb7B5
%#k-=Pq(3?E^XE.s_>it&SlR@uPZE@.YHE@Y?f'R]'j'JgqL%fdVg#WI<)1m)qXe[A^Sl:Y/q0PPS.`)1m1%gN>%3k'+rhEYD`4':
%nNloM]p_!1pjn+fqYL-(eh2I.ke)HC<;Gq-=0HNp0CH#YKfr?6]P$[Sep#_Q>t[-FhVJ49q!R;,Z4TDeaM2JRI.napIPm,7O67FS
%?iG@%?_1S1?G*s5^&?pLCp*c*hq*T(.D$B4SMA[X=r`#l)r!"8lY$NVIWKL'Wc,^OY>O`Ml5"QminGPMDZSnAPO?UpYPXoEF>&;S
%^3oI->o[/E6MgG#VrnjAj+"]9oT.VUVcW3U`S1eQPR1=<4:^t"EHM3>PCJ#NaoCtlPMee60r/b*Nl!OkLKEF[Wi51&OQ,koIMlWh
%nW83[i\DRqPP?W!UabP=kf;,4UE?*0)%_QV5/D`t;-Ki,qKYLo-gB]23`Lm'J'=TLFGHIf%>S3U+Xsr$Q[@a'rK0><YNY-p9L/gq
%CiK#blQuBu]o3X!&q..7EBhjo,OR",aaKuA9M'5"dEB?*`nJ=3gr%Q%;gMMkUB?X0$L8qMeAqEN4u&6u`Y`K]nV0);,*Cg)/BopJ
%]J:jXZJ*a1XgQH#qDkoQoWtpFp6C(!iY+8uO)g\<N3gei:Hu\C!/Q;`m`7!91&\bZT+eEl7seNf1UV_^`fJD0L4?-8'/qcDM24,'
%WMVN"+K+=C9L#_X'.QC."BdZe).f).VLj[TWC(g(Nn#Y&6IdN%[&'pOVSXKRJS7l+6WBV4'>P!r7.2F!rfCfSIfdlLj*<@96W@om
%_?o`Ik&![pG"D4lBJot;Wor%mJOUM6c1g9pGkR3sOuVEVp`]Hhcb(W'=\iQUROCs!F!n-aAu6[6L%I`YJNcUX2Z"U[0O=Rr`/2op
%mIn0CBr71QB>hqLHdRPqS"o6;jRC^Yn_s'.kj\'q&VgVRGfr4H%OYEni4UFVi?<2NUs=5E9hTl6RBeT:4;JiBfG[CIP("Bn'\jY>
%ps&P'GJ)QU1>Aq:0IXUD_9i4OkU&qaQ34/8C.;mD3oCNLWIS>Yict<%ZgCE*44OQdoD=SJh9eB3B"bVg^EkeVp?$m-E\]n9gS8i^
%#?RpG`75I7nnD"D93$DT5!iiEe^8@M`^SPJ/V)Y607XAd&A[5H'7W@HFCJ#Ss6(+b5LZYHqS>D:oWt?cUK<54Vltn<?3RDCOqWp-
%,^E_\=0u^L9ueV74ukg#!lr@)j!4C\,Uj_<nr>k)(6V$1WV!HI**Ae/V8pd@nn:Ub\kKJW_NMEXl'Ac^Eb=3'k&%3S(fpjWX)85e
%/B^Y>fTqhK@GAZ+Kk4WA,o:j;e\t"R.17_iYk5(*BIXIg0?Y1)i+M$QcicoP-!8Anc>>jW8[D4oq&rLX;56"Uf9UU@G,]'LLEnqf
%Do4o3k0qbc@1nC'9,@5VV0?1adT?5+(r%5^(oXqj,r*e8+-Y\D+pAV,!E(H%."+Esk*SR(+c4uFU=YM52C+/-7C8g=?BTh&,XG-M
%-)']sGZtg>=t*WK`%in%QP2q5')@AQ5Eg`M!>L1Re;;=?_m6<3X=BkkNp(+)MF(8GX,3]%R]8?Ara^.;l4PR6ZdKDm!VKSpa0JX;
%:ng"O;,O,cUWFLEUXD5)US:-Y;(]$s'fC<#<G57&@8NOlS.dDJ6Sn$jrX#/a.*Xl5M^=i/@U/,5?Heg&c+I`076e,jgS>VZCl_dF
%!C,=F2Rp]\C1`DHN0n@sC^YXU#0ULcXbd#/<6An\6=jYYJCYp)8IuX<m2qVf+/:_+pG;pi5CW!VlVN<.?li>_`9Nq"+kjo6D,VK[
%K)UD&q/?r7*YIp[;oFkbSeK3WaK>h[(<9,lM`;1jNgGLOO.pcFEqB^05$B!J*??2tUNdJD:>$k5UhM^3fcAgJ8$b4U`;r&gKK!_-
%_p3iYd9T2CfGfYb=%%6Jga%XtC7FF)igYW\rS&m".S+7c6&^[$D;nJ^,c!36,g@/6b#`Cf01eDo=9]BV2@I_X$VV`T#p>&K87G)B
%VBK@N_-*nY/Cr2bLij!s,2R_qi:5\Ki!g'>"eh+`rA">!/:sGs'=L0iFmHN[6CrL17rZ\I38u[63(3+[*fXTZ8Fqp5<(;#Oifg7<
%N.Jo!'L8i'>ZLl%!_!R2b%fjjmJ]rtpq/]0l6,O69\i.YcfQ9Ymsg(_b/SAj(f!+l;%uGr'5aA<]:Dt:otYqtq^g8s"O0<;,bD1`
%[_t&nq]c0SmSqs8Rf\%;`,@,jD)"h<Sl@s.l8OFq[^[u;<h"<]fLmSqogcCcO%BZif,pRq""9<@L*Qog),Hf[8!TFHb3=9%e5#=(
%YBlZ.)0bmZ!=_,<?i/?!FjfqSHA+P&Y=P6*O^)+RLjX>eZ6]-L;N8&f%EUh-9@o@aN$K2Q8]RTCA`q.C2mDN]%!btRaV`&J^d_%G
%7"6?,^cN=;>063);fWsXM^Z&*P/Q;16nbAWmt-ABRd3qIY\:."cegu6nW%.3RbH>4+/?7T<HWase+kRaQX)bnfjgBa^^Po;`8QpT
%8(cgW=Tcma9NtX&5;`=/Ch+0jkfPY=1G`.RBD)?.7:r:bF'*qQT;DI9&GbKhr]-+5\gS'!.^2,jJ8P[PM]gN'R<Ute]Gric?6o.Q
%=^DUQBf$F%<(C&eb[F#6UQ/+A6T+!j1"Ek-3ek))MZqdp7+K\lnb>5<EAY]k)Of>s7!1=ASpj)1)cmt_5JfNT)T1]>o4[G"^p*JR
%WG:)a-R@%^c93[pLiGDq%#OF<SVP\`K\_?B"E,K8$O<@KYni-*bP6s#JVN!1$'%78];>KQC@R\d9bD"uihAi26C^?98!D#F^gUY=
%-J@q['lC&e)/GOs[Qr&&@j$pVO\p<r`n^sc>YY*797(^:)&u/c3Q,N`bm).O9aNP";Drj>jO'O?:^dOF4_,t&Gp&u9@P\#h6J3fB
%\lTT@kCe"ia"t?HEN_pGPkU%imh.2k!id^8s#l*D_&10tSX\96j[oJ?_ge%1CP5*&*h,sHk;I;*.k'],CG!gf#B(^]bR>pChX5Z[
%!q34J(N&aS>O(Qbe@(E!Rm"W[4]cp'9Tn9VJDoJM98&j`rnjntrd)h=>Po6a9@l,ST.N8,""D:05LQaM]stYe>h@k/Mm)WB4r35*
%Va*ke`h.b#hu4Snl/)gE/!5;Njl0YID-EIETO3-mTDk7#m,rE5r(et0=aY\2IY0l/ojpF92t^tNd(e`<R=BRU%XkZJ\,Z9n=X-b(
%O+?D`pnXDLVci3Ke'%F%_chfbp$;SR]c!$P'_q9LJ9%-q8me31[F7NaK^DX7%&l2bUXI8ih]iiU[O:ZhMG2)e^\OETMr4OE#49h,
%P`#oLX*[&I9!3<28j2HuTrSgh<f3G58R'M@-JF>+?K.0VCA(mT,IurIWG8I+#_-Sh:X2]bA4Mj$+$q)j,jo3KDG$%*?qH)njc&7]
%8Y.^M*'-4/@+(W^[FRhUo/TpJfs=-%8(nIZ%HN&43k79iOOQ>fSP*7RX@<8X1K-t2D]hT,0c_rIBh5ZF\LrONrVh!d+Yc]jV^Zf+
%TRSXEaQ,>5C@Jp!Y"GY8f/Y<Ye$AGK<ph24Si#_5I:"AMFccctTQliS>4KO^W",=$$si&],ITmtW8K39D=P4pe-aYuk+(Rdjh!B9
%L!?U>IDn$h[5h6[WsX9_I/_0F:9%EI!0J,PnSkUjQD]lAV\9T^,hXVLRc@"r$&!7?K^%/tR[iLYBjCmcE(2Sd]WAM?3a,=>7Q*N9
%)"lOm9hs%Y:.c@fbh"6N*u("])qj7kZ4/72N*$'j7">9B/V1*dRP_$"kBRt^77(PsbhF=;5']qXW@%G;K`7XEs.eLOfd?Pt$b=_4
%WpofUi=lL7k66Cm^gAb?+<F>IIa5a$^Kg`rk'[-KYQ&>,l//WrYN^\+V[j;^(U)^ZXRAB+:83d[n*WsNY17oq<k@bFI^lmM^KY(.
%YOpiG08NU#fD*\0cNl_n?[qp%?/L/3e*5]e5EU!cQ<LeI4+@(Ul/fPR0n+-BaG4^CjR7,-m`3*AV^E54<U5(3FEqs$j8+-V16kZ8
%nQ.H\f,#FdXnEVXn]\K.LHk9Ap)%KCq8[$'%k!7g9pGTIEH1jOEkU)IfOq)]IqOGt$\dL;[(f_Y\%`E-a#ME%h*9\"r<gL#0?U$(
%]g'Jb$TaO'iVoADpK0A%MrN@=TDr(fq>SWGIg,cKT0SRs?XB9$f+I&liq%*>VjBKbqt"-XrU[3\>X(BC^[9(S^QS-V4fG95o[f#m
%LEH4.<rVYScd7,C?bH>G0@=,krDa8djNQ#rc*!2B^3Lij@^U[V+?.(/)WQ"7?]FlsEq.nRGB[\8^'FN#YTHE<r@7Y`[=1(u-c>3o
%F=)ETBE$6KllFc;kIRjnpqM9g5/2>d[:jb4s/i?cn-c'.ec!@/"rI)%iqdQ_p"fInrNPKDGuIipLL6jrmHH3NFFS<'mZRP%)t_/u
%VfrZTDbfcH(MC8W=dXSXJK%rabO+Qiq.<Q,VtWDn0%BdQRto8W:+n9C1(%U/TANrpAB\YAH?.X$Fnir8nD2",ig\EoL\9KBIoMQg
%9f-u8KgNu3l^pr@^MTTg"I2,2hM#.GDDR+O`;',:])VKGHLKEhFQ0h^e%`DckrsMt;l+:'!L.T7.`P?SQg=MjlIb2*FCUQk%K(I!
%F8"Y=]8+@0\[KT:RVA`"X*5)`oYhIQ4@tnu=P\E!E-HVVIsXe'mHeKN`5OaAid^;hm'h3)\k&HhG5nfcaMCO1m\fa;]Ck&&(9c":
%*_p'L>[BPjgk_;th-Ocqe*FL3:>`2j?f0X>$>pfRUIt<)IJM3e%oa3B]>"1%pmusuY<M6\X.-HE9.],^li)h2YYRU77;aMtTFRho
%<;_"9`Q>a8b;+f:Xmb[tYPt4H-5Z!tG8FA$0DbQaT^,t`m@fB5*?RXU%c?s_T,)@FFLj'"^\MSlG7.4<r=^K5>;%Y4f8KN]]:0no
%:ORY7H#ZIsJ6hm+L]uZ[)o0[\QttW2R%]>1``U-VGJ#8/r^7tY(41IUH$Xnij>bQLm,m_`I6PO_MpMEBo.^/Moj%4UlYdSHm37Bn
%OOX.WGP0^A(=QccIFgs<2("r3[P\C#m`ou-:CX9SSBm[ao_H8Z]KVu7$+[LlQd)_D5Gsj7>AA?I6X"sb8)?F0iVefR\$'M+If+#+
%p[6U#NVbR;Ejo['MmU$EZErZ9^;KtM"VK%ms4be6>Zk?S.p;Npqtd1lQGpg#ZhM`C`P[uf>UFZO7Bk!oi1"-e4De8@%D0i@IW=kt
%U+&;+PH9Y:@9!`990P!p,(/EXFP3O3))RM@>(IE.V])C6DJte<>:dF>&DJ;Q0<Tc2o%gJ-mUNf$Na;8t8LE=ZRq>Q7&#-b`P.nWC
%3tR27Nn&`BcK/TCk`=d7N%U[Vr3kKB8#m-JUL+Mccqf_SDePBuMq:0HNpfL\h0h2r(/aXK0T*>T5MPPGj'N7dQm35n`TGI0,%Boi
%G"n<I#?S9Hf\*17o7NOE[g0N,Sj+]rIl0Ccffe"0lWW&,+9&XJqu#"3jk7sA\4&SB]>!/o;YoU.%(0gecSF\<Wuhl?EHqK47q=aT
%#5S0eB6Q;D48Sp<qVgB1Eh&]RO7(o=Y%'8/NSP[]OrCpe[A*("?=.*6mcsEB_=dZl.1EQ=?_-"X5O_80Y)b1MFNs'f[YWW3nGWZg
%)!\60g!=%t?*E_+A8D4uheiro_eP2GoFWXf*PJ@(DJmd<T).Gq(BsSlo6:)Rp5OZ"XD+sFL`GldcZTX#rp'.P]'c&3I.j@$5.g*V
%aJ[3#ZH1<--XZiORmS23s5VQ]^AVf?[(#"jriMb=q`d8kA9:eumG6$VMn6dtHu!8qX=p`#/SGF)f,"s!Vq;c$D.$u[+n7/+p]pR,
%m[s9])GRDtm-G%hEcVKaHMUSOkfYp'GX(!=rC>7MO*nqog/-NK!h"@[H$[)XjN\k8P-ljHf%8OjT'p2-O_r;th*g]+QDWs+ih6\/
%"79\:3PHfI%ngY)Oj8.d[ep;3^JB9%f>V,].C7t6G^Xm^^Pem^"l-b96aHI2_u="-gt_>tn_Ik,4S?6ETSo#odI486ms_q,kkQ9,
%\"<'YESp@N4s,)7X2'I@^:R_ohjb_GYIdi@B\;(O2`K>M=$5fU.gV=8-Wl&OebW]A'sVMC;ZM#GP)8St\PM,N-,cIf7#!j@DpRT2
%'\CB(g14I^ZRT(a:>U?QhsY6KA\>NfcE;WQ.6Q@O2\/.&%J13M5-%+i/hbhhp#u-61C`,(>aC?P9CplUI(f;;J(NrC*T,_F6S2VN
%n)'&Xh6IcfMJ-j6c7aS!+^?.*k0r=fIb>M+md66dh65bmRk"5_=Md/.8@3j7f/n=1S#"<tAhAQ)p&2kalX$mC)&1WuniECkmAuMd
%ltquX+.h>I'f,*H3@k>[#>OY>F3R5Qou5h>QX?rbhQ43$h"7"`H[U4P?/)id5HV[G-G-e$>T[iCRJ-;%p1&dUjQkiin%TWrNRP@'
%5^n-&H*ME\<XNjWcm9'oIEO'R:kZ\/m@[dX5"I`[?-8rWr/,d^jR2/f`rFY[],t*kES)9@IX-!_F7o\N>;)Heq!T$NAI6Y?q!HMM
%2h/N,33=cFam=cD)*VN3+/qM*9"3A3TC1\(S"Fk\V,I$]GGdZL_uB\mSTa06]*d]bIAE[0eTF%"T&3o;.QM%VE<rHm#&?O7%,<]n
%?(\(S]f>BB.Ec9=QZOeP]N2f%D2UP\m[HtM5LS4J%T(r^f\Z@MES^ud\T,YFg0Jr5)/PT3cf!s1jZbufrD#KL@7QKEkIg-XigeZl
%ilsnL<d$.pO^MBDko$XZ;IfDSe*k8nr.L3?s"W4k1B38*;DQn+h;$t2Prc04]p1D)Mfh+=kWW4`O0pt17r+Upa48/q\aJ8NrUG?]
%lMeEP^UR5%Jl&?UlgK:IGP1h/o\snX8Q'2T=R9DGYE>H'?eIOlBXE,,'d.F>(\I3]np!j"mAk7#mMsA4UMlt8P'q](pUe%qX"U_"
%h;d7.eo1<]PR2Xm3#!E@"136df^7%!bD!DSkf%aOJE8#YQ-D&_bPE[.67K`tm*ubRN8`f8SlPH-]A4XJ[sP/Zl1DsfO1W07ppTr0
%b,7<Q]l2fAL-E;]IeX,1IZLY]_t&4V\B*%c\i?&4V4Ir]fO[I!qf$k0:A]Z,5!<60P8IoVp'_n@/+n[qp<o!M_S++Q$e@QB@CO^u
%HqqVn]reX>l$#@Rela,$rPK037GagnmW1Gg`F"*s?SChCImWJ!f*a!tca[4W4YRlmVt]st:-<uQ;F@;k(8MgE1&^iQapf*cI.M5q
%9/cd$9STt=3pq`%qY'R@H?!pVjVFE$qo8jt>V!<2hH`8!TVAdcidsu%:D]@q;XS0#Cse&Qg;GhYIs:Sg3rHti0lNUeA^YU:O4N8O
%lLiDketJ$!`OkFXOVm$7EVlG'rRp#GD)[0U/#H[026j7J\GgMq45+!!hmbh,V[p5m3oD$Q,Qps"WtMpaXQ)Vl>HDA+=M91Raf#(0
%6@H:E?1ZX7oYXqpru]!8VQI.OrB5Q\>Pe`1=O=68CE<?p)$;j@_4Uab:)r,VF9i,]&C's<-Qa=8B@gQI0&Lf4\Cum+-keQj<5?I`
%oA!"L*324SXsA#'$NJ/n.fX8Y$ifJ9Mbi2LVpSEgqN^C*)JQPQMS"$]^LVmWmX0/ig`^n/[X3+D^"P#V24MTH"a!(8HXMrsWhIq<
%Ed2RlWt!RUK:nCq:h@n&k)8ghRKMiq!!S/$gMsJdfnueK&1=TV`e#+i$g]cfTM?S&8]=,6g/s+e#6`R@<bU0IVkU5@lm!FJ-_[^e
%H?WaDf/MMOV2s,$6i6CqBGp]'(*^/`.k,,nB??>ZPr___=W+S&S9G#J(T2LcOlM!hG7Z?++")9*$qR.!U*>'V'>@BMO[asJ5CHq7
%[C"A\)DEs5Nqd;9M\)itkA:Hp^%`k+G^sVHrJ05O-lQA%d9%)<"#O\J7)=Ui/Ar#E;@n=!K])]MK$afoh:G$J*^mo,_/qPDC'1TT
%Z,Xcf"'YMsU5c31FZ<%sX(mDYZcT4H_*L\_X@gDnd+\=*</1QMK^MrBBhk+i4'&K10V4/R6?VVs>)?5+7`kp8ReQ3Vq&*qK'A88p
%l#'>ZM[G"g.K`ZbCdq[M9bYo*Fb5?kO=&$._t#PpA`Mh^S5]>o4OAgIV"mi3njaR\B+o:S?a+8Z/O54`+q5ThjgBb6'fn`gF3(0*
%QC!Jck(%V$*J>k0[YeM<p(Q2UAeX[Tr^*B\XV*-)Qk\>MF\gIGogGo7B@lE`>f<5J2Mne6^P4l`78;1<-1%OO@!)am')%1g!=<*\
%^ak340r[lH7Jc]34tEtrOMW"Qkne7AqmG2$(9VIEiSM;Wb347jF\N9P=Z[A"$d99dP1Ke&1I-U8euZb2OGfoAS<et@_#siW_L]&L
%HF6$^1J:rS"mC_<Y^WGB=J8:%.a]_B8DD[$kFf#XbZ$/r-F3bbapZS"b_"AfB`kk%[8dMB`Pq^CC!fIUO>_-JU1$&CA#O!&/4O9F
%Jmu4YS4TAk[lSeHW*@/3m&+V%]a5XNVtjDnX[VD"Go!N)NG*+@O2FSk$SF)#X^K>7I&.EQNECrcddSiOaCG^,6J<(J)(Pp20eO*s
%'?$<`qEoVB5tC!r_1S$TOuQi',Y7.!,oBOAM$)gu9OER<X[,uVB`k5u-Ts[;DbpZN>=POF'$)JDSYX2=!0n`!,3TV]0JuPB#cN^Q
%bl('I7rk^EV'*sQH3M5,&W`,UWZ'MXBPjD.[3pStmQ00TKf10E+<81$[Ga5<>E^QQPeu/E\slAe3gg0W7X(\1"6_>"5YYu,-H<2H
%!Q2pT);&Xlh11ITPCkcK</ITL*30lEKHDVDBH8,OM1L5r*U7@cMJCju,NO_/ArC2]''1%lDN-hYV7'a-/X(lLl9^Q?dCX(K5?Uod
%Lq;W!&^..@8\n0YN5Y&#Rt=&IF!^u;4gbAmL/Z'4*OD7-!RF>)B[3>,,9;QR<-1qu[5.or9qPEt-Vl(=e@[Aia:uXI$a`+h1Q<8P
%Ja/ds"9X8"i)q6!8__C(q?LlMOH*^YVqAgP]-KjmK0*\P&T]6FAAacHdPrC,A<Q<%D6gJkO_KmsDZ_>_BK_hf[0)./YaIU7;#=EN
%1_pLumlH]rPf"(7p.oi]@b+[c+BYP]OP(VX<#SUaG/i"7O^HB,T/Ni2Ut(D.=W8\,19jf*QmA1K>BS=nfd:HL7aH=Z26.LeL`n`e
%V-f'oi5D#uA:''^4Dc!,O9dR,$WaK(GZ)sXJmLGS>$M[8b^+WUi13P)DMtp#1!uXP5d3bs7R":QQ/b0%7I=4YQJE)Z[d(ld@E'Rt
%<][;hi]4++Do4Vne-^PAS'&%`@*MBXBHlu.G7i=8M*@5>'Pu<0UdU<R%iDDX=s"\+'SOHNV$C^K+?Ah!?u&8"&Ejr8OLQ1ZP&4Ui
%m%D<2L7K[Eotc>AB_sKg79(inYY7VpfB*FEltB9N:n"I\mo1eCdNbCa_C+"s!RM-gPM.Ba@#FMD9'QV`2F(^rf4f+h=G@8U),9;U
%aFcskBWX/'CsV9bA"Jl]`7fbGC&fbYA@OL=R"?ArF&:7Rnjm#NfN$?B7jH#"ikai9M?\m'XBKc),!=E&k+Y/b^5j"7p#G:6R3c]2
%<9?bfBj,lL]:"83./7LdW[bU67$As[en+qMSAJZZoqUs%6Cp5FQ%h(.PALPjWtPqsqEjM$/=`c".SJh..?S&=49jq-k9SYC7>S_j
%r.48Jel:-,B7akHCS\`PN&t!)^1gce;3@BdBfi:=Z:\g!8J9Q$`>]`3OL1Y-&46@)Y$6WCpjjUW]KeC.XGVT*%UEY1\AU'NSkb#2
%fE!]-"r<<BjeCId)bj.fNDXjg0r/j5apUTV)l2P*#_P=aFoh&$+ldB9^3C\[^`Z1Yi'bf,#^*4*8nJTN58`L1Z9T`J'ZjP/lk71*
%-^lGK;4CV;3(D"4Zg<Yq#)HeX/6K&9V$/X2?meQFJo%qp<l&_B(nE!s#n`se#M?<df"lk`G]*T0hCdoqS>d5\P+h0(G_ER/5YRPE
%FqTpo6'.5BFX_&P)]5tTjUW**'8@iLF*/.aEs-'_36Ocl^k6s?>f;3p_?j.Tdn`%4RggP.>[duF?:q5SoI.u`JHtGmXd($q6N.]E
%&NN:*$_RB*N;B=RAWJ\[[cXMA,UpA<a?%O/5miZ=Q(l.N[$#548j62s*-V"=bmqhu0apV3G>^9UJI;N2n*Cp"cNXr?PdLqi66_R4
%i8(hFdM[s4_-!P8@HJ_(L$Akr!>*=W2^ATB=lM]c.'kBja9GGe,T@#D=P<a1+P9gT8e]=G5e>0aQ#5>jBSHU,6F7B,5]$D7OL&O+
%[4(o,J7b,h+Jahu`6?&Z:Zr*NPDd/@AbRAg0p>=Wcf98p<j<+TEp'Zs<GU/hY)qkFK?N.dmKmk\EGpRGpV[UhU98'=9p(,f"l5[A
%&@EsOl3&;fNX$A(=[?Qj/=5XHq\`\sY(Q/jY4\2E8>oCgFHD8Dd)L$=WtT;cKOUsC3@GYVUE)G.aqdm2m'QOelNH`o&F+kl9urh:
%,R5<+EX=K^W`iH5^o;.q$`frRm%j#N$:Y=+;qOrlO3jt.QpW$E8VI>CD9p?-Z$7p5L$(&]?;W;cPsMF,jHT)!&8dK]02Tg6>/PWL
%bscn<&hrjTQ7Q6XeV`E</"W(dfdb*<=j2[1?uO^4H=:6iCuJ#ak956Z<DsJd,'kg<.jjsFb//(/<@uD"bTbg7Pbk#Y4GtK2g@p2]
%CjQ]UFchV,5u"HD'Lg6/SXQpB]f[WtXd(*R'qPjD#0`aGi"kiXOKlH_Wu`r_j(Ol&&;<EKM(sK.>(r1nM548'&,-r>:T(5(6r-)`
%b=Z8]#,;4RG0=sHC<pUKS1:h!p#?b>.;l$D7CQ1p:n?V!'5\\&i.4G82HSGY"tW2V7"MGP_=F7eSZ7u'h$L$B\QT*&.PHQ*7f3gJ
%%/UUTZs\^bdX'Nh''+WLlM-a3+`,ODZ5LHp"Md4n;GnBk%'.4@r1W8LN+HL$GuZp5lO=`sRs!gRFB-_UdE*01N_*RnEJD7p$r+##
%-GmYn+4D=agI@CQHX8\r6U%q',=NIYNMar:\H`gT'h0d5!^Oi>c4J[\)1mFWO>7u?A/"'e=KEciHd[/e$62FuEC,RIib/?VjD+*`
%Lcm0>19R90^ml6WX`X5N"ALD#:"]aD.\WQM3-khQ>pX,!1WFfbTFGRXJ'h.=>u;)ZiE:g#Y=VA0$%G<r)H7JajbR@rUq9Daf+Xe%
%qOg;O+XgjLV_t!jFtiSB.Hta]K/$AbMq1"N0=)[(qcU2c0W5>^"q$;C,cllO-(P.<[GPDhX/"j%(g)D@))gG?Z.=Iuf^6daDU'Go
%_HLO>D]<X]a&sD/6H0*#/p61,4R22lO0\aCk)btW`%]K%bNia3*n(=Dj!.1.Uf\tibHl;o+N)\DE1"-9/6&Yb<nc+_Rl<?OD.CGo
%;=m%t)=`M`d^7]-"PfT5XkCQdgu-OhS?<3[o/4Br_CF866mCSM.AI,AOa&N3aTbg2_RRC#eu5fQ*FUo>Ct;:jII&+gX&1r^TQ/Ks
%FBini>)??3m7:NPDHQ;f3.o,9)I+_q!EWa<p)?kA-7_l%Es"mnLD87gJ0GIGjH106_1=d=('^RPBW9HMWWt*n"HsulgOj%=aWYDp
%rJQ_WSD\'Vaq&Rc?WKtL/3*:$6VIIV:(?F2=KDED"3!T$:JbCXjC[QeC`],''!1R\#d4J:#!P&`@[&aE85go8%fY01<WL#CH4i3s
%GQO7D3t>BBb%/`5^h:l\;B1bE@$<r-mf8E70,UJ!nY\9H*b"G*#[9'\M)Fk4J77=40J"5uXUMN>&3K4^6D+Qn1e4B!=_][2hoPq]
%^?ab]Qsf8_G4T-p_]^lND^E'B`P!,W%**lhUKBEKN/@EFQtMnZ$qW/YUc9W_;?G==NB<"r7_CB1i;gqfp5Tej:[g><-6)t_*:>a1
%W92&g81k=WSLn#QPCkRsbdtGgNnWR]jocoS$9Up43u5hLlbNHrfrm-HWXd/5i^u>j$o:$aZNu%kN)mM+9MV[>E=@g@T<e?;.X!Xq
%@\[H$K[lU+r@)[2-7nQFo#OhL;as5aDoAuAi%eUIfPSF"AW6"D`lM'&@jfsHq]UR-+:)ic7Vc-5Q@e)T5)5HODo`413urKp3Z/UU
%WsM))X_`A?Q5>*=TG10T@EFaJ;`;7$-e`p(`se?&XMA;0!L`;!,DH5Y9'^F*7k\hY][DKE$1lG2_)TXC&<3iW<oRsA(ii]jmpH,Z
%UVK@I98E!:&U2=U0re4LNk\u>!gnsi`5U`(=>(L?iuj_Son'M?B/AKo%KOu[PF[EA:I2XsKIJmJSR?gt_O-+1Qf:2EE53)kaUp@1
%O;+Q7#T<VD"Af^"MG%Br,4VtIE,^&&8Mh.qcQo5-Jkpu0C60R/JhjmH&]Xsjg1%_1f]1,A8VsF?F5S)nkOZ\&Yi7&6^a*3V-q$)g
%Qn6t`>b&7H(*j$;=$Uis8Xpk298E[TrC!b9R.hb6U3D/WaF4g638RT^.E&O-3=8Hbq[]&6d"W6l.(>k89"?p`N=$'2LZHG!^fXuE
%!Gl5""I<_jQA^r7%U@^4?AM6Y%Q\$SKV]H?<0@j;il+;7$n>F.0Q!,8=;TH)7qHZ;9JUXW<#`5QUipT-Xs?8ii=mt_^pK<bJN_-_
%Y'N4G.Zeh;bGDIhj4-IMNLLHULr=&NR$AR7nTCuF&t@'66s8e[V2rTqo'EL_QD9sX4iu-]6(AWe*(1?YciT&#MsSDqO4.WJ0lsu:
%@3iLN@&j"(i3ha]2T#f'?SGLr076laHXuUsV%JY4[1l,-OH>8l0-"r1^h8Ed(FS$J"G:k2N;6A/F!uE*\Of%3!=P3\LWCs&WKd*!
%!gcA1$HLCHbU6n>_i+C-(bJA7NjBYB2JaKfAA%6dd4ClE',nr3iuJJ:0'+mo>4[91?4:4a*E9E!YR(YG!.sYjP):S':+:*_AF2``
%nqq'Q:8F#,7!;]u!Y/\]&^41hQkpuWb0+_C&<sDW#^7uCj%kl/R3GhciTrbK2"E@.&03<R)K@$XZYE!>T&XLDK[65]nA"QYK/gDN
%"O`&;kZC=L6l$'X!")n3!l.>0@R1!%:HaB@`jn$l$-"5`HR2!^*%0N=!b&qH@@&,^$)a+T1eAo7g=k=)X\6ppLH!`C1G8e<#kKGU
%X:#NdA</bfoWed3bso,TJ&_'\KOo%3:GdZuJ`QJE=lop122S^Y+kSB\<te)J6rF^"??M+''[Jpp=NpiR-$fUN"#(kAZp<8l#)%8Y
%$R2[85oao7"S$2'lteg%oDn`S6on!M5$?fa]YYD9E["0_T@O#$^o.NM:?mn&R*Q'=Z<n6Q%0nXW"+q@4gdn3!\@;f[-"4Z0=RBW*
%!-B*20nI*/#`<(g-,dG8LfVG;.UUM-,E/UTI@'L;LD@)@&GQUe:'O`=ej)d%k(;*+inC,sRfX`>V&<,7,_DRHAV>1P(PLL:Q9gpR
%0jO6O,%8Wb2oIS0%q+^(X>&LM@9Wdh34F^])+5WU4ZZ7@+gb,],OBsDJdQk$^n?A\_k4*9I`TmeEnl_2.'_D]6=,Yu'Q3B,!eZ;q
%"V<"3>dF0>ULG(F`[OAV'J5(<&]\A]jL7mh4%bA,AT0(g1P/\,)6ql;jUIEm)TJWajqR981_p]IZ;_rXV]Z7<9.oEr436hZoDckP
%0r?)&>KA,r+1QXhLDjj^3!T2gQ9/S"40U<T#(nuWNI9c`65V9n5_)h?ONj[Gh,CNa5\tTN7R!421AMgiO+0g_;@kRM]"gZ[^4Z;'
%Et4\&M4qnEPoYhr6>G/ii#\qe)hMmpH%,lk4qQRDE^AK%6!+H%Ra;:IFOh"c2jI-)1COq]pbkWQnC$<p&"HNH=afXR"2IA:Y>Dle
%$D`ER.ti9@6mSH^Db(M,3B#>eA]^(q'-4FK<gk*s'o%<0Kc$Q?Y@>G^,bg/*73FDj6;bfeBB:oZ;M&_DM$%98$0MG#%(^9M,+ca"
%j5:I^`d?PfJsLW&5TG^O*8rYmPj=_?hXcb$g^fOtJUs"%5eY\_&@cYUH=XtG7!L+^G7N&UFHhFV"badGJWQahN9CnMKj]-]Gm=)k
%'WRACbLeIW=Ok4&![Fp>--<Mi3W=e"lmAEp=^2QS!@e*%lc%jLamh'.!dHt25X(^W-3+6VX:Zb39H:JF"Qq^K&A$4[^Y%6?,%3k&
%+2[/Z4U4KMN9!?,=SWFSMB">R%1%mK@&Hq5Lh^$j++Zhc3idru!3%r_AjIDq6nIaIm*BQaSHDttn%fW`<O(h(X%,8]ktZIA(p$,:
%6k>mocGaLQ0YnG=CF[F7Gq7Vm!MN+&o]7kJZI&j4fJ:@iZ3QHcDi-!(@Bg`?3klOKX#sE%.FJeskWZWFCLh7hG"kN\(XjMiA=GM;
%UANm$$>O#`G3"Wr0]bQoZs;X$CCg:BffGKQb-d4U!-.Re-a@H@eTbu62Q1_9E'O(ABj_hNLfWfjL)UT2-Uo*%IsgcX>($2"im7Yq
%ifdC:U+tPl*hO:@]q14^2uIUnG.)kNm;0K1mHf&mk4;[Cq7u_\Y%:,A\1!l.3^eb@;p;_GTf]L-WT^?PN@-5%?W:\r$n-!D8bdTt
%@t9/&#[W;#1Hc@l_uS%c"`8ie2i3nMTUR\Q[g$R`B>u-#0L%jq_Y$2Ua*3pQNfFUqcJDiTF#.@L/Mm%8Dh9534L3SJV`"P\*3`^7
%`K<)uK%9BLW6ti"WM5Z2WrXfJY&2\QBRQl,o!(3HkD,JQX?IuEqo+Kd5\;N)1^KRD4rXF<Um]/8;Y&[)GlEr`!YPW.#'`IjSfB]n
%fSXX"<"u6nRSOk&a\=Gl"Bp&Pm=^nQ*rDTVmYF[X[cP#Ago#Z1cgj5"cUGtF@3g^I"\g?IS9_j>&6jO7I#H,?#XcoZO]H*;o>SM7
%f31WU%XW"tK_(qJLY3CDLR@3#7#FbAZ`=@.R)H+em:hfj]U_>1ah79NEL[g4=g/;>S\q#C!W?%jI%aSg?ARU,X[:o4AUJ,=gJI65
%Lal\QfEl"S-gc5oVG<!g@83gG</s5['KEVW71GA&$%F,\b$,jm"N4^</Y+ep>>nmO!OKiBMbe`H<[A&AOLu45Sb'Gk5F>(hlh2Ef
%dir>,ceJTnQ5M9r(8la6Y]gWYlr9RF5attam'tB<6h\7)I$*."FVSskJTbum>?K=6?*O-HQ69p6jZ/"G5Jba(WBp#Pp5g<a6%L="
%)H==-OR!;\#j1p]g+lFgm?C3ZUN"O9RGu`@LI/Kt97/=hp?X>C#SfVr_^KJ%Q<$-jVJC#&1eLmFiNYfVRqX2C2jjCP(T=SFesZ"%
%\kn1CZ%9qFBQ@j?Xst)1Q92Rtb7FKVBX8-l7LQ.j@P49p,DJ6*R3pX[98nJ@qph\$RdnGoMj[3KlF?)f16APtYOnD2YWn$AkrEX.
%KEN@0L2HVJ+0Uf^pjDV?4S[plB2"aN%9[\J`R3EVT=fi,LAjKs)t,_*mpm&bbIH\M?Q3;Go2R5R$jTdBVS.>`Y[+p6g09CO4?@iH
%AriP:/CV(ir((uJ1i0Hqs+.QumI_#`bW!om.OX#je-^[Z<g1C1i<7bn[YuZR1iD&t*J\&"4QROkId-ne(.WoeUa0W\62ca$Zo9s*
%1r/.0I4skEO=@i1D+7uc7Ur3d".'KG1<5b'<3BIrYDm^%B2LRo?X4,C6`t9*\o]I"5i_,Zk\?F/KV!QJF%@mCT4bA-K$4*/[5NO%
%4,OpJUY<E]nAgSje[mA+^cJ"MB+c.2(s__aiAkJ]R<,g@D"2(LknR&?DXLa(]\c:1VN0Ukb4@HH_lKJnKWE-:L;MJ`cR2:!)Pp(m
%8*NoKj=W`O9PXbiTmbua;GG)?BK6E`N+QKRnX4Vj_6SGIU,C@bK/>%@-qt%PLY*NEKUAInc5eBTiK0%`hGZfZC_#B<k/g59'rdnJ
%*tf2*ca^=#^<?fS$`Kf;$E>KW-uX94,7a5^I'2$T8VWNU6Y2L=87k#*#;m2u)($#FBnVBYBTPq'*Fr)9b7Il&Pn6*BA8!tra.:EO
%\WaF2R6S0\3RdTIg2iZjCX)DnDhMdK7_:SR00B^jE4m;a"Cs#^''ulb@'bL0&!Hm]Bo`ptnBDVOG/DoK)]C^"`A5e=^?ib]6^nA%
%q:,1m(MgTQAD4QUqpl4mKjSa'Bb&Kd;hHpIY&dK#enGR9/.r0oXWofV;Ee`rng.*s+;dg^]_Sq"\*P$F(WT%,P8pkV*HQ>a:\c,c
%UG?quc-\1'R5NDlTJLskTCW7f#VQ"qfAop2+ZB9=44bU9<"F/Y/52>%q@>61:-!?u'uujiK,BUQnS'8M[D'Yh#l5I?-EgfUpRm-A
%"#hVNAo#Q`b6uIl<=mr03M89qN/"kPS0^^DZ.bNO@Ec.:'ucR+!%ZdEcp<@l6]IA>6]H4$>4FXR%B=J1e6"*5U0nR;?1?PoM)sS$
%J&He,AF#YZDNYQ'`ISpI/[2XYrZW9b,jV[:JAJ$(Rf\pc_L>q!eg@n[IGGjh"sU@>P4fNqYXY0iH^ZNXp;/Y.eYAB=<jNdPH@LrX
%c>q.orAeIm;MZ)5kW/W0"JhlYF5_+V/IBtIB$>BG>U37nC/f9sDEYfh7\\."bR-!VPp96cNdEcb6\B?&ajHib/0&Q=6i[EOm3Ipl
%(#SY`?,>;EjGI]#Xq8b8g]bM4%7R`O34W&pf9&pL$MNk]Vcf0+!#OUBRcAKm>iP,&^baG*>2hQg`1`Pqc@eH(fi9sSTEn\=>J!3P
%p9j#m%RdG:BVaOW,FNS\JpM0*#8%arGm9fBShq.q7S0GO9u>#W\CVu[>]V;cM9;;!639d=C+3L>@gJqU&!mCt>$2!o:-$oqCBTA6
%!YDrG9NE?L\ippdB@,`W_29EUitOK5BrMTq(i=p\,OHgtOA-]SNt7Kff<iPC4U:PQccIQj6i@F:.%IXOASZDm2rF#LDF^b1K9`BP
%(mXaJF!NOIe*'YQD)52c?dIM5`Ruq3%[VaN6PKPs>"(;8*Or_33,fCeXuU>KS@HLMZ?>8Ka2YY6.,de6&N(Lh!AU0/PcsIuAV[g:
%Oq!3V+HN`bfL@Q#14o,Q[U;^)FN1i'f\k?18Zp3Ed<`tpacZ5s0%_5^$kZ!QA]sSi);I3:/,YYB*)"70`#H+maSND"FQ5?YDG<@>
%rJp[6a=0YX??dd$@@#&I3Kj>:VJD>oVOZHFV^TbK4B]C/*hhDe"Na#MEMQBbK!7B[7n?e.h@#[XYE@ZS=[jfB[>+.OH3qCM>e>#r
%^@o*(BDk@N\rqam=#h`;VN?G(g5&cj#9!9L_>9J]?u7l\;XmVDgs=Jt_)n),6HE4<am;h,5,h-7I'-4=@\@r41'KHU#71oWP]!70
%o<CGuKCl=bTE0U*GubO<aehK2<R&\l!Fe&T!+MQ6Y:X"]2`=G?DR"OAC+D_:Of8npWQ:p`8V/dE]ieESN7:=o==t9=SoCWDd/BaU
%LaP(B",2Wt8P>FJWt)n.k]UZAJt9-q3A?UJL5;lY/-^\bZHoeu%+$\V%8@I5gJs$u@hCB%h2YNA#:i[+0FHpN-KnTqqgFem$`f-/
%]Q0UcEh'I'KFZP&hhSDRF$:Mj#(ZL:4@@&,^)YF1)AF@!&dq+1((3':]BCE6/'tQJDe'Xu86NGA>Wa@4bNgJM!\%2O:,h2a`XuV(
%(Q*4_T]E"<8m,2bi']bilQMdZd8Y-`:0^m*G:"%sVTk,.5$qUZBXL:YSPji"\&,;C0Aa99ZE!s!I_MUEhUp/X5%$Uir'bgBFo#-[
%F8C)@m&R8%cX@pKX80j)\VGU@g%RMnX!F<!m$k@`*'Rn]P^"h(GDAIi#8PF;I0jh7/GSKPeN%^'f5p)m=^nQ[VUYCfJV]*+>*9:Q
%4I[KCf_Mh6%d:/GAA76B\'&o%T7\Ys?Q>2<l/B((OomC#[#fO%MH/t/J$-k)K_6PmYFaC*4_c8"<F6aVoar2!g-t.T,^K2F!njm`
%lc@@K&in$Q^mo(;3CKGhag!te)JjHR:m!#HTqho[qBX$1^:JIpZlGT)"^Ud/G<hXuW^Aiq7?<a5`sT8M8T`cKV["W^7Y[,O\klHQ
%b)QS[:,WI^o[6$eA`)eTY"$O_^eT\CE/XJOr0&_D)3K4;^Q?P78.Ma>([1,d>bK8C([1,d>bK7NE.KX6i<&s2I&c\6&$SBdZO:VM
%:%R=+33*LFGD7U3k7cfhZ)2q%S=%]OZK@.j?Uc3?XQD?)N\aDM!U@X)5tA31cmY7H=sJ]A#/5PC$F2Bs!EZ#f,"pAdno]#!lmJU!
%S9=B_HTX\B[&YT"SSu;YcC8Wd3JP!%"P<PmQ/qhO'5n>"UJ9q$[KXh=/RMR-W6U_g>'7?#K=0F@MbB(:@cj>NNTN'4aS;*3k+KQd
%iX;rS$)t'?mOuOs6>#Adhd\TCE[FP<>XZ:Wc%7[&R"O<sB'%)e6$,pNlmb%%]+25F]o1GEfYg80T8QcaR+@/c]R&@#Eug-23i)e8
%ZpF^]\_b5\.C`NI+321M0B_&>1a$5l9#Q=&ii:!$=?.;Gr_)%ailcooe5'mJ]k#a^Ws`rad^P--W0>:B*-/A18d@JXP*9&o]NFcH
%:IK-i]U1)\a#TGWkr:jObIIpbmG*o?mg1`!NeP>/&r>,uBZ2F*o=SA$&dDI#iFj(U&Y*:658bdULMA<9AX9P1O2LHC-Wpd<*1%d6
%8HVNA_TM6+2e-:ORQ->2`^Qh02lC\e6Bg7Yj:&`8nFkRm/$PArT'u4.VG\#^*`p!^]Cu+lO%m#e_odScS%t@Ig>l80h`S?nM@OMp
%dFCV#U=LjI*sB'Y`C=N3YpK8#.M)3[($hZ)eUm>X7HDOOJfq<-dZaAP^^bg0>f6"@J1]s,7aQ+WT!Z2lgT-mD8:UJ?_>`r5Jp$,p
%OpNtp<_,7#<[chIQ<@omRCo6%1<1-2((WW[_,p8e_1S'iPRkZgY=%.Y*!L45P]GXXro'O)jQmD'/(gKcesTjhZ,Goj=^jD3'!(b;
%$.3;T%ORJCaBEWW^T:sJc:Nc@qauV)0?+3-VH,LZp\4/&e])2A8R[r-M=r,jStUJ5+/q.ZlUH35d@OEOS4F`J4m`h_P/fFtA<H+^
%8JS>0,d9L;.FjXCq0$B\m4=8CO6[Y)L;Ar33#R$f%k[[,YW=cbH?B^[0m)?8+Kn/&gjeU;8C!\,$":"pj[b<\TEh[>_0tB`*`N#*
%fmABC7"a7J^%2NHR<)h:k7IhVT?^H:<M\M_=0QnM$t*4a4]n'-!+qQm`N%Yt?']S2%EZJqpDMNS\/N/Eo?uaclTBCW59mj+U4TF3
%mW;j#:`['b@WNTcb48X6eV2sPd#$Lhdcu8*Uue,7[!H(8C&+?4dW07^l+c#&i_T#Y2([okca1;MQ;;oV4ZJ!Bf_^1K=FE.K"j],(
%)q)p&%$!*AJp\U]S,:5N5EEGf=k?qK`h@"KGQ1XH\pli?2q>'VJ'_ZHNE_r-NqKn^KC9&&b)/8'HZYe(>,+Gi]p%3%7Zs1JWfXFd
%M1/Wdr0gIgK@e06;i8s4:*2"i^91M,5'7(<B5c)Wj#QY0%ti''K%4K9"YRpe)Uca0!Y07OJM+P_9)Xe#Vs\re($TA9K"\LgK%8K5
%ZE7(h4jm_E^;]&_7F!OdoR7kEnaM'Qc)3pFOg>'GUn>R4H?m<"X"$^sq6%[^=YG+4%p&[oY;')`O6?GISU7805i_'[/E\?u[sR;o
%LW%C+CEM:%$b)Z*$<tO@l=U:Zo&d";5Tp(<K47D:&E);q!<IgS1h?r<`;:f1M9',gSV*8t=*mC23N"9lo;,hmnt=3pgiDRc/-dJ1
%Jm8@9cjC5=3PB,YaO(`m5sl^51fd?[&-eC6/ODRna`$)p`5p[XX]u_W+tNGV%rJq@7u<>pLpK[ja.k-@]uM+lORo=AEs1b>4*HU8
%LbZkJHR_uPAf-R?+6I)TFTVtZ>.Hsa&="WU,P4V'KTi[jq#GF0nXG8`W!\9(2ml>*,eL,td#c*jX^GS7V-Ll58ASPdZk?2LHs$]G
%E*^.)bpEU<`k=LG_EKZL$#1R[bk^gmXL'5`//J]t<&ec9M!..aBBCfLq>j/?0/S>'.4/)(E5dV.,`Z-JRl6e\ZQMY^L\RZK%^0Q$
%RWVZf7WHKabNUC9RNF;j6a4s7Xqb260U>$DEBImYn\Zj`-]M&d[DuG#)hM0=c]Leq?lm^``9hU)h)9-rn1q5b$>DE_\'HQ$TPP-Q
%Qn&^t>&>b/5u^BP?Mg8WS,/8h/F^aOp`!+EeB/M(0!f62-&tT>??/oe@$qrY.u3o8p'Bk$i\8V4%8eupBLlR!<j;)D;XQlU.:1$$
%&r_I@gW5Ma(=?ua3#`!JhL^+"M1o+QhNmtL1$XnKIc;U+.*g8jY/THI9%c;C7i(4UQ])</n*YhY4Dt.=Z9)lu4G*;J1<)As)CQCW
%$Gq@e.YkSO&?]ub^5J7Y6.tqaY5X0?DH+Y;^gn_:j(/H"cE@_7?0`$lL@Cp[UED7/C531Aq;RSrXod1ZfD6FD8iP&Xk]U)]i_2H\
%O2M0II\p\/b+,]VF_CChQTGf$]\Rbf[2FDt!.CY+V;h<5laRc:miAll9-s,XFafDsK,1o(dWu`"fIDe7b$)R>oZWNd3fuAm@qQ`_
%`mglnN4U7$3_P<"k)>X;%N#Lri[h?8,1R]N._8>k?h/i>WL.Sa"kU^TRC9blBH@I+8S`-g;`UgpI(ZC^]VOA&%P.#(WR#@'e"?J9
%ZY_/sGNs81bVO1'NBUD,$FrDi4A(?mQg5#&^Z=3I[X&NMi7Ug<`>mpb"G.7m3m%2MEmdIHG9tR6F9kd%,.A7&eX8FTR?#b]r:hpS
%Sr;`#.UC<PY)kk.EH3+cDZaU-&3M.kf^`9H6E<7f@:O!uh^-2^b2<V!m8"6AEGe<M+[M98>bJ3HIcI!@^frS,TrfYRI>/0ek=-L<
%XZOZV-2!ATqt>8ebc73'LWn)k;6a`%9$!RWP8dr\grD<#>Eef$/UUh!OLkj=R^6D6P+-<qkmAHBP04FM`*H5F4]+te-?rOI*suqJ
%Q"3`b\Ls(Ca6C-UN>:R)RWd)d!RJ@4%&f^G&8O@ec*J<P[/!:N>$F?dX6<2DOWRZd$rM7KJD]+."RZ'ATt)IdbM+;M3ur%IIVWTW
%(/t5VEk/]_Z3k]eDI=XRC&g'c]DB\rc-5]2Bu"c//B)B;mUWj\Kf-"mSQZ%qErACt9pc0.^1aklb4fRbW^gKaL9t)N6bC@HqO/EG
%cP3p1n\aL3^fK!N%##?!2fppME$B(iY@,iuk0^>dibO_`AQ`aP0-f.njj82/WWsP^mn"RcY5CE9<Uc-&Hp6+-*M;@A=f1c`*@$>t
%%4Pm-$?<3[A;[e6dU%8?X=5B_J<SKhk_:O@,;,$I=/(e.m3#cC#(KkN+T1(/RW7g%6CM,mqBq@e]R`Rp?!$_noI_T%/Bl`Mha96l
%G,).O]3DWM8!+&%LFocGRMS.PQD#Wc7YJZ)MEVc2U]U+U,6N';.lHlJH5mokRpkEH%@u(@*m1&AM^j!hJ<ac/,l0[74`]V_@8=6X
%mh_6Z,S=PE*[!=(*;3HSrK#G$2fp@'0;]di8G13Ql!QAf2XVW,S>_nl>Ql/)igmCCY:(H_k,a-A$"D/H%)3Z^\l,1W\W`TQn@&oq
%%aaTXX&*MR.6$fRb-(fs$k$P%c!anU)d$:[l^/=Q?i/8K[HfZ@(KB1nm_esm5[RfN\k[H_-L5CL1\nX@as>5*n`(V^_<MJ2fiX_A
%7i8t'ALL]3.a"J"Y=4@qR74Lu^[Gp9@6eUD4c6/c3-b<4Zu9fn^T0\jrP\DbjpLI!_g'=9P&+!]TAJnLG!RM6lkQG!%3"ru%4r'?
%eUZXZ2fMc6_fN*`,[dg(WR.qpSQ(jPR`I[h4&BB'3(CP;d6XT^2$/BWddL1secF>[.M[7G5_bT22!j3=[f$Y:rLaM-lMX$!jfn.$
%flI$j=+VGa53#;ip,?j!V2!qCE7Oi<Wh4(](UiH%l#0Vp`1HKFD>Tgbr&!0d,KJM_9b<B0:&GoaKe,O0A0mYnW?:X,:OEP#?%;r7
%ldWq;E4D?#M<h>m<N,A?+p/*8-dY[Ma(Be>;]igdd(kDO*Vck3!Q?WD\^Ca)=kB1>]&TCkD,;UT+?#f1PGML1Fs!D9d\(S;=*.Qh
%'eMdhNDr6gd'5fnDBmO(iAGe,BGc!!6h?-i'1D$]d1mR#5stN\cqq74piX=)Le$`AIV-;-1)V"o=])&o4,B2H[fpX#!,<`!e?=U]
%p<0/(Fbm/^8r.A.$acG#j2]md'IS4['W?fqM4?B*L]Mr*@mYPV9]Fp@Xk4\c3`IOj[_`gmTc5<48V\H#_WEZp%IPMf7iLn%U%;:U
%bGgZIZjP+0;%e-L2;<k2fYT@-1UoTF*J(-29m\im3=#:gY"+24GpL^PDQiYtJoPb\8_^)4AR>YqHIACO$M<c7B/Y/0r.aAtVRuGb
%]"O_<QoQ>Jq;KBSQpE^uKsQ?gng$<R-Q00O@2jJ0'fO_,QfY!T2)6AbZ^Ph3WPE&-W*7(I".+h,6+)b-MdC@gasdqYh#T+&3(nJ^
%pad-3#.GkJBh`#K@H&&)RO5"b>FsU?dIUQhWMCh<iYP:.4\Tq'@eg%64i2H79J4^)h^CKkmBA&WjIi?d^#dqCh#LAVfe.CoWT(S_
%ReK!CT!%@`,4C14$eu\`F!L!eb8L;ng69:^i=3<=jDE;X/`W1Yaj)n442RO^hA4r=CN^YF/>2P#$[FXdhaJB!\:,![&Z7V2dgoKL
%67<-fqsjTO*oG7\fJn!Wm`ho.`uPR;`K+q\em.NYQqT^ADqG7mDN1ah3\#hWCA_o@?rf.0SGNM+4Ken&%sA8"q7'Qt4j,eU8E%ri
%'rNb>7m/t.It[thXMS]jH1UfUV4)`Ofm5GeAmd^NoKHoVa:"NIkcf\<YeJ14?DobXCSgZnU3:]m@1p7.aV1?eMY_Tmc`-1WRViNl
%b21/@#6/+R!H5p]o1M"fg7SkLVca;2Xu_rWEcG.?h$da3Fs]BW)bd(Z%(t2d(&M\eJP22no0$dh!TR!7PU+\)rg;b,h#YO5/"Fs0
%PZ7sd(U^I-AJD8cPO&l!,$?&a>orIeR=sASr%n\,Y`V'U/r(edL:H/8&JK4D:5],B+D97+cZPs*:L]Y(NoTb<Z8Pggng!B?08\lT
%j"4"NnaKjFqFAJ[6Q@)\<Ih"B&jPY*O5,F!j5S,[3X%TmM?e4)01=uINUSiaUh`6UabDou46;1\q3>6N?i2)?S7FbA5J]-+Oo:cR
%clcB"1]l>*SdK/l*<'K..=3k+ZXA%sM"F6FfhpnVP_Y::(-Lp(1W0g9&>jKFG.,USh-Q0(8XJEGN]8tYdLmEJR%hC"f5&3cKV#uj
%<i'e7jqk5cn9[ba*0&Qe#td1(b"p<eV`<g@.Oc;m2=S,7o1g@7R4M^!O$m?C#0uB=KHK*nmIKl89XEsE;,3]NH*SGGJEA3)G@p)k
%$+iIG-8U+.<#3T@._4FX1"FKKBH<./$Er0RL&p+h8MRF.X<NqgE5jWU`sjBWJ`D,HMY!UP-<#`LOC@ZMKJ!p9(`;S_o9ge9?I!#)
%8L?>g0K[9-L6W](&:8;WT69E1rT1Ln2e5/Ya6]S[Tntjc;]YDLBPf3\)Le#'B6aX(0;##WP)e/bq_@)?UYWWi"XB'A@AqJ:A`3/q
%h?6>/b9BWOq#^Z@)rXoa5oN&1>Vr<QBjr.gBJ%=MXL"bG80#mZKKVh99T#2/5OD*'DR?WSXjJ>dY)(lIEKUMin_&<U-R=NgOL=W:
%BktW2$q#dSkPQ9Y7OFBcMag=U9Fr90M%9DbpqBK66'?T'S&GjVepi<HpLY*e7)X@QjH'MOD)i=V:A5,Dg.<n4YXBZ:BmKB,(G621
%,oDA,SRPV.q70@rNsJImj)4W\/6al<\>a^qXd>N:/2U:Sj]EkMV'rPN`O@kgYQf!VPP5rYflfBjD?"=3f=7VG]XlD$Q3,AU)@o$h
%hT$i[cK0N;G@=Tb8lPe.<qso&-HMT8?BKHGM@V)o'f=oD?<B5L;kF/1J4Zb<TC3a877e5\fh)+O=LW$>IV*D.JY*B`!1Pde_+`iJ
%'[K?L`GBP:9(4iV[)?U]%f+/8-qOQW5X7B,,X2NLBR/R'^a\_W=@FG]>rg3b;Db:"H9Ck_D<t`_E:KneLB.d$io[,$,OMM(EW8NM
%@2j>Lh?i<HcVBhE,@pU^@+44/(GhjgjfoeYGH)Y1]ht/qWcHMm?A.g@b=VCTk/sRDUR#EY?Bn#\''Kh*4Qa\RHW<fBKf!BY<-a8l
%9=]\U.S#biHdl"T>0h5bfB)5[jAiD,0cY?A2cYlhB9h+"F3mHeHC?aQ.:7O>g,u@Y9qsa>C_O;,ZoRPm9nVS/\D.h;7dRNCQm58X
%mSh.ZN\dIk1<smV;Gm93DqjJ\)Rc9[H=,553*:A"kU'NDr1oJ7MgH9M?b$_[2tA:K&)?,e#Hs`C*6>@K&m+<-AFCB*Ht=_&I::?]
%"Ung*hBusTiT3K]'oCOPesS#!4E@:@r8as&X,K(k#(k%E%:_dOJrQ^rW-f6%fODL5HCmNc0_&$M0kXG(nkId?aA8fl`jZ,Jn$k8&
%`K=>hUFG[`Ab>f7,CTlQ8'c"'>ACDc(9s$6.]Kj!0`R`JPk2l[VODj$k`n,Fp3A)m[5_(B-Xjll`KOk)\"U`=h<HgC:Ac"X2_+@9
%)18mZQ^Df&V5D1@/CLdPnVH*_Q>V<fO!-`5d$-M5ZAs4?.Idle<do[Z&k@XVU0jo5O0NM.3[Kg@%)NlVM8rRVhR%Mo5_7V<iZprm
%%ah:[*%?uWfDnp2-^W:nNbY(r-O5\j23+$'AY2ndF"ci@4V$>iGOW4?9o3nt0p@,f9)^G%,K4XOfp&TeX&?1*a]8NG8o3X3\JKr#
%5pk*8;Cn2,mKE'K,4];k9Km#=8UQZ<PuUc7Y&%p9DpuLHjB'h"a8f`JOsZjC&"7h7[c_e]?pnA5lk'5co]%'cRn3?E4sCXd<rN\u
%Y6T;4Y_)Ytfc2+epF1rdila)DHQBGS)i]^%jA<?^<ou<@Ho<pFMd%H-n)3EfcBHXWdec1>lJD#W3*EG6ZZW'0Pq=])RTnY(Ei'\,
%_98%@JF^]5QokC4VW=W7=Y?9(@7W;t/]($)@@RUe'qmk-OLEGFIfZ$:"V/Z:2/E"o+(MVA>kT?8&9N4na54X">I[<cYrVF^>_[5Y
%:Z(-L2*LNi5s@sgHDS]VX!I&[KPO(K7N<\mDicc8#pG$W:9\;]hNci.`IZmD`+[HL+_Ol!iO<nCe^O!WC5?J7Dh4!RKa%Kqp=cEm
%&BAV>aM?=Gpan-fmAA>j7n#=l/U+[Do"'sZi/uJVPf,T"o1ftVlh2.0QGZr,-V1rI!)bHl-$='Q*o.sjb^!p"27-6%D\p[GqNi0u
%D1+:rVl.j;4VD(e1Xq4.Qc"h_:S+c#pml'L\=;sWcI1heWfl#0SHnRn[m4jDpPe@.T%3>m$0iQ@Hb=6H`%Sl5g@0:8fdD,]BO/$H
%!QA=Q2XBZpCWf1HV+%!^WL\&>WJha!3,(Wt\4"=@T2"E'es;W#j5?5iBP'C*WTh-;oTr_9gN%E/!HN;Xkh:JZ\o,R2_>.aj16*3A
%G,G1->@)o@76lUq-?M2(/ko#&$6A]U<-2W!1[96I`$q;$6#=a>d`kBWq9i#(qj];Kh;Hn:l;/OY.;,k:F3XE'Q?1*H2%dr1:P1iD
%8NkO=q+g4sVpf4td@anl$eje=kXa'qopiJPD5k5@-kZ8#^NP!4bcTjjNZ$SF,Vm2O&%u_7/,A`FnI7!IDb*13U^8*?,MR\ZmAb.f
%S[1:hH.[uj+G/Ki:4UOOP9`(^3(;#9+u7*?2d"POnq^a=gT'J;TYn6j:@_M*=",jFBA)MlpoH%;GEfCL)HlhH>[08BlZ,1g%e;V?
%:fl4fN/?BSUK07O>Xs_Cm1'iY$n"QIW<Ul_D,[oWNihnX>Y!cOO(1smM<BL--YZ-nT_K?)4NN"e&8q<C`5t#[=WShbG]#"B.d6B(
%9E\U(cM*V#.+^.7#knlEk9%cVGp9KWFp?u]_oq5P('O1t;R(FW?-]'"p/1Fn*LYo@']mda.%X8`XKY;i%BBB[-LP"CmXK&6nF"1\
%QYDF&\tf&*q+7KbX@d=B%p=WU!o'5P]u"&7&2sNM2uYt[JNIQjN/isBC5ccl_]s-XLF93PZbNpJ5'DCMN:Bc^1p2SY<d;[3*[*q(
%%8qJ<)eqO;W_$'"U:*#4[H5FSfQ6MK]XP#BJue>$#q)a9C;-AdT2ZY,M^E=DK9*hfUb?\$EAcL3+dVOtY]bI-Q?af9cS*egf.W);
%5#@bq'cfLKm`D%XbTO:N/3bVESF@),e.EU)$gOO+EjBH8*ToZuFGc@XeHk2?Je&t*&d<SF,fB:JCH7XlqSk.\Jt6JBN"[4RT=/^W
%<b7&Of#J>APAi4/SS5(Pi***b(+kL^#_cJAl\B=6XhL3ST7+rFrXUjg$a!ZfL0.Z+Nn\^'M-/6P\;BB;dk[L=gMQbXh6<UmRJC:E
%*+k#.Q4c/Ri@^!'-[1T3X#d>@FUYcKd$IOuF.cQJB_*#f&A4cZ_3iIVbT4?ugHNT9@6*=a<AnZ,]n:)j>Es%j1Ljec@Utr1Y6HUm
%*&u!g1Mj98pqLgm$tF-qi,[cTqV`tqD_qD1j4g]"RIrBmnDubqL4*_N)BZViLh*k*cPhX3_6`@BOqW[?#TjPHi-9D$UuCAKaUAJ6
%P'2R6,dWks6q$OdK&R3b*:nd'*Ia3W6mG2c/@S0.LI3NDg6^D]/Y:m.hag!^=Pa8U(rC@(el#c6[*'7&32R$S`/<X#[<e2.,4l_t
%@Q9sh'h;NDo=7n")4@750>TTl=*_25<a-fm\PR^0imHZ]9U3SB#JYiG@gMoZFD3Eek2'[7dU:=\+K%Z[&7:8qERB!0?lK1rn7na7
%c>u7:%;I>a'1hb_&i76TN[Ho:?7Xj]@*=b>"1-7H6"8h&EMBotgHARTUD2lp)]L4ML!"N%30"agmFi-bh)J@!S@be2@beAqq&Q;l
%j\6L$id_%#E4CoWQWcJpilDMJ0Jb4kq:J.K*YV,(!?T>V$mJI;&dL_\0IE)O-1R0S)bSU+P4-7gj8^A68O=V&R=:[M&b5G'$BgVk
%QcP:I2H(^D@.E%[KQ"qqVLd'6F;cke[F`j4X@`h:N\uLf'1VM4,fl[:.WD9!%^Q^tbUBkYmcit4(^7BXpf!N_6cu\aO^&hZN^%sU
%i(e`2XV!(`!CMCA=.(ZM2EB]0[/o<T4m!-G\L#K4DNHfZ;[(nm6@i2_]efeR;VIo_$1`r'9nRBs</3Gp$ZR+d1.ZLcKBE8_IRU?-
%`$kp@F`ZB3aq^a,Z[ZO0L$1^i'7a%_K,Z'iUGn2a:D3<4X7N%CEo_;9)&&omBA!^Q&4)J\C!gDrN0G'bYtC=')uf$^(42,*QB9]c
%@uC^-E3.Ac#9"PD_-qS0@h,Pn=*$7%o"-a0"Je3Ch)AI>3D0IWC`1lhZ'^YKqDiX.09,ObHC+9-@ZU/!Fr8skQL7J2e,0maXHgj3
%X.BFZ#M4JV]91CYSL(!sW&0Z\pN43_Cb4g$fWt83l#+$B:_3a>Bg3mBmtXe,N;srra4C;JdbDiL<19ljY!&i,ne&J"VVoGs5LW3n
%Thgd"4:r@tY%]!>Ts+q8>ZsD;d<fo-am`jJjTc?WEm';5#B5k$dgFYb0^rtS4O[Dp1)61`!Y1Dp^bWM(L;a)ens$La#?SN<O_$J-
%$EiLse%%*><pWgn9@'TF]n(SDNVI^/?>cuWh(h8:laEd_&I;/=M)c/+LWuEFC&5mA"se16WJ!/!mT@TI/TrXIlC,!n.K#[#4.c$P
%--j"T?j<%aM3BPnXM01W&Mk>uf.&QF?Npa9.i:,2`7n:k*@<JTNnSJV7[@=u/%D#e_Q&)OTN7iK$-b"8q'no=lRMsY6EWc+"-%p?
%2D@c-,;(7!>iWsai`7AbZB@!gb:\K8"]l^H41:Rs_Vb%Q9A>tWdicn/8Z`L7()9*g.hIJsLuh]V"f/P55tGlK84'-F7,:,F7S28!
%"0o)H@k+u)J?kR%86fu\PY^Z[3^=&,i6i:o(dG^l]K/el].hN%\o6\oYbMM.hP0rVq]g>7)oRYTA0],s'A&VmQ[&"E$"H0PMQJYb
%J&_PL4@ao[8.<kF(A#qr;]V`IID]\hAL+KiB(HtH43<B?g2Pq%Ej,Tm'/V\5_+*lHm!6Hjb/?aEBFq^,2(iS[K^qI5im<MUe0a7D
%D)h8&I*lJJ);ISG+t&%dP0L6c0S=(HYPG.-"!C-R5P-_VB??TH^eppU:-aDM2in%VKOCH\1(oVH*Ar\4D1'G9)pLd'2>&",/cssF
%=6!tnV3LS8i<gV1M%j6OQj,=nj>%o<$PBFs^]q\J!:lG=,D!\%%^Q0,(bNT,#(\<c^*[YsBP7U:@'',PnI.2h]#!KEIRc]_NAH[G
%i2R3.OInm?,^9c9^05fh$P/u[hZ4o0&8D5AUsb!d&_>0p:[97>_0/36QN<$Ob[lC=fSj<9I[A+5;BkFDUmOO[,\)r45=nXnO<\=Y
%T5T#uHhq9`+>ni<Dh!n^r4s8MT+rtVGS+^:mQ]8'/XZ^LBoF2V#shJ?iu/K#`&7Jl"-T`gUgChf,"ihkG8EeIlB%^lcpimG$@iac
%PDY[?Tp=n^Obf>c()\BOiV.j>E^b:&FFN8FD>Eb@Tb389-2!3q[LLggqQ6tqd;Po=<<eS1:dA-U"/;=,1LT'>CaJ`6n-d;dIV(jo
%XQtOBKYYT9mU(Wcpamd#;fdUH6K$fI!T.iSih&VVd'fKj>[Gqi>&l(NHj*$TIhA+3EH7)I0)d5gi?h)]goE\^oUeO9^hRJ[Cg[(c
%;D&42m/Y&i$%T@]a<UlD`ZW$l^pbJp!(kU6NaKkVQ_ZW09:A6]6#9\u*IS^b7Q&Ap+SLeO4s(MZ<^R)p9S9H)kDjQGk9TNOZ-\:N
%)9A\;TO+^A+_e^q%n<3A88(?&Z#RS-bfKJtVb7UV9_aRQkS[V,_d`KLTAbBlK8:a6&1jjW4YOu6O0A0Ui2=PEckO[r&P,3c!_Yfq
%73m-l2$7ls(p?(_Q?Po\gf]qGn]kY8j[g4mW1ZRS90\V?,BjP_JrDSX,U:JfGU@-)668O\&@e*Z]XK^H_HTS+l/:*H9]EOrQBDE9
%?XJB.i2^p\8OQ-#1'u53:*g0i1Fd%*IO=joSXr4N--RcXT(8.N@mLD;q6:sq*Wj+r]eap^KTeV4do%i^j6&*u8d"$F`da+03EQ^D
%M1r;p@YCGE4?FIE**JU_5(:Y2,oKZIE\,$SZDm&o+CU352u%A!*[.Kg!b^1eU@1(>1$Ge0N!UQGYu+IBYB,Nl5NTj+TWV;/;nW(^
%[VYc<_JJ\cm;+%l9k%b@`:(>UA1JM0$lYg%E5^n%>h@osgYCj>E$fD]U2JV[/G=mUf7MOY<2mG1[JdFLY>rE^*XlV`;/-@9Zf%d1
%W5r+jYRd;,+OsMJ<5C2VT2`QoRBmcG?1,ej@=i%YGkjc(NgGpr.P+nD5FEE5Z`jR*2odi`?Im_/+"rP]ol-Z>Qe]UA*RAKqkh-Es
%=l588bpU$r/P!DIj<D4=S.5g=Jlom8#Bh-,8#V;(:?.lOT:br&Esp[C-R)r*Z>:l%O&j%KEG(B8AOFU6/j&e1.:J3_?*u#OXf^;`
%!L=bd(JM\'%g"X^"fm*:;KW0>%Q(E^ZW:&G;Oa`.EfLX1rXI<#"`W#b\q6u#]iK)aeSQn`hN(Rdp#aES&eBDo$b#=9B#1p/dH2'H
%%[f<Jg>,rhgI,/h;<H9a@ZTn%*o`j;)/k8#RS;l>bd#.clA@s[9,Q'lW8>ZKc[H3.`\V#`9tl3ZY=N](QD=A#OI$^#L6hY5<!0IZ
%['9#P-6jbiA<:H>jl<uTp/s8LreC'^Z%19Q>#-$Y((Ik-jK<k'+@aIjYP?s/U*^4L*@i*scPN6)1(Y^`\<tKA@7s=>ob>TKd67Xq
%2%%@Acsjg*XEnAKeLg1M5`2!R1\\4V<6*E!59n?33pcS+1oJXCMaWjU/X/Xb>]#"1-a^:WEjjG&3q&JplQ]#hd3cq_AV@D$jj=?a
%'@\f"jW#FE:YscueN8Jd\8dWh+M$FjQZc\5a(]anGH!o2q[RO:DWu(E6H-4uo+h$V>M`99:Udu5[/G1f$='<PPr=$f0p1ug):mTs
%Riiu.4+R;2g3eVo&$nX;F$^1$<CA)#Z9pYK\-P*5_5bD!/dei3iOkT_qpLt9e.X_7!\o/X-=l:!nf.+H'1#co7mu(:<u`2'k@r[&
%?gZbAro6Y-;OmYI(nL"YJ`/Uh4D(M\r'D$a"]-@0!+sP$'3B]DndmZ>hk0,Df<.g,ok_1dh`_GD?,'R.o*9ZRVR?cPWUgMgIFei"
%jMYo*/U%ns`-Aj35U[Fo9;*S/#I\f&YdQV$:=XC>DZ,tnLts(SReiuD3ZJGm5/5X3aW^/Y`#.+4msNnQ]\=7]bd!`6B$_`cMsWE7
%&fe\)F/r?@:qo#+BYQ]GBG7_[OU`k3)<>d+LJ:s(+4Jt^Q\NR)P1)/Z[Rbtp#%OI%rC3o_Pn(3]D/u2ldI8na0q"U,5?+9>.9Mhb
%&<cukFOd.O`iHh.*hA_ER5s.bejbg>]$5>D3HOl%BhYlf"_C0X+`^HpA]LC0f]UQ[8:?t9Phq..kT&LI_7&.`Ak1@52+s[,?o^lI
%rG@Di9F9;5Ys&iRC#o-/+>oaoO3Tj`W:8['@tj=0,n\Ts*gtE;GZMF4mh>,*Q_t"ilZ2Cf(V9Y$)q83lR\Mg7TPa:m'[fG?/`m+7
%DWr/C$CU75_LiH.\qh"0KWTBT\Ng8c<j[&Z1ph,rCEjkLoqnFjgRW\a%'JJRA8!trRlM"q+OE=Cl<=b!YA0D@*AjOmQ607?/jDlX
%c(L,P@6?dBX_0"l,4ac!'X2cs<3UWLE!]SYq_Y7<K,%)fqZGUgD*A%ncnk5jL,O9*USHS:TZp,+)emZl+rXXrh5Vu8gSW.=rWA&p
%W7@aI+f!:hO:YO==",UU;Q-<\X/BoS?)p=81<4*NdiulSW>Y%C#o.8?K%`Hp%Fch?m;hYia91a@,t#jY\i^iYZMfU9rm)8_6noVj
%4hu\g<pnrOkY#_M.Ys2>`/.P?^Z^EME<@7i6nYY+Ese\=m%[gQQm>PcoNoX7K`_h+MWXLU"upC$9K>I:OB]'L+<2(6ao-pq&AL>&
%.&%Kuh@"SFQ.*8E6GW$k@J*A`#0u+h>bpfm(Z8nrW\)7')spkR2[@=ng>kk?oPqaDnGp+63+-D=`36]550E,:S1r3f*t0:ZA2#cJ
%']g"87MtQf6dDd[&J8<-8FOAr?7N@&CY9"nk%&i,C?4gg4i$W)/j`7H=5q9=@tG=Z)/RN@pF;'*_8_QC/SG\=JqZ)PhR`lOh`pW3
%Fosm:Bd@N-"7_<M9VYWQEdT'R?It;@na:\>;hM(Ld,Fg,T5iKJ3[cr1>[C:KJgb&<;(9&?neg)']LR$A\9)?XnZ:H<Nj)g8E=YZ>
%>]q4;i\>98[d"d\HJY?L[]:"*.HoJ6dkil(O7V-'YgEYBj('$D'N0AtXeHt(SFGh'_geS2.-/F:0i&O<7Ou;j*NE7AMgU^XP1GF/
%l;gtPc=CA+F-c2L/9GD!\f+Ndjcs0!g;2<iereH?g3C(5o5Q2i%:.8_&<GdL=hp2nYbJ0!78h#p@Mucrk0^>da#j:ZDgOgD8r+Ak
%C@]IL?][mSd4u&t7S]Q"PfHW9+SPO@PU(P?;VZ=r[7ktgK3`Y!52_7<V?E(p:r3382)n$j#[^o032mAhiS^58NJ=JXls\g#3h4OV
%js\YX1?=O\.8Zr',$[fDj0ktGM%,mb-0[.b/n@/9qG.td3JX9W$(^-t.Xc#u+iGa'](AfJd:Xo#K'&b["X(?E-j(eS7p-Wr1CIX$
%K5G13&i,g66/1T1X_!J7($71n>;Q"Ne_0h?'^S&598I.(p4:Fb84%,<cV?rTD5;P@VkV">%F,$AD_(LBPoq7$D\_rB?5W!*LPsU!
%<ilrUjQ5C(2[*Y"B6#K<m_^#og/Z`j\R!d*'ue>GTrr#Apa4HPg@`*KF&U^YCX&/Lktjn+Y3/[BdR#[=j?p%j_VS=!#IU.IBVFj/
%7.W6WNKhPRRHo8(mDff><bj^eLn#M8F=8biMAIAh?qi`/*mq3?793EQ//n^uLhjam26rIF7;F.,]i_IJ\,Ik!QBs3gc.m_L%0*KA
%#3C$=2g'mPqR@Hk17$?X2rH:1lnoA9^s:sXdD9pSk^CC=IumYOjOmPGn.p"F3%o;]*7LU^!HknVD6lN0.[UCOnrJ^9pU[P0Z=%2E
%G]q"S2/,6&Z[)srK,'72n:BNc5YJ7VZ[K'_O`J$tMFJ&[D`Ls`OjO$iYcYr7>JsukQ@fO8nblU,h6:u/b%DQ--=QSuiq9I(CSX;)
%2eOd-R6`J2'N)N57_(Di-<s-Y0"^hS6E%0_]V;@0%^?aejJe,T;s\=dNgChDTuO]!,&;5+;_?$1%Y"c*b`k#l2Hd].b:1PK?Iq)L
%8C227:.R<X"^U65h'U.gd$ET"HO#S"D9t7V't(P@>?iX_*Bs[b>6*LO'PKL#:I/&8jO$%!2f6NL>//WZK?!/tB^9iDXpo9<2G]!V
%5&V(W1O=2be;-o^HFmhI9*JOK51fpUYkQL8l&;>H\_18'K<(H9C&84^cuNZON!c8B]Pu5Tf-GgIN=(YuY%[3FXfdYcS)=],B.:1`
%W(C\E'sI(ic>)eb*t\t($),"m9u7[-mobVo6lsa)9%GhmZn8ktA_]i:K!'FagksF7f;GIOFIOG,2n$O3OO"a$[j^k?6(Lf.F03PM
%S[Gil>eCbk^P&5%_V5<Y1EVsepg!k>hR-`2cd<E'`m^a&bB=L6EHoBR6/l`tN,X0b^W/7rV4-lh*,]'K0!5mqo>5AP7qqGJqU'Yt
%*q6VVV!MFVk3gLkTD(bjTE!m4iLBMnc.tD)'*!EN#1KHca>A;Dc2.)'b>W09Dtn_Ml14>%hrj8&m`j#4Q2Ied[)Jquk;TTrh]I<0
%^8HF0qsa4=qYSitc)X0g=!P4F5EC.LO*QF]K9_;6Cb4``_tt!c'itXS@#jD=@npZ@oIa:Zjc9.+l=5g$*1XgT\$ftVJlhiDlpG$'
%j4,W)5[d'#F\PT9LZeOYSN'0=I0rcn%6S6TCT4Es":Xg+bgnCgC=H;P"4]S9F>Z.OO".D!jON+TEEkYF*7()j4BRCe0k's#3\MWR
%g*'EBhq0/g-[n4IrF9k$=XP^Y(,I;Nq4I#e9ogV_Euhb45l[OEL4FWA8LBYCV=cAD#+h6:B1@DPL8QTKV@*G69:5PL_fOgi_9B"G
%Y3Kc8P3mJbeiisW5D)6W(i]UFT2f\P$rRZoM.\(cKa<baZt,Q)Z,V%Q%T&PgJ1d!ZBp8f8-lIG'[E.$/,UM;4fH3#]ieSFD:M.t"
%$sR/'r1Gr!3"@LV@!a,)Ij(OX3KRN*b1GO_;24tnoi?1J50X<i6_Enc1-WIb\UF,oi[]:RV[<-j=-A($/'6D7M*FHfe:ht=4X.`,
%oapkTbm\83JQigs\Q^DsB-)MgrCDM&Am!>ETTYQnB19\MMF3/mU8l""O#*2tJ`8N67I8YSXAYIXB_=qrc1'G">g%'&<lbU@qMq[-
%;i<U#g8i7I1CJmH^f?!>2s7R8/$ePR?IX@u<oj'Dn7ie=`u`\43%SrGeu;N`kkqA.@+M9sgS=Vb*8L2QlDAAm^9q='RuCE7#,$Tu
%@X$j@U>!u]_BC5&'%5e%e&W!J]9E(#2_u8sk]T:_1"j;]H^SEoiU;tlL7uAQU._+cjq0AZq`_n`cEGFMZ>Oo!n.$<3SZ$\]5PG0r
%Pmka&o5Zpa@O%A$>O*)&F=%Vb:kaKA;V>P\$P7?CP#O<VC;R)&.;.NWkcnirHA)$VUf63S\s_[g]4eB7O)c`lDTdK[%q0*YK:5!&
%]Es4%0/3e6OkP(d"'dMC\_e<!+h8n\j.Of,5Y@39afr-9+\[n*V@I)tl?2NEk.Ic3\1$sT(\53l>H6fj$dS99LX<M=>tKuL/a&74
%+@nnF_[4?3k7NSrhNt<dinCpt;mEf;HCDVZ[[ju4I[VPJDs@s?acJ@B$t%/c>00WoTh4=df[ZSMP^?oU:Ml%9k=-:U!?6Y*T/;D]
%$t%2dnQf3jOZ2qJ?=h4%Gb.+GIu7iqSP$t/\a91s^6BXQ(%3YkVJ"I&TC(-0-7E9]PnUfF>1T[V2eBTPJW?dr;lsT(fbmL?N>^Ho
%*He@rGNXsSH\O1BgU-Z`[$=afDuc(oqqVO2,GuiD0JL5W?f8jJY[5EB^20uq&W`&ONX8YC=`Z3nJd%=FcEPZdb\am>g=He4K?@o-
%@X[SKTUhDk#!`e<T9Nb_T?S$s0&#Kq$'ER/rN!euj`+VujCdD!HA:BD_aPFn]d_]N9h"WH:3-c!kblhWF:ab6Vt6E&N/;cU'7;G/
%H(qL?53'mimbM0la?YB8N!V#NCdIMWdhF::oLmSR/djE^0dFcb,g8VUSr35m:Aks;0pPE!@ZaBZ%S]6WORWo^5:2f8XpTK8RPcZ@
%XsCB$XQ1HYIc6d%>u>F,\dBO@2XFFd[j4!<8!.Fei3!&,='B1`ThN5J#g?/<,(oM^dI183rkK]9aQ]U:43e(pS$Y)e[uq/cj?ZB/
%2,W)K1$5\ka%^'7_5C0hbP_#;HrOOTj"aB+['=pGK9I!.=oOdWAb6*Q]80MS>=sA=(7^::Ti&8i[\j.iHMmtR3ZjD%+SFDhY">RF
%h3+Dh]s;TM_/W/("tProI"`A^+OMs9[jAYB.lA2?C@kbU<L#6%QD]jud$!)L$L>Tr(%T!jgU/AB-:c6dFo@,7f[M'\<I3.3rP@B;
%0::*bZ!L]kEIkY4Y->>V0jX'pD&jEiBmjhM>98Qh>3^*Y04fo]/:$0ODF3s^<9r#?Ons)[FbooH\Zoc=;Qs4/b5)mCri02<\t>G$
%Jm5>f6,(-=QdIseqKZ#H=1SYLf;VZPld_c$`sYV=;t+&X\nYun'7;7`GPf:HM3V4aG29gmE`mY.SPIJC'>1?^n3W`@AUCO^nt:t_
%9Tg[CrEKh!mh5LY_$gtgm1gO\;g(.ROGIm_UqDG<PrLBX12^*La/fH.AlZSoa&CYTY;cM%iV0e>dtE-QlRS-5o;4[g<QsDLKlJQq
%%iGgbMtJp-&E$IXBgPqu6LOK0Q<dH_c1&.-b:s*fN&a`3^00Qsa0%]5;o%FL:t%1!PFUeK>g07Li;@5O_[l\9e9h+rlu5L.njARg
%,s,9^OBLFl^dg<.U@&eIGCs@Ip7\E(bCJX1@Y^"caZd7j/1:FGYF<XiB5q*!as,%d<]Gph4,g*H996Q6eam1(qT0eIoQag9f,c^H
%Y;<Yq&MLQ'0d+0eKGHUnj]!/oJsX'U,%55U&1rHNc(5q';rTRNmb%*&RA>3?LI=+M1c5_.`.B^#^m!<tiFn%:?lYcWCXsDS"F=:G
%5P_N0)Fhp9Y`p#!C"ZP3+[8R9)7W.1&ITr*!M=1b%S+ERKPbNp"3)0I$^tOcqcS0`e?FF:/,$X[oj<u$pbu=1DpY1YVmt-De0UgW
%LKn0J3H\G7)2je656d0]U#,_Ns4B5>P:RZ#'&!@.IAE;q7S?G^?90SGBgL)[483&iRD)B1Y8?-cBq_8W9q&uXPDU3]Fk/&]@raB*
%+fI5@UfPTE/VBW?8nu/Z4cRHpM$&Z<>Vcl9M^-"CmA!.TMU79PQJ/:N'K`E+K4Q$a<G$i<>MlA-6?-^!4Kj;9>@0lh@naam)tpc`
%eZfO3jN2cY:Aol7UY\6UR7g."4mD1+-QNZ]%'d:@9PP3K1q:6C=u%I6C7SAH4_c:5:ohaHc=kS45PEBhqN78P>>*fLN_b`($jFRg
%FN\!8aR^I/);VDR4Qhnq@X@(PZSEABa68'6qcKR&2e8(L""4'7hi=Mi<dsOl?n3::No0e;T6p*Uo0"bi9Vt$bOqMu3dZ-d4T5E=$
%L2M4=TTPL^7u6C$\/30.+Rb=TG'TGQ;9Y-d:!^WD;%UcEhb;)Gh>&MG"RGrD%N2uQqIN5l%sa1as/YXN2a7!13Nlp8g6S)kaF+l$
%nAWH!<lGJ.T3;[5B?R_dJFnB/RLX$Qj6ALDaB?<G<O@Lul<Z'jc523ZPG0mQ3i;b_I[9Ws#;T=Q83K&:$U^\t$)e<M31ThA%6\UU
%j*%5::SrURNI.E(r^H.Y0Ad.Td#Xea6.Q&mq)!-s:8^kia2tUP##-^7]U=A-gA,b)7Rt98?K7FeV!:V^&S+b4P:S1E*B=#`EE]_!
%!]$m'p[\`m>;>T8Q1)E$N84@LZPB/?T9#@oL@ZQ[+nfc)U?mq3M':u@JJ0DbUEq>XRJ^qrV'<7-.l\P!rS%oKU;_m)P9Jt8Cn.;H
%T[p5bQLrIXR8iBi4*L'7,el;H%aAYW*nCkRl]UXXHkW.)[<+90X5,=@-3[i<.PYgf^UPM,jdq2'J_ko-T&XeIWQTOG_q/FEX@^lg
%0eits`aKY,9E5E@UVq_9NW>$1gf%8Wl60+F8IA&!.L%T:Wdo(8,rHQ5lJ8#qCH/gt8'j09S[7\Ch)k3g*)%P,?[:A*q-;n@H-c`S
%3;Vb?2:VMmNfrH+EZfT4l]sOBGQDrC"C^j&@c*JWP.'ja<^L[ToBfpY&:P,K%Cq.sai[br2+d-WSR[6Tls]d/%N]3dm%TcFQnT<#
%=d<FM9Bm))'GsBIP*CiI$pL:4j[n($#U6f:^6I8LG3.Mfebj9.0akjkA9T,pL(482BbOl$(6eFBLVN)C5D(Uc7r"Jo!k):+%Y<fM
%\:Ph<')f>HVPFJ/$/i+<lR8AVp^6B,/QKb]l@h*1=iI:=#%<e0Yt&`qd3o72#`(1"4O!OVR`-p'3Kg_7:Z(e^,D:g6N0JkG^;YY5
%;l^=\ZJS"qOV(Zb].5,&<+a-BHbi5?NCnfsIY=Eh_LRRJ:KdjbchMqOQ.Sb`%X.',V[V/2eKkJ0i"dU/Cp@cf%M5FXJRC;#Lm,7i
%'@N$`H*LA0o,g50IDQgW.B=72\u!_IX:`R#1+@mhAU'eIb<V3n6NNW&gJNn8T/Tjl?1aNjJ1j_8Q"H.B2t,4$/lk\-aQ,darMhoR
%+:$Cne5nrm,kbLV[IEQ@o)_/YP0LAk/pX6Igpg1KO^-oElE9TubaUto`nE892gmW.*k9dpEF<utl!8>FLVO\9812VU8V.-Y<R&DM
%'3V35DFU#gFWIYk"h]oCcMNLn:qhl@]BDTnAr%"S.`6]G/L83],R"PJIA<3O5eT'&JK<X6#%O#L5?*dk".^he2MHfc>p$5/4^3m,
%\#aOA2=9!W7q5Vm@udq2(,BUMAl:9lQ'mL&cU.nk.86*^(7?%6qq9mp%EWJ4V[1L;gsj>C,0B#FVCtn!cej!!Bq&hO?":I=nb)9(
%.;;LXP@WnjNu4sC<)T#,W%\DnCe=m_%KdF(0'J(://jarBrQJq..U!RK=)N)/s<_Hl<UCg2T\='HN5/;RO/c4r<S=M#\0M;-o4Cc
%r";-T99]-NIqDqC_'.8"MQ7?a\O?B<P42c,hlcd(\`AXI^VfUQ=*:cMGGMOa7*oM"c\`3P%$IU)c*Uf>G^rU1gbE@o=E"5?<?WIt
%M;Ep:V(M7-7la<=k6#$_UAk#*XOQ=PM_0"30cZLl*0.8qV=L?K\]bec/stWEi=/G=or56L#p%`MVR^k,gUTb1A!V3->J-uCQXA'e
%]_+_&BdDS&h@*R:(k4f+HgltMdb]gCVXn[@[6:#V*M2/-*00dQhS#Gf3ao`"4mf/ZZEk%df??0]/)u;/D<"c0[-FMqAto3^,CO6O
%hs.dDXJZm<E/aJ[C@Ri$gd>;:Ss^"U09(_3O%fOu(a-".@+M!kgLL'!aPZXTD0t@t6u]XJDAp0=HEW'A^3>#cnJa:i+W*7C/Aoil
%cHrEB-bH2^grXFO`;=-a>Z],hKAc60]*oto;l*PP+DoNLm:cJG"")6K8gk?)Qj->5bR>H`2IU%U%s2.;!tOl<@FG#Z0=',XX@gqW
%(Q`(sA_l>@fmT)=m#Rp=JAmcgi->X>"Z'hkB\0VR$&2.r_&tRh4mqLkrmgs#VR,_Ka1iO@pcJ28489JmmYITL[aWil-n@Ep\iUn5
%Q]14do(;3r&nO"D:,;,`m#'n8!6+2AVoNS7=iJZAX70p-o`B`edjkdXUc&WEkm*!WX'X*hOde(R_]IOHAZiD(6.Fh+re/70Y7hUO
%MkfmL#Va,/dN5%9d>;A"6H=0uG$5^ecVNu(KONp]2+9&KNF38+CLEgdeR0]r&W*irf].ESIqU8/1^,_r7?ilHC@YKWCP(14]EYlU
%7DdQ2*NR+pD/.e?,2\O"<3Ar7W8<e$%I@'Oe.nPXS,JX%!AehB?R^$XZ6e,\IbSeJ"MeM^fn+Q5J)([2ZRX#o-lAA=dQuRjDa7O;
%P>?&_[tZO+p=*9hT;&W2VreF"7TkT7!g`P]_'b-RqP3DY`!?W>=IHRu?NU,<cu-su>+jH>UC:Gj;<ssGT8&+28Gd*:-UA@1<TVZs
%jjbi[F^rsD99ZaTTqRj:ZI[R>F*ZU%lq&Z,oM_ijEL&6Znb?"n=^EnD=>,IM/AF(6FQ/9ggq1o:]#[/so[tEZ*:oZg<*:hn^r0nC
%,`_CD1q_'GLQpaZHQ=DMr-FO9;=K[Wd=<B[hUG-T(tq:Yd?$=+\6#[=QT.%.dN<q(\;WPk4PrpIfCe1L31:t0gF>e9UW<Tib1qN&
%d#B6)d#HbSd#GJ/6H9YLh>Bo7k\*rQr:s[^q'$Gi$f,`r&*D;;G019I]6?D(oVJlBopWa&-5$u<cs<';1lOs[`^lQ59YhF:3a=Mk
%!YEJ'.>=0=2'eAE%jZ*U`jYTfeY4Be3IR=%^&>NFmc^S",mCa]LN1&s=T&dU8K9Tkg=@fUIq^@;*Uj14$dHZr,7n9oAhUqcEKT1D
%Ui/bf?mMLmQiVD>Y<[H"pCWtHd\/-gK`Fn&_D"`k\jWS-9RCNo4+i[EZYeT/OgQWBI]0s>Qt4ptRYlB*]9<!j(AfPY:HX;WXi^l(
%VYM\R5GJZP/V."o<F#0J!+Hi5CR\Ks(\kZ*."IDEb4)o4!24A_Z;)%RS8RuQ*tlXp\<D;fP/*U\D/>BNn`raJ8&7Oo7g"JONj_\,
%Lot2eM#b\>-eM?HdOp%_(u1.X!5bgB-"0@Z^b(IY571f=)GeUFrWX(UDkJ_2UV%auUZrtMURdV@_6U3K.2+o;;PK33'VC*<?)@>!
%U%9d*Zp0Zp`tS3KfH@KBZY(%ooGQ![Nq??(Mmp>j$ulCX0!X=\57Vs]"P+rjObrU`SrWRMS*H:uZT`rP&A+3MhiE2ob&(beh,6^Y
%'tTa!%-At1m[k;7$_H+?Y.<Es+$TRA'fO^r2nJa9#)r\UGGRKQ5fY9HHL%&gd_Ja.I.-MM*V8RARF4V:Jc$L+B1hLA[NbT7b`qh;
%HI&#-IT5bmS9LCL5##3>dfkcEApB^#f#"?>OoE"r&h#mpJdG]^gp,I,+PpRIT4g'U8gp+2/&X1q6>j2B]f*eNDAgcu9\DOc*(r/>
%,F/*G3-t50m:S-*r@:_jDeYPRZE_aI?B&[Qj_XLFmd2t[<_a=3F<"pd7t(^:->#h.oo)JUDUDQO!LkU.5(VlT4bK#5,l#Z*T4!<1
%pB1LR0U1#L0HgpBjhP2ZYn'&-M7miCIL8K+"R3$7#.q_2`uhXkr2MF(d?J6aJO;]RE(lALMsHCsB^H<$/2"Ys_C7bj$^Q7Fh%-$3
%#)$(VVEU7I9qY-UItE6SaNKabq*?MSB/ClY[)ScZe8dpK\,F\`.j5TI-AjuA6<&j?Gfuh72[^64Dj"@ndE0$Z"'om%V,oG4;\r8O
%Y08VNVrK*][8jM"%1j'KLIRLdOE0^S^]l0oPs2^&OTYfB/tPTQ3JWHeUM:u2D0G5V/6V1&na'QOgscm+^ZBA>1b[e]BMEaf!n&=o
%RtW<D`rQ"!\;!L1A'!@_YFn6jDs@RhS+6B4lc7O4hO'3*K@]qK1_:HAR4\](5",ar/'h)@8:Z;FA%iamM#aX`qj3eh5gf!gh5g^i
%OtJT@Z,5'WAo_gK6''Z9".se.0j1Q*9>a2DWIsIN(*o?Z(F7C7Ktrn$?AFcm`!qK1rT)8jaqt0YijR,PWiW2g&TX`j-j,(?,_XL_
%pV(#5OG+Wn(3&W6q\SJ2i+<7A:bB-"GjB]M%EH=fKRs<?ID*<*2gE^AU(\LLl_;f2$78:>QV#D"-uYaiX[Tm[,J$P-Dm,m&=D1tR
%h@/E(cDfgsmuU9@1N!p+nC@A%fPu2-h#eEPhB[L_EIQ16j%\1*<!OD7UmAaZkagB\N:)7g^Vn/C8&%i5BhF`QeTb"_K,f3Jm???a
%A=S+"ff8Y=/9FVWY.c\u[ga3dgnRd[QhuOHba([=c&<$L@4p"T_ecdG3sl_7ccOH(4as9u<n$ZCqB'!BqUUaLf'>q8\pTokj3kep
%O+^2h4T?401UcoTg)#c-'3:("+'QRa"kc4HQGAUV55q>F+SLA?jHSTu6T+nga(t+<g\u$I#bUN:s#A<&T=/-uWQsaKE8]ASL%7\-
%(Ul"-]Mp:/SoI;PQj1(;+e?8L%92GS&],%.7D.q72hq#h"s0nY^'k/^^5bpE),Uc^jRb=T5UC3k^`KcJ!u>YbdQ"/("?NX35!CHR
%R'oRY<S0D&S5A[Rf/(G,3h"N-/6FndIL&&dn*$f9$e0#&kVJsgWHTZ4ne1B<=MiD)D>\u7'Tj98Dh&,.#?SF&68OQrAY=E^Ta*.l
%T&kWgUgL-*^Y#Z";<?6(\Wr-Z&Y(2-8cjPT)il$H,^D_T26ag:QW:^Um;j\a6Tq#+O[=Cd7VVs%*VBG3r>@;N7dW'\rKoW[/3-LS
%iXtWus09i&7W,V2DXrSELh.#1dEhKB%+!AdBX(JJZd-V;Fe%eAint#RK5+Fp0\_;dhf+d]dfc4So(UkbDflNo.cE!#QW)dp&Dht,
%-[[)S-^2L(_'`Uuo]__6KBE<MRlp*&\"@ZFs)_[Bh]1T@Y3Pm:5O8Y"0R!&e70Ep5h`/(c$^Z4TUbEDBKGBL3n]sp`n/d,q#ud\$
%OI]u)4;I%XJREliPLR=kg1P?T^Yb]JIad@a[uT&ng,`b4/95KuX6*A`G7F81!>^jU,lSrB&ViEO1e]qT;E/IB(o]4RX%tbsNZ'5b
%-d%5[:$LW/93?aBRu214M-V9e5jiO`Yt1n?0>efD!i/f-?LJ[d"Oi2%e$m"@ZNH=eE?NR0rpD#LM8>"3SWV6fDS\iGFFQIMHD*cM
%gM"!8UH6V-\ad`+n>?\m75.t!lIgk:)ot\ii8F@^n*T&:NW,/kXIoD>g[7jj<a`h/(\:jjA%b0l,GV$?a.g'+H/JJ^M0O(UrpVrI
%HMMg*bL!bqgtcNoQ_)mp03jr`/lus2jDWtc%&';<<Jn,gMVisnR<maN3r@tiA2@GmZP$YA"Ynrn/%:$GF\XkM?Q^BF=*'S0!khGi
%Xe1%,eBtDkb%R&hSU4Vs<p^d]*#u\*0NIkZ@a#X4C8s:np!)Jl3h^n?^$i!5ekX,Yf^,EsnFO*Un"1?`XU"Cgpj%X?HNff-\JQ`o
%;M<Mu+u6na!UR;pY,QaCr<VY\RJ&e?M?/mdA)XXuYjVV!'J!Lu2pIgGjeoc`i++oO8Ce7s\fYBUflEg^qM%fbZ+2,*W8?^B\[4+S
%*00Gm7c6=(>nec5`)k8aUI/d(D#1Q'cS3WS?AIiYSF7OeOo61iO;P"B8$[jTTq0;Wa_$Fqkh#BSVf(U,b_K3g]W:emXUm2cnN+FK
%%-[TrM4D-c83=SVK$#*o<c<DEQW#04:]5fi[6XY+XljoW+4Z6G`Gl>7gm_s*?Tfsa#)G"GRo4>q/2C\n[K-0Y,II,qQOHAhl5no@
%ZD&_CCJlem&t]s#I<R,!j:P]\*K8=;hMgW'K>UjN.][LPZs2AVAIJ"t$gQ^QIc7g[N4gQIH4:CV;pH]l-)$LK\q[I3i/uuJ\)[Sd
%X/Mq4Eb*l2*4-DV?Bhq[g>L#r]4jqN)nm0B;30Kc%rDc$A,S"/'<hsWC86ASk_^?%?BeuK"Y%M0'h'1;D%8bu)Z2B%X+,OQ)#`a[
%.f+A]o>%iXLgdI]>"dHpaD%LgEZ[(1\UqC4hM&Ap!_QhKIDi]dCc(S0JdBu:1R/ueO]8o@oqenYobkQmDs.ooo.6CF'rg@^=\qBh
%^k@&Z,ss9o`8=C,<eU&3bS/(8.6d&d*!_G4WJDL*D-:cT8#lO>fY82k:9;'5dL#HtJnH-<Y8(\)"=Z%`r;g89>[J#/GC%NIKLHk^
%nR61j7nZhD)8:J'1Duj\'cqlU[a'Sp$nJK8748A#(%4bV\"Zb!#7+5cTMW6/d*JK1\]"9p!b_?\nqP:Af_tNK_*\IE"\%=,LFoBq
%n1*:B1$!SU0&g3mDnCG)Tq_s8C?u1L>JA1P"_<9oKCP1bZ5Km*+_@BJ9_5t(P:sqHrdqQ8I^ok@n[t+:Req8ujLZ.8jJZ]+@L%9.
%27H$@1pnZ%>gR*hB/,hNj,bcO#/9^Yd#hIS%`e]\"X(JM+#$r;ZKUiU2<.(!O]S4p@C-eDNYn"\K]pINO4]O(qN8,"U^81>&DbmH
%:dn<[Z3450jC:9eH7W5g6-5DML)4iYMtBA%E$ZXDA-?"(7i*p2NA(5I2MiYc2T^BpcN%7,<^HR/KJ@@RKV8fjndl+(dN0T!I)FTg
%V?Zr,k`KE*"60NC/hbXmdYRrL5;`X^09D+ji7*TkDJT=u*HcMor=nL<8QYtTh@Au@#OIqCY*8SIb/`(ZaG1T<,kJqk5mRs2_-&[!
%<Y[n5kY0m1V<3AF/qfmk'oT/2[N;t9RA'e0[P0]g/294A1h,3.(06;u6F%+>nJ*)S[HQG*=^>/E8S=Jc:L8^PTJDQUNZfP2.9o[$
%2@G"`J:rS#\ZM%21\F\4WLVPI!7f`9;pn]Taak)"knn1o-_0:l%:L:)g#muB%LG5`#eGL,Gh9'j.KSiu(CSOjVK^A/3UCt:Q=OXD
%Jq?--MYdsR%thC[.I%@Sk&':_*`TTC.4SoDZ?VHRGA94,9,W-Hd+enfl1ZLH86o6GO_fjr-M@59X6f6K="\%K&m6$\gjgTQM_"$n
%FQ([pNf#u0IZP9LWW6UnYQCAo/$ooJDNqUF9:J>"kZWVX)8k*!f"%^r/A,q&h@kg'K:\n8.VJtLCkD4N(r+7E5(9jZTD%9&,70-H
%c.GNdLq("4XKW-BA&gDlQ.C%N"%[b-0A%/--j??)[fu,X$29,_\VDp!i*>77#=$k*1RCldP3!/YR`s5,G!`,n32O\/6mf8l=p,n;
%=Q^*ZjMWrjq2l0^?uSdLpbR*d.-\dOZ9-ikZ3eoA[n,^or!\uEG25aS"G8#X(7ZQ<Y*tD<(#PI]AK7LhoVNpS/3uFD*2jW5_FVP?
%A4dW$mo&E:W`EQ$"%<Y5"HBlmdMn'sG2/*)S)spa(huQs&*+">C@9l*-TM_D"d,UI3gT>kf*s,1qMdXKfuZj<c"^Z.G5*.\2M&ES
%fOUq!PeAJp!8!9JNEJ+Obfi.AdXs7b%@k4>(*/ZF=.("<keQVjB3e#(ls4TPGc/>HZY#f%RN+\$j:lPiS5Gtqn\->;_o'KsCfUfW
%5RGrn<K*@$'bHu;D9WQ!j!00jpH*@^&J4-4<L+7r6*ifZ5@@=/"GCWJW=kRS\VTPb^k;A5J;^4BjtGh4dUZG<h@3d_-<FLV-l"1q
%&TtL;M\.m/*.=dFiIf$)honPo2kb-l;E<<)Fc2jS&17NG/ifCt#5Sgb@'3*`7?J29gX:1>0"X[1._2,OAtD:i:%a3S?7PA-Pft[q
%?jqfCO2Bp\=0#m"JlIBq%^X+Z2#IJ\)8oD',*&Y7S.?)9q)]G4_.-Duc`?[kae$,*[1D`S`&4LSDqIhm]F]'!/(Bj2i)gtd@(Q,1
%k5*=1#8%Ft*dM^Bh"nregJSN3OPR&pW'b],56C<o\7`fXiVt]/5kl.YC!/2>CFdQu`SCMI>5c)<'t-&=?q@+\dm<qR3OfprP.g5;
%j-/nbBHK$W<5.K$B`U]+_7KeN'2j?hU%D&B#G$4hbgXj@j`#h5Zt/^VJRW))Sq@SoO`_X&99IK)X,0.pFs%+&*Z@9F,UOY*'tOhI
%q3:97-QhcURjbmYdFkQ_k(s'aka@<Pnt[3/Qc4Mk+1-B#jQ*9*54MSW`@a1dG6AIf<m;)n*>1kV*8%gT530/Wo<PTYqVjd2\C3@L
%1%Ep+]+;kge&..U1N"R/2W00KkSUADOM8K?I[65^@M8]7R*'ZuaaN-p-gNXaWU6/$L\@h'VZ]1koJ'S]jsoZj(5MZ)g#oTCd=%[,
%Pp<mc\Uj^#J$9iV39730>id_O"p`HB&`"5&AnJ$h8iA#_ZI!Kt`Z[Nc=N__]4.gY8I-q(k.N'ICXa.Gta7%D$%qF]fc+QYYnh`.j
%2G,$fr?:J3'9a"cQCC`&gAp')<l0NE;88Ngb9T:2YW;Q=_\ONX7XcugGpm1P00]MF)b[XMj@@.hqUAV;I?'r)KGhH8V]2>A8E]#W
%%/t`R)R<^_]*3li)Rc]_8b,#%EGN_hakkR'@):/e5M_D_*0*QLDIskIfAc.:ZjgZP'lHGGQk2YYT;E%GkUu3&I;?kD4$pOrqu,7c
%F\*_1WE&OqIB!'//2RQ3+Zq(SW#Uu-BkeaP)j0i8q[bZBUN^CqJFl#G^>6S=>h!cFX$J(DYj"^]XZcW)^FTfTei"c=S1qU&cX=as
%A^:d[JE1#BIUIFb>R41TP2t*s2*a(rp?de7PK6-p4l=da"S4XBj)aW_G1j+&M,2Pdk#rj\n*6k$n"qrN(Qt!0gbT-Lm'f'8L=6PU
%_LWSAis_-V'R@%*KEfMN146+M.kS,COQ.*U$dqFY&!JLibr@8V%ZpD05(0tG,Gr\gm&@3c_:4cjYVpt5p`am(0?pRb9++N8*%Wj_
%5*@#m[smP8Xo[X[.4\#C#PoT6DJ?DN$9Z-dQoqqH.M:D9WbPi6:IW&7\\38G,-ZJ@f==$u:uJ2_Td6gJEt]-&c<6O'#Yg%P<G7I]
%E.=PLp\8pdjX0_r?<'l6GTCc/riRkZd\'hj-7gu8Y@7bFrPJg<fSm)N`WGmVA-/$)ZpF#p;3PY!`lJA&B#$Sf2_1:JX6.#D:75.$
%c^9)uooKgPSqub\(FU@4&_il;ojc()\!?8n$nR37EJg>7)M&kIN%3:E1IrSmm4kXB1@Z@ARN0LCeS9'Wcc3-NblPASUr0Ms#K6IN
%T>'*`QLC.W&p`ht?]dJ1[<5p-6ciUMn1;oshtt^ZP*/G?#>PHpA3bC8*h`Fi\+3.e\O*SSHq/t(=2s>k,OGqtHhp"fSj(M4d7ib1
%8V6',#QpY=SIBg<-Po/3gp%0h_>)e+a@7HX$4!S]>0A;nZdD4FA.6C9"W?sB*QRB=G!/F3rp)O>IJmUJk%=+ABXgCa>Vn(npp_@#
%l.ttiS^qEtX:A>l<bSK7)NH(dJ@+8]!lWZM4sQNnH%n!McWJ&;_>m,U7RoTO3eOaH@AEu+4jbTe((P4UmOB)C*@t_)_Mag`i(^lK
%bN$9PS-Y2$l`pJ+1<qP_Yj@Z\23'R2,RE!B*'rrJhZ<P_7&Qh8K[0t4U%UNp3_!<nHFu,Up[W:PS**k5pIWXp6mtOj1pgQ.2I/2F
%4L/HNmBE?.6:rLc#K2rGEl)[4*8Y'-5/``sp,F@'LOEi'4Cj5Y7"@.c[c[OX,\u:ooTR3GZ+6Oh&^Dpq\F7%3nFX2WlkkUEb/A'o
%7Kh/<)4rV?_It-@%.N?J,2M9X@7QI[@[.?F>q!!DI92.1>PmZZ*V(f>H-o*oG%TM\2RrN5P)pBjn9\ln07[I#^'ca!7E.g3D=Ccq
%]ag.smfhSY'_HBn<'kTo"\!C*e;GaV)ahde=<_V+1'ONCqP$f+(4a^_k%][t"W?Y6N\Os302qoGS^@[%jcC]":#2"XC=B]=Hkm(K
%<k"fofF*@0$;]"?TnYh/V"n?db-<o)E7;H>'N#hT2gTd(I6gjo[r#j=>td7onCc]1C.NXMPbfL=s#;U6R]p=e=ikec^P/,mS?a;M
%7@JIWoIPn[ClnLPAG7&#:!"KE,Q`mcmVC`QWC=P_)`sLUQoTtZ5/89e^21jr?V!HjiPQTKdoIi]45*X9Z?TE<!V2T[PKtX,=1N3^
%SQpWUKQ52'Nk>uErN>;L&>0&"R&6\paYG#U?TsaA)1Pl)-sU[eoQWl4^OFZ/Lr0.Sm3bN][>.!;J,Ksb;#UY>BF^hV&FXj\T4&+"
%GRl\+e'D%k)6tA,o&!"S1aE2V,d79r%sePt+PJ8h+\'].JDuLu1`eUXML<00Pf<2LF:*HA`Z`a&q64;k,c)03FR2#>K/1Lu%8]#]
%%Q(>kJU3Zr%Nh%A@LS],Q_Da[EL-LM(EJ9aoB6;>p#!:7J*Uh??i#cA#5utkmpEj*)#3'aB(tOnN^_5Q2(q$+b$*4OkNUXd\et$\
%KOk-r22Oh]!j=$8$)SXZ=[`i\8fl4!dPkBVQO[][/r%[*`DO8X_e3LZP!R`RR&-`j'RJ!G6r?r2$TqMratud#%J36o1hdUjB5M+V
%GB$UA"*$,Wn(pn<l:Cl4e39iU1+iec5]F$e>uDjR:[d"^GX`lC)!(f5(QbE@$?EL-E>>(j]oiG_B&'G]O=9ag"\MW%+pcY%7,^AE
%jC>Ykpk_;#DK9jI9`qdUN_4[AU6$eq\/iV6Qha-!l^_Vdd@rhBrn6-PBD=:i*?923aa7A[4d;EU1qM,hKFYW8`Si7S=@*-X5%m!p
%R78Mj.\=6RJqT!X'P/I6^nC^V:*BI1&;2_eJ12Fdp7ie18<!I6SEhr>]L6*@+fM-9'<gc%WoFgGEX/52N`Fa,rs=,t]=`3,F;'qX
%i.sk.nH6GU$ijIrb1e(c"D&nR)F)0:IqM)?LYuJa=_m$+33(Icrp[N&-O9tJp`)"J)71Fe8r2b@*lUt8=9PlshoQlYgHEPb=f9_8
%K'-:e1n0,SYoocLQUc^[p<CAA*bfa>:#47+'GdK3kd.bQ;=rO'ki`k<!82Tk-2Q7h-2JmGc[DetjE!AIk`bH`>r1),EuCeUc&7[E
%_ITXe/W*8*4mmt<%AmsI%Gr_9^GG&0?d3YA*Fh6(dL%eWB1-#6T!o@(r4Ks1DC+H@H&6Om#q%G'JGl\qQD[`.WnhiJ6c*E9";E2G
%Y%EhZo?,np/r5.:$lK@jkjho:(ha)(T-i2i#Z$7aAdI;2i.a5S(GXl"nDIXeo+j%gL,B-U6U/]?Ar#k-hL1XM?VrY<)rrE-kr`#j
%XWI/0V5hY!f+>2BYh(=f#agY1NY`l3S9kj#U8"=EhYUQ4il$?BM"SnmdFP<,S-INU0o#Zg8&;qpNlH[\+EO<pH:e2aRD!QTK:HbW
%@U<i5@PAU</*8B*b(kp)+DN0M!$Ps,7X#FW&ACT9biMYS0s:]b^W,mNh@tX]0ONjRZU(+tU1=XlOtDm)VHt8!Si9%pBYED%O+2'"
%`T[@gdkhr\8OJ"d\"+Ll%`K:o.#bM`^@gJ@aAB=EhCr!(JNg$-)a<oG3I9Rmo$]U9f\G"U.Y-sc<VR)9dN!u(M)6$q%RVfN4i+QT
%3FI"j_+MJ'+h=<q@7mJRna7LWlO;,`DZA\MBs)D;P-h?lA>a#,f;0A5s",c=q\5$@^Hp01(R1.j#)ee`8ou2M:Jld!6X:nR\(3]!
%#!%E:/TDblg:9iL#Tp1lYeFr^]fo["obX"Q>F+WubT4u_a(:94&^eb0*"hPB0cqsJ[`jMXnA,"L>U-&ZV4ugS8lipM3)G=/Lcq@T
%jP-[cs*\RERDtXD]VGF)S!hN^9u4<ke>oAMdl';[&prX%;\mfQGg8+0kn*VDjHYg*C9c:9ef(XY54d!sM_fN[q,GfU7j2Y'm/SHF
%.W)6"hC&_D._&Z;iXciW"+$ni&Z.#"EOEG72U\?:@m7%/2ed1PN%L13M6i'n*?HdHUpQ=YM`b[9W,.U'k3Op]H9!\t^>QV>>Jf__
%+CmQD$>=l=3cl)Pj;3(jcq<f+V\u#+-$]6\8)@pa6(HHB(t8t*rh,f;@`@<`Eikh]/)au3s3N#;e0b/V<!.8Es13'l'/WG@5aqn8
%L#R,2p#>Y!YmLs45ondcOhXT:LG\a<QTLJ__IK1NB2Xf.>@si89oN4.79njiP7'qQ2Dai<h<f2_a2!qT;beH@3NdBc:#P&j:_Q;L
%rH8qmI*bj'_el]OG@\Coh4V1.apBk!2-qSZKW]$3'67ULTX&Q(')<Rb+hWm/WT9uLU9W"W8:`95]Yc-G"\0Q5bFlSM`IH17nD;V1
%YO7=MlMl.%B>iX!56(P7qu#K`hTgNFSp,8Pcgo`O[=.2BYFenhamPpbI9u;R*rC?+miM?i:#'h;[i(@>OL*qH@_FUhPCa&sdp3UC
%cYuuqI/-(EJmWh0Q%M>s!'<fB6S[%CT#e[o-$3?;f)%^sC#_&cX1$OQY/k)U[bD'&a]CC6/(.?8:8Y;+<RONnHGPSkYf;I<<(]JH
%OKu'QN#$u8_FFjOA'4ipr!MEf.D>m$*3blheKqD(nS[&8kV3s5%"6-L4/'Pk(!p?aLoA!J3Z+$R^kK"W1dPjpR9he"Tg!+RL4_<h
%2GF1GFqE^H>A`;>ek?/S8o0"ofm?2[U5R0Ar?"RAIZZq^`WZ/9"V^+[ecbjI"V^+[(JLK_&"#W^4+:3)gKupo4Dktho:A_C9'$WH
%o8ke3YHsp);12U%Zco&9+cT<L(F+sL!K(X8crk2poY=e<IN+PoS8eaQM$e:gZ@Ga(oF>V7"%bs\AGH%-BZHl&;n+S)+ma@p(OO4m
%`aEmb?@tOWZY/JrN8TPT#AK9IEI/o:8VD24H\o:tE:C(#jp]52n/=LU[nn`!Vs_NL<L=&7/ZT!o4GDO`#j#uUa^5=)2MRjWK\Xda
%]OR"rKJ]^linb&9</_0EF@d&*UMuq4'U5/`PHkRp`.*gt+=<%JM&W3Ve$M14P^n6qQPh3'Zhs`oV2gg/*-d1`9\5,9M\q6>52E,B
%[/n/ge750d0i^#>@iij-4H@da';7Cj"%Bge%2=]#nn\s)"g<^PjY;rRZUZ37+kL<R'W'2HimtEY&S7Z.UJ4@BGXWZt'DhW(r;!6s
%Ld.*pd?Jlap>fDSQf3D1kp>$1;Di8>a<6@/VHULf\HL\+"6^(.Vp(gKM:ME:;WqHshCUCMBa_0E]a8)!K/kJ4mi>8ib09(\HUi+l
%($$+,])/<'=`JVEpW";@l;HnDgj@qT8Li_`k=E6JNh=uG4:p8JV[mWKG;)2`O)OEE0G$<=`6qnF@VL!HEQh3440=>2$o'#=aUK4s
%J.(_r+K^P4^ftTCnk"c.]=h$/Gp=;cYJ1Rea'T(bk5is2RS'o[S4^+"+5beR%)aK2.a@,.5sOmUGkP7)Z\JdW%5dFkm%_UlZ7PP\
%G[2`khYR[pJM+hX+*nrdn%:j5cT@86ISqF4G9ZSTUe!W)8Uj>aYY0;(s$8N[j%_Bm5H>YC^J,,QVOf`QpWm8>o#bhZ8bG5.;FPON
%Goo7c8+K8jbt)bS)J/$&JLB-)&I4ctQqU']\g[sFcVo^*P'53H-$AT36dh!6N4.9YN`89_=&YU486DEV,N?_:Jh/sYFrEo6pnqdm
%.a2KB/4d`B/OkF:+=P9@4t:f<EBB:dO5PjcAufT-Jo].,$-"2<E5'WnW&YJDfa^KhaopGHMkD`:#um+K@rD!+PKE&2O?-:Y)!L;U
%3J!K&;iCBq%dRJaBTI-%3U*(7%Lj/gMhp1lN*PFNs*Ih%?a(naO%I[D*g7Xha/%m2O%GC.*g7X0I8'M+mQU0MT05%omT.YhX[!h4
%I>)c#aI7_.#3;H3E9IJO#h4Dn*MhVpK,is!r%ZD[>rrEICKPe<b["4&RXZ<!o+.)1P*C`iefWDOC=3hU_A)FuP-;f`2;"ic0aFXG
%VsM!1"Jg99D?.Ku%B`5T$@Lgj/flm%?msPd=af6&DWuN'k_"T)E&BHJp^CD?n':!H%[50jRX?)sRgh:F'lHMB$$se18T,&7=l@!k
%_X0,_gU8>H(*/@R*XCNP;tR0PQ6*#%Q`h93YfOr@)XTY@3P+o>CcV_kg_UlR*Jp!Di%F)uTdZ!mQM`>afH_,7[.%Jb0,hjs"s/<U
%<&O9-:V`'*6QUH8pV(q9-:dmXqodq8!/g!C7D#3!#9At)kM2ug6(#;&RLTJsO3+Burm64eq0CW^MU&DRb2Di(fdNjUeJ),b\_8'<
%Lo<E]3+"jcYgt7W+/7?FN)d*=^h?3S+7'=:3Ab<>In9#8dUMjW_.,o43PZ*(XaLcsUq_RQog&(6mbmW+p$"nC1&')N6I-24O:?h`
%*lGJ#.fSrOF0m\L],f??@<B(?L.X1V7m!0K<(8b.WBW053)44l#@IWi^9d?VBNk$H#5Tch698&;%h&rsE=N,(MEK@-C,toljUMS6
%Le5_`d"LX,621m<CV3;9!S<!3HH20#H](74*l3(!?J\pq^Za+!D'/>=GM:)E7Cr=DY)Zoj=$/DVGk?MYL=-5q59R)l6A+UOb/#h6
%-coW\lDP\XONJ*0%t0"YP(*_"qJ&4WGa_klM46V0^kn::1*F)?XCZeS&8/)PbAJ,[/H3O_E@3o8.Vk(oa9D]QVOa;Mp7_3D7Jq<b
%>VJ[_]0t_=;j\$=H2N,'Q2M?M6_!3F"*JE/4%:SIn5O\&FaRE[REP_ZVYqTmNR@OHL@V%<)*o6+kZi.`*.qg?ZE0QK#?sSM^@dkj
%=f1.[LG0.T"D3$pEqPMr#Tgse:J\gj4?\">XMS31K6%sHO"IlfYiL8!+P.]bqr'm>];)^dNlYSs+s06pV]aY>ZCsh''F&(b6:]C&
%?/5sC.3.S.YnA(A>Mg4=+,Del%I4![qRgNV"sTb*E4^Dk\,c*ehO@pZN]5g&"2Ek!Ac4C2qsNR,dBI5qgl:'4k:l"^]\sOVO*P]a
%T1><&4XIbomg/?7-hF``]sZtEI#>Us_Vec:%ECn%G^$fB[stsKfq/fK#&ZD9K<P0C_;hN]OC!8/R"pZ@jPC0Ubg27hT_3"mX7^f^
%3][fA8)BZjGmB*3gmsH7AhEOP0>c+c):un^)H/BHOsjA5PO2hM7.h#eB=E0L?poA5e+2meIN)=snn:es=LC)EkME=a9]]e[rJ7'@
%?t@r,A&Vat!CT"I,#q?57YZ#ldSZT^iBOQq9QS9pN33I-l;s#k.t8-$3^=&H*BC0RcH;5"SFQ/a;W4ii3aSj;3Jo;6So*X[hQB8T
%/*&L",j/;f)Gm,foX0:oXaM\%eN9t=LK1+SKXaB\KV3R:,.*5I6b\g/@.2%+)/2>Q.>;3gPq9bGbG;NIotD\^P%*]o+.7m\%nYRN
%NeBUNWf01@pfYK_3n%%1X*bn)-4<tS3Oqi?f:MIDnfb7FHW%iV.ZnTHdT$DGPi)geicZ$0-Yj<p$.;VejWZsZO@;;X>Xm,tOdrG;
%kU7tsbaRm@=Q8Yn(k]?Q-![%nl%ba=2Ar>#`+h_F#+?%DWPaM5?*g-;JVJ=Q<,:bX"8+/8k(KE;m7p3a:cRq(LZ!2%TeH^<Ws<=U
%qOBekr_U='d`id3c3#U8ZW=5#'$*tFYf9bmW>YJqn<<h'p:%i5JO[uMqhU94,)UFj1?uN+L<;,c<J/<s<NZIRCq:+$Wd9r5#]6c?
%cO#:;3UI`:i?d9ST`h^0M2/Af2/l>a8mM``g]I80?pXFVn>M$/n'OtI(HM;=<KPM/I[/E^]Y:0(0X61<AtVu`a;)S"7;\Z?4KPYf
%FoqI'M<`)X$r:+iR*-#bH]E0oDS$+&CNkk,KiC<s#LCVH2VVgT_tWZ3[?g=LMsS&L&]!L('7>K0b\sCt@;KYl]?lJK14bG[W[0:q
%bbO)?c\O9B*3u1De?oAK0]p%F[o-["=JhA/EEWf1:Hdp#k!V`Z*C!!]P`V#qoFS#<L)X:eeodFFbN/V&I8l<bM(M9!)!kTUr,5"f
%^k"[\j#^EI=(IfRW\,[@U`Q1\PSg^B3ES+Tg2fS4LXi>47h/>=a_6Pt0+sJN1&U'e<?60KBb":R%uJA/'Ftef1G$WCmLBVa*h_&H
%b,Xn/hNfjqU!X173SCS)_l?;f6ZETi7L)nJof7Xcr1OUiUmif^>G?RlHUB2#G>faf/S7aNao^WP<G=[n<7tSqdBnbdpGnKmTjCqk
%o;2WoDkOADCO;[32F"+JJ!DN<hM/j[]a.gV1/^j)#gfPqHS(\l>G13j5#=$84=>5>G#lk"/_"_b$UE-UDi6uDBKC-tG"o2:V#ZA`
%"+A+iM?$d`g]N/,[JLh=n"A:kUC^-"$9`:I0_dA-m1$8(;[,F\4ig>-=.@LSo])g%D'&6e>LM'YF>6E_h(eC:m6PXQ]%Y"RVOn].
%&I83QQ?9Mnh:ZMFi#C"r8=b`F/R@Z9MNjUk;b(:b.Zo_T?Pc04cidG_=gsug6pYM_,,W+7</Nkn'VtbQ$E1UI;dPU&]C$=hae>Jn
%*#cs&i#A#Q<DkU_'`0G;$CsXV;%.Ua"C8TnNd(]1A3fa$G'$p4N`m5h,sDl!iu$[J7h>IbR,j^5%qOl+_hb)aU<EX0arg#tZjI!U
%QbbpqNn`6$X(2J.o#C"[:biAPj67u4'1nC5]/=\`!I,mkMQ:0YEB-#D>o].)5_RfJk]&\E?[!_SVj\Pb%9s?5ef4BCiCFrjgFLUF
%90c#$#4@JfFqQJg6>T931#SuRl"S'D6EjIn7kuPm=.H%Z?/bam_"JkSSbZZ[11tQaqX,q>kusCF0U@lSq^p:WMVPGQ1TU0PCFKAk
%Dk.2kPi)<1O4pe/rQa.^M!!+r<r=luYP?s`qEA8#q<8S$2_P<(+!rtDJC*\;C`j"TUu?`a*j8-0fhXRt&;.$r4Pl=)=V+`^o=k&C
%3@6!@Geu0D;BhS=ML@iodPnI2,&o$[G*-n:3psNJ0sg=?=rQ8)ODOQ[O1VdWUm]su8]sV>rgSu#gpL#m:Pmt"EBR%f35r&A.[t$p
%AF8W%Zc_lS^g&V86]8kPj>jU'"L#mH``)%[P'ZsFg+Conb31YRS]IVCnITutZZ*@cOmgnoP]'TMJqm+8WpZpJJ%VU>mhG-t#G$6B
%h=k^YMSA3!q#><u%`sV_TAa6,_BEfnQfgQ'i`<RPOR*3YE/g4_JB_#*E'/;</IjJA<%i*LVn(41\n$6e+4s.500K\Da)qQL)KU=$
%a/T0dF$JT9%*,ULi0GM%a5_7U7=H5;H<W91_UeO1']Ed&*Ni);_JL4(H$irgj'ES2Gg*__fXoo1cb*tD(Kdm)3!Zq(mA@e2:cFqG
%+6gCs)@:oNq7*K^UZ'<=SN#hp<IM>Vs.JX#@'f9LgL9TTB+sdR2jg"N\n],pLs449Q$!i"^+5\X)L4-Mf[-#\(7[+EZ7qBDL&&UC
%KWWDcpFR6i!W?-0C*_5TImd?%f+X+].jT58[d%8mlLh?D)'pT6,k$m?O00;kIP3N)JNKC$6"#=.BMg2CT%#Li"m_!*6eOFX3/CX]
%Z`ZhHO,EY6G"FZRf6^qCfQPV.iK8-;i:\gl=#R]\DHJ1\oFI"F!^A[,.d0uL9^5M@;oam@0Rg`Mb/3r&%EUn[)g(4"6>dR4CI$tj
%rl+I(U'l%_7go_jig%5@2sHCU:QT2MTRCn1"RQ'?F!>(P9#4k=c?;,sGRKhe5ak`D_nI?3TR:XV8hi\,m*`.=RG)pA,Mc\EFOK:B
%!?ZPF5GY0*=MY^E3Gin1Ji.O2_<H9Rb-T>GZKX'8;X[@IC>B@C#O.s3B4r_Xe<`eA4`iNB>c-jVP1hU&CWH;Hau#4+'aU#lBYE.Q
%\]cM_NL:D5M<U]1a$JU$SSo6W_aIb6bI0P5'N>jM=HRFo%\IKn'l*4#/X=j\Bc,4@UTKb\]N$fS%N3;F4u_Q"*QS&7I#bZSerC=d
%%2fqBGj'/j7=_YgG.oD7bj@!:9="(iK%\9C[qXqFieW#laBuf-M"^PUp7_WjI&N$Z>n_8fWK,W;^:%'7%J+Thb9Pr`m1$cEA=;2>
%5=TI*rO+@O+\Qi"FL;fe#&m,jBMtda]Oc4ZEq`uB(O]3";Qit)>iq':I7bGq(`7$3MqH0a735a/kt;j>68A;kk^UT*@CSlQH=#S8
%6=!I!Z1>%,p;XT;d8"?fGp"()fok,J:0kmM:B$5-7_+q^`>HaXjXN"u#9Du;OaE^l%LMlGR)OSMl[Q]1jGY9+,2U3I\g3s:NDu!a
%h)@p\('uOb7d:)?,jPsW/fnZE)2>hBLMdNi4qr!a6tmEm0f*9U`e72)Zg.5rB4N6P-Bg7/f*CM[%Y;SJI`rtk)H_./pPR(/(Zi,c
%5HU*.91hmu-F22Pk7EorO[VYQYO"^4WHhp^AVsOh+tIgOoN^M&4N$,pGP+g$]jcrAjFrk/5Mal[#+/5HmM^.[)eC\TAu@Ao=BMt6
%du<*6n<`AV^uNXBE(luJb"gAa3OY/p'BaH)BT6r7"oMk!2G#mD5XC]Y'n-Y\d$h\\i;GRUFpRhqKfLd$gL<7BD"L9kTkA1'f'r:M
%N5L072A*L1b*08Pd"q^a,]*'YhPrbaL:nQBToG1c@kVcBNZiBm5O9OUCut0S4[b*R.n>J-;8UdgNqB]Cb-@3R8Y3WU<o+RK''N(p
%3CpJIB-+MPA!%2aE@VQ%>fm*@XW0cICsgnX;7l+U\<ita9IW1!Eb=&hVQCgYf.A^pjqo?5ko%,/d5:W8m,i.bBpuMPpboCKZ'ute
%CRKA6'u=0UcA6I!LN'2h%6qgXg'(+@N%6/)Ptc`uDO[G/j6W+Thj:_Q$'ndZR`Q3q;];bHgd>usEZr<VYO2c'p]0o$j%hTI%PTHA
%`ZgOD>DFflC1$EVQrOkpa'^;3eW4O3bilGU?.KPB1Y8C8ce$_07p21NMO#Lm"9_V>X7W?ki%/*VZ0k>j]\28'oKG/UFl?6#LU*mg
%q)1A;2!*h.<-V$dG(bjskFbkP2[.W-*kNa]@NHN_Smm:"[DS(8^61C>9Nt;[s3?^H#%!@m3=8+.`"C\3bLaIdK*&fE&Ge$92JThP
%-Jn[#1H+bUYPjbNDrPVrXQQKU*1'e@.ud:$3(uDo:&KN_*4=P.M'#_r*fNf52q^M8*h.DiVNjARgVctI-JgDiM'%LY?c".MBEjTX
%Z&'RI)Er?7#)@eXhSm)B?.DBeGB$G%-TM;(2Vs>>A^9%TT,i%q*SYg#m%37,F4Bkk+,=ZG%"@tc2D<,<clq>5U;,/ljRZYt8]t+u
%>:IKLlR;lF-(@N<`'p@ecj@E_liaXc9G#g?,U:?S/:1<sM18AgaD1FV.i0/oD.Xb/R5GFF#)G!t-D5tt9m<kNlT,n;]J#1H">EO6
%D%PqYRRZAU1JrP]hgcRcYfhY6e5+NQ5aV&T2,R9\QBAFb?L[8h@Qnh6LaTO>eLdE6%<-<F`ejt\!!c.d/0rq4DTY/r4c6>mrEMEt
%:ur&.XLXX<X(4:'em21J!n*!6brPk;>:%_f7DDlJlI&]ZMXV'sl6k@t7HmT%Zu*p"0Ao^Mi7^(pZQ%s$LrlYIC."!mp2m-@&+EO7
%@L3hlLYdQ`)rL,)GC"7GDe(uWa4*:Zm@`c[=*AFHfFc2\X&/^pH/i#b@Yho.Y"[Jl-2Pgok`HKf(hY5A/iV`"3XW@gn&QE1B^@S^
%e1+Gqe(\Z6I1X;44Y^mb"9.5Tn7IunWE8/2G]GI8Qe)mB_&KS7p_*$(++$`[<:h!5jm_R8K;!bn_GEJR*,;\U*^'tac$QFM20Pap
%\VomqqKI,(COb3Ll,R_@3s[M,%J<!/jn]J;e'9Y6rS=qu`9-O0ZZLX_?,cR%h$<\'DSa';V.ZZPqG>/o(Y#(UGXloZ&AS-4g@4X^
%)9JHSlDsV=Tnp\GZ/-R+#9/e@Mb&LX?9'A_UOejZ9dh'LqI,"p;u4KpBSh<D%pl!"rkqmeT@K^OB5q;OkjoV_ki9pqrK_W?qT?YL
%\;=j'([ul0je&#RJiudnedr-.H4ah"r$caIM/i/E^P_Hl%[#c(*b#B79:1u1q(c8B,Nm68:\&76Wg4pMhI$S0c*]cs]4Y+k,'f/X
%&33D]9lofpprd;AG2jFd1m*M^NfPjs&bUA%_;!tOh!rA"Q[E`H,aaqd]^IY"-5'Hh[E$"mFfAp@9pZf:VL._M1laD8a6Uh>&(t5%
%U=76DO<h(G(Ef7*n4nLAoL6i\)d^pV-UJtgDqOXUQ9@;$D9L>)U!mo`>pNQk.'s@'=`siLS(.`B%f;P^UCB,7EdTD9Y"LsX!:<Ag
%'YZ0k1"f<=9WOB"Ks@l>^4SbAiT4`P2'?haF`_K`\@guK*/4-Z6;*sHo>-=5P)opMHq&Vpnui';b&;,BkKn/#8YE<C3;PIRqQ3Eo
%9Nl"gL$j_L@0R!W#V5]UoNP&n0&7hKh_9<BRVP3^4UW!OppMT#f%e9`]H'&m2AGl6G>P)39&-YPV?(shY(QU\cM_\;&cV=P>aP=+
%K6N+(Z'j&)<O^DYM1nW3dD27BX#h<VJT1-DGk$h3*I$5ZNK-drm\B#`GQWtCpu,pOs86U21["Zj13l+&:#gA2XMaLKm>ZZ6E!DT:
%7ArY"oco18K\(G"[)Z5XfLKFF5(2!eCN8t:JeqF\RNL`E-OsY9NdR?lK5\T(Tf:V=I,;;Antl4"Y]bJRaF$gQmhb9DlPG>2kU>:l
%FVH/-htq[W;aC22gR(q[SFB?l]ck(5_l:!B7`hYB4&/9V1l@dslO;fZJe&D-7"IEAaUip3D58pRgLpXDlp]62,WZ2q*U\`YaFIF\
%Z\s'GGSn:lF;1,T<[tq[<k1NkGVmm!3-mC']BT+6="a6^Fp=8HE`Z5Yh/]FNDS_p#2-k6*3%q6aj5o40:#kT;'g7;>M.P5^&?M2W
%38ecFU;b;]iH&#7XKStJ/Y'QK7a;#f1AAuLZ!bAb3#b=AcT(>8\*j#?,)539G8*'AWV-==6V!966T9FC6oB"M^t2-bL'6?>oo0eN
%-M\_rF!Fdg$%,Fpmm"IMkc=4!5/(HrgoRECN^)sPA%IGqdeMoc`R,3u?"UG<U`_8#Lucua,*WTY-g7bZ9,_,36"\d./@72R".@,k
%`?Tsf$S**dl14u&*TglhDrcP3jVqn'n0fSaHcnUa+U&*f,8F1^]EUh6mPuiK4r6@f1k:-@<?Ml0c)[]/7:QoRL:8#r'9CJuf3`\Q
%[;Qp4;>i,`8Fra^QGRKSL<5.\#8BaZ2,2VUpC??$NYn9MCg71'Mtp\$9,V\X''/a<<5amnp%T;lAD!j`#!_:u_KucIjYU0,Xoo@L
%>NH\D5=`lA?.V]9)I.QV)DK2_Ae5V/NC7\CgC\MCYg6J;&>QWD`N%r2,d&f!IVX^3oT7:]Pe/CN0k)^mc(bt@5-&u@!sF:4mQ0$Q
%=p)4laU?EK2_4%\ejU/d'-YAG$tu0IJX=#=-O;iS*7h)9G#F3kG[5oK(M?/t&CDd17'8<DGa[lMVsC>i.5QRs5oZl"O#0stXap;'
%Ubo3$b=QQjFt)7^Q=XVAg@R7UrY%TNj[kQ:MJFM:?beRu5RNBuN]=^O9i)B9_k.\RLQl@]Sm3W[c_#OnE7!KECL%Y+$%mm"^?W3:
%330sGo*"*ArQp'kXXVZ8%JjZnb-4e\%"?L^Q/IbRg3L?B,%%k9$j_EWW?0N-_/Efs#)P#k8.Vq?(9oQMM`N>A\K6i*KmcYbG7e$;
%h7"g6Ll31q+I.OB,goR'7+k<2./91k]T3p8a/lU0#15lDCY&22@W79j'm3\+O1Pf"a10)PO_tK<*XPnQ$itd)?3?S(!t5Z<cAap0
%5CVISpscr5>HXV^k3]dQ#aD.d+^5iIahs.$7G9aZ&",o_U`N),*.+H'\)"Q[B['bIP*cRYVj2lFX#h?f-dt>cgIO<ah@ANP=)!b>
%a)O@N2JROC#CA[5G=t&K+`JDnqaC?(]Ad4M"&;F/2LkpV)nCl!Q/5qfR3RbO`o[.24AG;MN<I"bK#DpY2WS.:q]Ug5'V(uK^dRWS
%$#%HiQ<<kfKV<c<Om*!$id^6dkJ0@>6qPkkLeS%"c+n&A%(+]Y0G++sn<DGeSb&^=nd(e*n9HrH_/s["Z*1Es.&gP1,eib;r+?aN
%<Z"6V-7F]<R*$A%n096!Vo%l+gXi[Zs0qS$dca7PDG@baYOZXjgPTb%Cf_44?esM"cEit3nIRqh3U2U"bDplIK*7goMLEa38cBEo
%7*RFP\-oL@;EBiRb`3Se9p%qZXb4s3/j*VJ!AA&M'Ul$9)%,ArB*$X#E%U2X$je\*&f(]_"=/k2A)R`CX5\-`_l:^%:ae<u%%oQG
%H.Rb"f!hii.HP.Gc&>Nc"2p$'@)"46$(m?>=`4K1CYqEkmX?:X7pf'*)'E`0_WJOT&^EqEK"(f.M^^j$'^'Vd=8R^VoF3l,kQtj[
%J,1\dlBJYmhf:/4pV#uh`%fjh\S2#'p'<;4%"D-#2U]XW92.Se`.R+s`:gW"p/EUBNW>Y5B:rUn#kV+Ka2^nPF_#-5_p@&:8>TbW
%r#7Y?p/;r(6bM5@B*FG)Aj"5oUA&l=4<^6#nP_U\K'P0880c$;(],['NHhAH<IM;aghX,_pL@8o*"n'ti7?T-*8`N3_>R]4R&VA5
%W8cTnI2VL[rA=6XL8qVBJ->:X(^:*KiIHO%BR$C,]h0ue0uskAc.4tG4cTo$!(cLG94)G9.6e\:nBaa'FMVH*aO2H&LdW#q<u$`)
%R3VcYV5,ImUpFGEE'-ULY^f"_$cgkNb=_5,7M*cjG"SQ=`^7uWc=S,O'fjPnU`#j]]n&k4\ou&^&c'"0dOle5mJdV,DLg@TO<V)>
%W/5J+:400.n/GUk,ea]Fd3)])9#bI*HSR6M7Sk<'D,<oX""@kZs#4Y+Wq)sEjtkEfm-2^5%sp_NJ,;=djf]t'q:opTiRLAlZ2Ic0
%IEDE/1JQ/#7VW[\H@u;B-#R>o#EZ$(TO,DbJgIO+GJA^'["+i0pPT^f"Y^SA-J-!(F'kmMJOEc2=CfbmRJD@=("43S)LqV2<PSIi
%dAZfA[IjX*Ca[[3g:^s`U>6g&<s:lP-m29X'=&D$B>F6#fMfeNmMF5K9J_e,XJ^eUKYk`=mb`lV0UEE`RHS&f(O4S'+?*gUr[6)4
%rRt!aQ`RbU$'u:]=7GkZGG=\P]UWK6Mu<s#\.)UQE>@u'r``5G3&MATlYHE$e*eEk!Q\MA!6Wkd-Y;X]"IVi4d?$qM-FB!.0BBk%
%[5h2Z>=9,jD/F^fqTfY.W2;2JEk]Z9Y"qJs2(V!81q6_Q4/S[AMr_FDdPsWNoJ;IdojXc@OB)L/&A_DpPpY!"%gUTr=g$q4>rpo]
%KV+Aq0-^`2Ms[/+1Bbc6W479dKSUu;o@g/7(t&M:WPsD[.@0H8BYguTC;FqH9%rm!#Y7WDZ98rf]-^>Ae7G+Ok:udqOp(k$I?F9#
%YJZgE*<VY$]Oa[V86lGCA7(VK#7!*h!`Qm]gF#F#$\Y,U<c.%Gk5KZ4$Ri?b5\Dcm%Q^SMj<cno`X#HK_VC*eWRG4-?a-=p1f2)K
%K(G3M[s>k^P_7)$&3U/H(VLVV'LMAg0!r;,XY:b"[58F!)?68gjIdFH(+SR5jUd/YEcr'P3EVWq5GiIq-GpVG$8qV,cW'jU<SSEI
%,5;`Q&!p6TJQ'%GpDl8R1%$R?QlnE7G0&7TFUj]9\%;>b[d-q'MQ]7VlBX)'Aj:^S^%LH0'"b4`5?KZ:=Wo"Gk^gt\:Mck!\-CEk
%Q)-J0,%=K21pHGSfFN5>)WnLW/(t$-s!?I.*;gkoC3L+;*V*"FiGEPp72,BgYn$KU]Lr_=2ErYi1,:LAU\4R+p5WC3^#P.qd!,C2
%Cfg;a+4laV#BU`ITJ^f98aqLJ>CHBQjOQ[d-\C,cnr=5\r&5_#fOt0Jo;aOSpfDdQm&_6a?'SCJdKHt2pC>t>bXT+22(g&u`3*hR
%FDdd6q'#n1m3eBWnRr+2im'#TbCS;>5(\'SDo)g#?!bs^V_,*uJ4C/u_o,jPc\fo/@;\T?U)f%!(ne:c$hD#VFcJTP`o.eVOId9(
%CM:,.c`g^r]NKBD`>S%k^95d4s.UQDWssE1Kk]1.)4d,P@q+HI[<l'5f0OZ:NQdm;`B15d8Arn/B=nY>Fic-).^<T7/S:+#`JnOD
%e:!N/cSu)_E<``0j>5#^,-?rm_u=`*QO`"A9DPi%E9uf#n/fP<O]cK7j9u`Nc8./[C.e:(M9=42Br[M0?+Gn[n4aD;g\s;F@CKS]
%G7:Y]"5U1J+*n,V4#.8$Jd>%^.'/\eXJ]/qA*aqdUL=uE,KU830Xo&(d=_.5)@C,ue96.(hNoqkMEL=HiI/>`0^@G(,hhHrZ&6$.
%lNr5)@B?;*fhUGZo00[o^/2_kB*)p#&[Ju^DZmi`WqH1-2\=:W`pE?J]2[Ur&P-+l0)0V:c6'aYrH=F^gBqrS0?>SfftS,PMJ(h-
%Dr;_=q6GSO\E7^F^]'SK"tncGCW_&(=Sh!%akXGUSuW83bQ7Zl5_mVRPaEKfSV.XFW]7<FA]NrC+5a*h(-D[7V5WCD%cc(k(r&8d
%i\,&N"eu%qR\7Z?n/HA]qg_S<+7QY6<?)VpmqLCB?[ofPTC6->Qf>=.K1D%C-nqGq75DIiknffP/:]5f!\es?R(+Wqd100?1k$W*
%DhLe.HaZ?7O.TFslfU^%rD*XLG`C(?8MeH.VA]*FM*&C&LCm\MnFSbmfN]\g65ZR"Nd;r6p"k:YTA6TWJ+*b!`5qYO5?8)Gl\^em
%[qWtL!e6SuZ+k_QF7YX*msm-*$gO5>"t#Zg>g1,HJ;h%QX#LeHB*4.FZ[iTDl]hUo)DgVf8#K!`K,o$j_CZ4g6X<J07m)\HoJ.FV
%%#l(2Jbh?N*S97r\JrHTWl8Ll56%R1do(uM[ipk33;ST4O7>#l&CI!3]UAA8q`9Jm3c6n$Ib]V5NZAcj/9T5/g#4&&b.>hLa[bF;
%s.ZsX#YI3H%.m<_IR7l(k])XPSrJqe&&I:L@"/)+nT.2,mcTA'#n/o$V\nccC\[*fHGUEm(>nt5qt<N%bUbk3o0MA'p"naWI(*EW
%$V].fG5RihJ)c*+(VAgG%5;m/rn@dk-q5p1jO+YM!\9Z)l\^?-?JL)J%_/Wp`GEmH]8f@u^d,r:h^]"0B[&fUftfdYSVoE4Kc[^5
%F(ZY`'\XA,^;mVWI!<-h5rY:`j,6q"j-S9D%Jlq@`lJ&7U,[^\BV4J)^h>9<E**/QKIau)",_EOdC/%`J6:3-1D#/0=dBa_ac`C)
%ftbsC-1FM21i3g,[:YKZXDc^1H,G*8+TqC`2BXD/lidiYeI89nBHA<e6*%KSh:dd>,;T3S_R'S(9<*TkOPo'$&U4H[RRY=oDfW33
%BZK,6..k"iQQJ8G>a+CMI%%nZ0BPs["!i9K,Smju^Vj^$6+G,s'!EA#k_@Ts'aY_n`HCN>@J#Y.<2g7\jH,ng:V!IOiLlg;q4:!)
%XCXn#L7g"nZ]H:l'P?>'_GuD[a#aX3KmqmZ8E!0%2aD?Wr<Bb-+t<]`DbU;t6g#rCXG`_4kcljkMts5K4P(nfmCb_"9H$"6WaUGB
%f-"[FeMbS9qlsOtf@Us+WCUZta7tlPBObH&_ue5c)?pdJ4@&AOO;B!U6nK4+Ceh-SkFTH'P^ql5;?WWkI2+gjOpR!NA_diUh/a9Y
%_\kfgeBf[;":K#(h)bVppMYGp*oIN8)K?],+OUPRBJdj:a![hW6:21@m<M!t_%qN&&3driDD*V-=tQT+;<WU!grPLuQ(XANd*V9<
%C/kO#b=nMh%131V>)kQjTstLqm#*7_X?2:YctI\iD/>h#.T6oDY\C\:jgX@=1LbG=BY5l`N,$hcBTCXNFi)\Ja8_;H<&HZlk/gKe
%B]crCcpUkcqFrGR.D^'RX=ckHA78(kbOIA>oXr/K#%X!>V&S\/HqpX7`9S9=]ai9<N]_JuHbY.s7TjR/$ULJ]cNscSi?H!pTnIbL
%Pjik6Im(7g'WS[A@6h059JA`3ac<5H`q1C!2Fefa<IecOkti&aeq]XUFDG"rj$AmbU(84KfT^>c"OtdaD@L1E-P6P90-o)!,92Y@
%gsHZ_643n/kjUcsaAL;a&h;gMWkD7B#^8,,n]eP$Ka4&m#jF(Q/heA"nY\d]EX5:*fTV1jktB!Ki1IM)CZ2kIIb+-+<4c&C!Knit
%l#7G[Hs<W;bVCkgi)lC.KTpL&Zos;+[B's:@87JVRCP!,c9<aU3<(_"&9T5cJWqRE&80tT;3YjkBloB1FjhA$$CB.4&_b/pM#3[:
%HhMupL_^+cGHi'Olr>eWLXm<\*A/k-@/-GlT8)>,V"Jb`Etg,`<F=(_16UlC%5!X><eWVW8j'XeK>Qi,Q6-E!$[)N5+/Yie]q`(;
%NKsh!7e\p<3XqbqS#i*irY\0%29KZ,8Y.:>dNd:m,3Vt,pp^O+Ie/Lh_V&"4Q)":g"31d(m0>J!V.BN_l=e6T];HmT5DNQekqY,;
%pn8`+6ZE4VHJ'4O+]o\U1MV?C3^STT,P+hIOXeY%S<6clp`nLKc[X"cYEF&D);YkA$L8o)Js-<5SBul?l:he2<kp:(^40@`I4ARL
%=>4gsFrKAkF\-s/gX9!C8JM'3_Zk_FJO-HsC`bcU1o3iboLMgU)p+8K\E4k:f6RSR_AACe#7eF$IMQ!D/6tX=L;@@4<j.#@Z2UL2
%LV,JtJ+^S3T\h+2?G*(2p.FV%O;-KU]ep:n6uTW2.+,Xd4s.]&Q!?iGj`VWYIjLf.5L(<Q9BeB8HgW<WUOno5SQVF?ADea[\b!Cm
%8HV9M-8?ZPdL:P=E-FL+3m^03LV!Z%Ad:.gR\Lh=B[*?iig9ue;#k$N%!kUrA*ENf,j??*9ulEllSg:2coaIKNb3WXUN>%lq1/q;
%a!T3^k]rMA-$uufp78W.#7!I8c2o](7q`rX78\e-G$AZ7<R[Eq:9['G=Vqj<JSpY0@!qAfI\RC.k(.^*>OBCh^4ckok]&[>cS$T@
%GuMD*L<f(^I=+F?Zm#U[n&NeZ"u=J=<[!Voqa\50.&F!0]'?eNN"(2)m6!SI;m/F:cI-MqE,Q_eS"O$hi%H>Hj+k4Z20,h@6f#3D
%CZi/kA@VYiSTR6d"6%Hon.kNri:1\Ej6ZE0aR2jQ^ATcm_@A]bYVREY`l/50GPlYiKDnshjFTbK`VZ:2/&T#=S&/+XVec=%:Xrd6
%>@LaET?<Z#e$B!lj/:f6mJm.rs6W&KrQ@G'fDjW=M>ob86QX^<AK(R8J,&p@o_j:::VDeg(I.rnD]\rHhuBl@^&R8Fq1o"H.fX*2
%mG#DOGQ7I\rpRW%O8nY*\,Y+8rI=aSs6ojBs2WN?F/[I.eHkD2+-W;f1Tq5<FNR!,RuNqIa:BGf\>_7!*9fm&V6dRX\"@ms`r&5Q
%SA<02!p=g^lB`5rm5sAM;ColS[RpUT)+EcC]#Yn`nKL7>1mG`(+6s@]ZU%^Y-k6_SN5Ze0@S]/8-Lj@X7Rs)[rV9?Nr@;#tDu0##
%Z$q(:?BDB&.5>i9-_2%bAimqsab[Vog5Xd\BciPKjO?)E=B%st"/=*k[Li_C#b&[fP*SE;8.f#\bgfg*]Q=B,b^;YlaegmeK*dd$
%^8"lmCbV"bD]nBW)dIAN%&G=-BK_*P0M-^i)\sCu(1FG\&[/q\dA.c'XrHKgn(fD0IHPo,\mD#kK:8L[G[VJ^hqd)%q@N1^4K?j5
%r6Hn85PLH(CX9p@,9,pb\^;I\i:M>OHc9S$[$&3VMQkkfPMe5-^WV)%^iM:_k9*UCb*TFY@:$pH_ba31@&1i2bg8UpRckr=lk<F!
%9M`%l,cYI$m5(p,2dn5t"FGR;<gBZ'Rs",Kj-Q0f63lEu_<dY4g@c97p+e:95#Np%r#p;BN2^<JB`]7i[jgXm-t.4He.aTPeDopn
%I:Eb)H?OF02CID9YJX)SWuqMk_*>3:nM!gWk]YpH&lT*NEV!o*#3t#9rJ$f0$YXWD+jQJA?]Mfn1@"B'8P$bGhbMRqcS+kqRG<4_
%i?7=8j`"?]4>V3e%/irN]'>pbJ;d))ABfD1*D`r&9ua=.M^UV"M'&Z__%*I20rkH`3D)lCRUJ)4<gAoUmg\pA1f6EQqao3bE*(jh
%o7^JW=.r-p'b@cb^VGW/1U'/>+&q*M_6TCE"b9/2]WM:<(\HL$%Ao6B'$,(>BNcN)ajO^%>+Z?Q`s,ItYoWKupHN_*edG`Iq:Q.$
%hNofoo7I50Gc!jlgT[h+`ho'n82_#),.uk;j6?.@76L$3eiIg<gmG(ngFbW`?jGF]>lm5bP4^bV$*If0RWF3:AQu:tW56h+Eb+NO
%:N+Ch1#Srf7Zqg;N1kc]6&JI,6uRg`A_[!_X/<t-q?jD]A7dr"+6YpX1W<*8jK;b]r;p?K%^h2gPrI/JCQQkcl73M^0_*9l?8X>#
%eCU1q?'[are]OjlZI%rsVO>F4D<?j><JnE[7a4*6Q_J>#HSO5H/5\BW8YuB'"N$;M&k!QRhr$/,@M2crjEY+@f=HdYa=,)^WUQuL
%QW(^%a]`=ZkYC9Kg_B/A#1Ps#ZrF:oFp-1;b7=[t$&h[&Yc5t2#sK0mF4u;gBDha/@EJ("YBf[pn30"QE1l0aN0W7aD7-5bq,!tL
%KgbR^k\3'`9@D:7:(bLa]DW%"(]?JDf2J=3Ah<]EY%;.:5t/eHQ!h%npRu:.Q!!mZBKDI`R?O!MA7lP;Tdii,q`q'.MqaWAV09,b
%-;fPqTM3H%#c\u19OV!+4\*bc((jU\g-&L-%iN.O:"cZt2GIJ2%nIZ5Wk)CISV!WXZRg&s!0\q81?hW4?YBT)W)&OAqPNJ#/PprT
%ODs:Qe$L.YK?6hkS).@@##"N[V"pH-D<)OT=I/!EZ-M9+.@XoJH36@2Ygm_2Vc)5N]qW>7MOQ/Hbb?k=Js0J./+tP@^O$@67@;FM
%gNhQ&J4[G'JhN[U`sn.,lmp[5<5NOpcgY7D\>A+CVF-!$8f>@[M`d)7):.'#?,W"sN$gK/0"e4,QZUF"84%"3lun*UiQDRRhO!V5
%P;JJujfc7E`&DMt&@O&OC5i/MDnQr\kc%[f/t'5bg^$t`gQ.^SFhkGGMl="s[[&M+_bD`U\A4H:_`F)Gn5D9>q0&e2C"c++\Xbe"
%rKc5@1O:M&Ws!!^MbS]O/R[C19jGN:eqYATi2t2dSkf6s.G?:XKS\qn.G4=YdE^d+-IXDgY'"#-[GD5(PjQ*]@Ela5/31=[hK$.X
%4QK6bBANr$<FL+qchk#]egu*n7QDeeP2q'E#GH?uI@Xc#$&J9^NO^K"S8:a73%n096c;S:QQ6sQ.`GoKJk<;K?^0TMCnFcK!06Pq
%g[Jpo5-=Jm8[WimT&D0]n<:`!'^^[7L9SXCRT0W4WVJ@o/:A[cqFSj_Whj>&>5%'F!DUQRW.!R)o$h1$TS"]OEC?a>)6-9REsXJ]
%eQ$SfZcV/2IX13AITL\PUbhfiahEoYXVSu/DaE;+)eW#l$c'A?Yr_bYe;\%TnSb\Ma15`Qgd@A@J%o(0jhnDa/J2P+Af<1i`0VK6
%</.6i>J]TMYXAA"%o)o50D]Gp)?8<VgY.IM>2:$WhJY^g*P?DBNI8Q8?!<@E[7uIC5dt@ONfto3).If+q9M`45)2KLS3EC1L*0sA
%(`M>SlKN7E`(_oqcf-ft%6t!.XjE\ffFeXgj`O\J%&UCJX6,Kc-&`7;US`hN'B=U=[R>nGiASP22PU:_%&3u#Z,ceo4C`-Y^U+aQ
%hLbU-au9/:/FGI\:odOMkY:?*d.]m[0Ct\p/@(4'bEj<'a0SV2IY*&cS$>PN%6b*cJ<)ll9cp.,V?AQCQ%lXgBSr@-YHU^XVM`t5
%nFs:d;8ag+@IQiW%+mW,'oarY):]9t)EUitjKFk8:D+s2i8L7sA$j1*74bSZLZcVg@"e5N,?RCu`D0'Ce6\$'eqV!r%`g+U_8EBn
%<"u%91`W+=5_,u?US9Ii@DWJ#glL`&#!_Zh^':M76D@=q+HFYlV3@KmFOHA5#'G[QgJfLW$!S>'?=kdWP;'DiWoP5/&l,B*j]Z:R
%kh7,*k=bcpc.K.pmX<-R7sB[h@Q:r100J<@&&aFpef14PaWWCPn_mUg%(p(l_!uh(;26)G8Z@9)rq:8#dVgX#pd22"O#P,JI]Ul/
%GeX!FQZFM&+#6EE4&BW],E'mVD%/kA]3!A#b.8fcFF)^Mj(4<r`uhq+bPio%aRl?Bi:eXUA#O=CA+&d_P\5U@I7Au#?R>ZV,c6>Z
%8&,((GfUhrqtlo80bA3FbB;m[Mc0?0@r&,S#+\PlL5*$GgFPU95[dBB1llYL)EQq1@*C*(_dR\k(2;q>6]jr;)E8a9rEDKZHMIX\
%X!OR5S^rLg;;26'#%8KHIAhlA2s>6Cd^LUQ^PKnCd/s?BFkN,M"ZPYc:S8irJ=1eR3<Q2.Vh*mhfQDfnQQP'X5t(*f3=DUWi!us\
%bR%0i-ADf3W6e*O'qGi)rq/6&=qq(+f"Cm*L"3;mGKn;)hHrb?rf#Nfd"K_89LH_nOJEHb2F1468#4(bElYtPPJY]['_k@N2l9K8
%=i_>J%[I%\L`b%(6]B-KEBc?VdQC@lei6<KkJKtCoXGpRpCEEoS-=]11O0MsL[0*)p,]pE:[D8r)QhP-Q8FeWY]5pF\%Q/(OgfAW
%_Yl`<^_P18\F7pY]Z/oGZ96^6Btft%"<QSW$YC^cKt1(?^d1Hj`_Z$%.g#AT.ZG^-,[;&d(gL(V\<<#DN$\/bcL`t6>c&`ZS)hjt
%p@7RAq&BkkOd3+4D:O$:E:Z3U!c]3.F+P=qrCodREWS644G7k#*!j3-3^eQRGlb0gb:Z@jpan!>2jX8_YU'Q>#P!OR_UrD\/DQ[>
%G*(!(_#j>7I5_BA1BVgJ8l\P%Mrq+`YjE`ZLgUPuUfg8]76:^Gc]n!rCJt@ug_sNlCb!&;DVJq*[_%n1@8O8AO&SIOJWdAH0GBAd
%HL&K+oZa#E(T8Q9bprg!X\aegF';g7O:$hngf[QR"Gd2"=hf*D:DS<]p>VC<i["36)RZ[+djg!S9&A3q\+=9t"'l$tQqAF^HQ(/g
%Q]N3/=j*^]HFFJQ6ZY^h^hhof^p0k=L-jS^Tp!KQ/'ct9O]!YbA#6ls,POYR_0\D`d!K1d7Y3"i!Qo'Q^@Os5VABJ!oZgA>lg<sM
%"9rfQ&p^q<[9X"C;S#,t)0Wqi>EB/*8WLI9.`_>q+L=7?N1#p\M\=jok9ec9A3H=p6JaI[:TJ%L8V3W99p=rm7YK),/<2@Z9E`-I
%W/F9S8=uCGkq3dQ-66Xf,11j>SPbINl6tqu+E%ni/r<d,p6p7-+9BSrg2E<?dMQk,W6@dbnU>W4G@fp]+]2`dR`h27)`nR8ld.Vq
%]<CiZ3T*84Md3%kk,'CiK8?O>@JG[1doA=O9`2J^f<,237qh(6`Hs"?7[IEQ+UBkl#Xjqd^P<R;@;1l+L&/O2bW2>&)jA'tDbG^;
%b`j2!8WnX"'GHs&_Q0gMf>aC6`q!>7\>>Yfl^afUX3WLjg0Y5UZtD1oQa+]W7/Q-j"2bg"bSQ2]%&Wu>n=bTt2Wn!AAgD8/@k*W%
%F&UO(Wg2ac]^)rL[,8#@?-rBCp6_)OVQ3:oFGWKr<]hi\b7R\jK+'Xa!u?XmMJsC(6Tl1o9"VH0^,6UMV<,PIMd$uh>V,QN<.CCu
%Tsd+7%r+h&$H[aM788Fi:^<4&Ua1BqT(AdMr2Mt;Y+"8[l$C>!#lIr%rXVTq0'[B,I(rp,`RNdRq1l#^=KFS^=^rZ>1;d`nLH#L[
%eDFkAY=Lc@-k>[41)R+%s4++\&;`en6L3&8H)%.)-N*H90-sJFrErZ@Eob3*3QN$I93r)u=Sbp@;5.=X$<%a7nWNBr--#d\fti=O
%D*ZQT4.>Ql,/l:[\bRg`<SGX"k<@c!U>%MfD]s$'XV?^YTYip;`YiLZ6lsg&2iHC]c2A-uD`A6IHZAL\:0X9n?N-Pidp:X0#Nomb
%)mGTI6G9ht/2CCOdk<LSI`@L61qdgM>pS!"$j&E.qKTFCc33R/X\R29#0iK(6g$rds#^^Of+KcQd,XMuHt25UHM+_[neWK0g^#hJ
%hE\bU_`-I75FhKXRY).[SLg(8k\k+tdd<7S;?cK![g_8EZOEueAr]/rGd:V0&r*C6.iOMXkiHtEJ!0mHk!UM[M&&d;-PL*HNI%(u
%Yjr#[0C]&Jq26rkrIc!?l9A=GBo<A?YkbTmnGMW:8f79B;,b9iapRXNK\V.sZrFDJg;jE7VN5*r)T*WjF)_0ErYO&:pR:,LNB[7\
%HcmH-M-"mh;)?tklUd<USmU:o%b=9BF`2POF[(_g)`f@7FVK#<E\`1)FL]f[29;k.B:2bE[Xi`*_;shq"`.'UL7\$i_qnCsB8jpV
%R(cu>mGB[#g;tIPE&<']@^t"rMQ=_DH!(7e@5M\Z:[[GbYtLd#\eR:Y%"m^jpJJd]EfQS4(7.LpLP@Z?;!Vl#P5:!QfiIHZ5GgY%
%P^]&&RdhRo8-q/!XQh[Zl[)q?gp&&3lGS]_@^\0PD.&Lp87=""-9+unb+/`[Wc./0:P-i?bERMp3kVX13HNl:CN.&U2d-:@0sti6
%4eBE+Ls]@jj*h]$bY.1Cm=I9iXk_$r[e<om(O:@BXlW>UfsjuP"ph!*7!8T(He.,=71&oiG#i&T"=1(m>1P?XrEa0HA5FjSCX>q5
%0(Z#adEPJ)6O0Fc1lIQjM"RcgC%q15Q.3CMC:^65>5HTB9M&CQlJB(amW%qG'`e(Zf$l\&(P-gY.GZPYR7=7o6k5O?RX$sa`\?gd
%kQ5&N+<:5o&L<D4c$-0=QT/A^1`@"Ip_4Y'Ar/mtn=@7Q&iY8&8_b_=8DImoO>q1D,]F0/Tn-lJ*"C[R<JF-dSQ=tc5>,6N*b:l2
%-].0cEG$7cOLT.m,ihh`!Z#?b^dI<TO[J>%m8<(:>:6+SLtutJV':"<Wc.laYOd,RM783,\'YG%kpSXTL@!a.SfmmX=d45,@4i4M
%#sILTbYoELU_mSec!R>UMGP<G)JT;/jM-qrb`j$/adWMJ\/f'`Hg#3A'<%G8bh:j%h(3dB;sTTugOd=&hfl/NLlisC)D,fA(9>3W
%'\Nt@Jq/Pej+@r"0J]sNi1RSNE(\Qf,>'YQd6,X']<GA0]up5.c>)T?'raNM-Q$8/Vcd<"<<f<`2<17DaQ_BdDm@C;PV#,L??&Xo
%D.lY_4LJHdI/o3(Pg_!$_S'"3!u]R8Q&)'[L7absXJ76tH9hP9N:sYR/Y`]$??6fGa@^#gga%DH3,;YE$"QdiHL24Lj=8qV5!DPG
%cMBFW8`9C:,_;`K+b?Bh6Nfn`-P8aJZ)U1ljgc&kW>'%_5R@j:a&rCN<j%Ui,RWIq`O$]jY[`Zjjro3VMW-QkQbH>ROM4S7OM9,f
%8bugtf7T:o+*oA5a)R!__XO^+I+Qa@'dVM*aH,A<HWFqo=ln<m$T\%lBELd$.dY,YhB[h8Jd%KCn<+lK]K-,['@+\;pd7hII"P.9
%bF;Y,^g2cPb.@&^5$R,,1];2?,IRs892#P2PY_&"$b-AdD+rR:DhS^orO<1Rm->VHqa#j(!RJAUT0JuY'ILNdbtMhZW>!#?pQCP^
%FluG4Uk_3aNjgg@okRcor?,]Eqd@,#9PH_kG8ec=9PL+GXdePV7p[u6b\q:Ue*T\U?<7GtSef-FY(,lllR*6^Z+*Rd)GqfFbh!S=
%)&FI*g9P$(iX`MWk>S6o*^u*c)ShJ-r=0f1HJ\?O)!q6e.$D'Hb;Iu*kBX8N2!o<AGt%INS.[?MM,u`uZ_\n]"+(]fUml\MUgCND
%/>.O<'ht=9F.8c;8i.0.B=UgB_=2f'!#c\HBlo^R#I\Y\YJf(K+,7_j2deiR,"[CYee3Vk@.E9<fiNXQ([Ym.Zamjp+DWq`aR7#i
%a&'-dLNsXO?Us(>+H?Uu^XqlY:.,3$X+"!>b(1nd-)a&E5Zd#X8`KZ@Q&md?&j0?-csph$U!MKmk_>?6M@L:gT,8_$7=Mm\;8Se+
%$&UZ5Y0?*??CQKu\F.cqRIR6aW&[rA(r4U?PFC2TfqAV+L]0Xc8fL;]G'78GPM/VN>eET/JjU>MUlCn^7++pi&Xt\joeMgaoUpI&
%Y'=i!#c-AK2[#Qcn9_O>4:;1(&qJ6D'^T=[rCC22,FU>tm@.2(+g<ou"3Aa^rP\BhC)V$77>!nlrFm1+$]Rgr"%St-K]89[-tsql
%6,GA6$a`<P<eUFp9js].pS)QV!F885)X:F5CEPFD2o_L\Cq"uA]?ZeFe\7m=U:euAoa2'>c.i\iBWjb\8O'CGb%Tdh_m"T1B6IjF
%!.SumB+@qmeFs5/dgqZD_."%okMgjGYC=R0NAq;*p<`aGoNuPnKKZ7L>@tP@4f3sD@4Xa]!T1WJ?AKO_BR8&4%YAh#klM$P,Q5e2
%jscNR:l*[H?H!N4-1SHGd31'JXpK"NnT!_kEVjt$VYqAk$@hhcI3Ise][#pG$QO)J^54g6kCE(Llr9te%SotqhfSM9C`#Y95gNfs
%j-?Cs-aY_,9Cci1WM;`h^"i>'DAt?+^VFZUqD8u!-@&\M)6_eLN&'hKWJJar6O%/G,*-?U"h67Ql&oI5g[lM?MV[IVB)3Q5ds.qX
%Guss*/h29ba>rR/V(Z,gbe.q0@DGB"VF[<Y$aU`*q1%c>8"0f8`nCs*iRWTsTe/oFaEo$/;0NTK^d<'6nGJuKs5r?!pX*i-2K4=F
%pQg:KB@K^]Yg-52F?)="m&i\N,5d@'QNphH'G\qRUd.TU>iCc>?EFF3o#_5HL[$)?Fd*h4q]5j#em2X;!XrGVVSnFl"Z^W")J>_+
%2.p<Xf_,?(2$muedo6Ahen?-I'h(gN,c*!W*I(>XpXJLHj)H*akqNsT*#LmC*l*!l<M'H[pA\3</j4A.73(20nJu5*%FVqqh<p&b
%E-)me7tLnk'FdDpRcL1GJb\rgmpFo<p=RIrGq<'W<--c2='+#N0b;Y.#aM2\[:**c_DQF__WTNfI"a)8b)FRJ+Q`@i$?oQb_"e[g
%W1kicTEQTHc<HI!;72g#2ohmQ(H^b2Y#7[7-<hu,$6`HL*Xb^5]V3md1Edk'R\e]'_q7T+GbRWar$?pA!bujg#cmlEJC-2'j^IiL
%n<'hGcFnsW4?L4U\=M?RhJ2q/QQB6M@A0!EeE&PU7Tascg\=VjXF:#V]],mo,)QM.6Yc2oe(JWSrJDnj%gVat,epMnrK?>oW!-CO
%]M9f,..?*BH+spZ-aU=p6QtAgk[VVXO^=]jah<CW9uf^%(pPY'*?mp)fD)Ka)MAHVe8f<'+Mmf3hGtt/G;E,RM"1P([Ap,XD_+;"
%"?-rpAS3/XDB;-`@H9[5?gNl_LElOb>Pl/'^luL]iLWKYgM\>u*$_S+C5:)WVS\j<Z)8i!S,=n1+6!N&C')SuTrTA+Vj:OW.Lpmp
%LTZ<*NC-42*+?+4o]XK3XIusZFlH:3HNcD59"MFL:9!o6<ULtGTW#HnFYh5iVK)0.DS%X06=nZ&aHm24A.[`h#9t74@%OjUJkO0W
%Ik>hNjAB2aH*+YV*HtW<o](5CV]<'43a>E;Z\otG9I:ap6f+TkmI[S&o-q:TJ&nPC;@aAJ#B#4-1uE%LlPo&LaOm3,N5`N'qt9Bt
%9Z.<=pj^lTcc4"R1kp0(jiWlL)*Q$9^VOTp0WmU6aBsH^jp:p;W7#o?Zf`>gb%gWULE:O--?V,6cDNFJq^@7@4QOXZ1e'WgRlD=J
%*Lc,V-IEme2g)D&@np<(FPH.nnk-Y[IW=_gl9=1/"8CS,>h*F:Nq;7:CpbRgRBZH`8a-+mp?f1FX?E5U_N%36*IPWWqknSUC[]*<
%4aq[nI#A%Gk.*=AO%Sr6:799&3"8-ZqMeG,o1ar*^ujA>,?5YtkBT`flO!8I^tOU0rp7A,^4jIPb0q0>n/Y2;ed`?f`P!^9=Hobu
%;G,t5Q\>Ijl%khX/r.7$rcok"S.T>.OQduRpIR4WV%#D%rVVfP!RDd27b7g8YCiNB^Ldb79!oBZgSbZU)A]DlVS#ZL/YE$@901bP
%UV5Z9p"jWUKu!L3F$?Q@d*!g_1Nc]Zp+gY\.sDW.5.6cu.>-q&;c(d]LsLM8bIHdi]bRWCY+af\KMB3^=ZAGbp=!;_Mf-T[:^a`B
%^`IiU>>IXB3i#^1D$X!N^*FUEm>lkYQ\i9AS]Vo42FKYhE"%BmD;;<Q4Qm,b>5]:6]At!iliQ%XJmFmshbYsCE*ii)]c@0GLRCjG
%kQ@*_Xm:N7*EWC=G>m.F4Y#/U2Kd),'Qd_%!S&:BGB2R0m36F/Nee]Vm*eg)0]QT2LUjZQ(>9"tmZ>=-.o6=RRISZHj\oN#$F40<
%6>j]t3q.U+iQhh3roSpPk\GgOHs\UVi$#.1=>rG,B`*OOAei>P6e+A5>*kFYR*>toG,GdZ`Xt-iGB0LrF\<WaVeIDZWF'f`;Dk'I
%'XQ.B54d\q-ShI[Bj$O3#G?Wp7*1gm62ceQAu:eOBhk=c;jQ)]9#6@r6r1_E>B$XX/D5K3r0l>ZEpo0P'9_$8Qj<%:UPi!FTRlik
%>\)(1JpYPpCepE\EKu7$7Xqd6bWM!1=#A$L&'\VbcA9b;P707E@It<;AL=P_]u=1:?YGNfJjM@6:nEHi\_$W>82>U4HK4*0gT6I$
%$lt-37W4@.(Ln@i-KY]YM,Hi>0/dUtYRQYNbg]0PdT-r?G+aj,g+]42SumTU:oZg^*-7R]P:q/^^0ikb=4_tTQVj&i0QFc#\sY<o
%hD9Lg#M/^?\&nS*3A3S+^eP/@b`BIP2p"@5Zm2N:R?A+:d9$F*N;eFhEqN)On)qJQo#S/H)H!mX/k;"dCI@_LeK?d"Tfd?YE2`p^
%'o4b+m]E3P;o+Bm!%QV20UJcQ,4aeGi(?CBCDf>>"Hu(^%3sdL'dL$X1e%7,S(EcuX3\L6*PdJEG)-GJE4i^p7Pq>q+;1?.4etDl
%"h1k<Tg&Wdj:h4M3.]Q?d6Cn'6ia5O2+U@P\k#7[kCgB\#HDmI[mT[a`p'L3!@5>oanC=9e&QURhjkKuc,CKN#_mVV,D`!H"_V$;
%>%NR:p_]4CroT$)$P@4A@e/9Uh(q]&,<Fbh;8Y-Y`$?Zd,'KBk.^E7qp>Hj\a_8c#g1Hf=W^j&QbiZqZ-LXlp29-@fKP!AEpBe)B
%p%(K`&n,gOI=gWk>#o,nRrJJ6Z'7XjZZjNBM90naSIGt<4PUM:83MA)N):3#IY918$ZXurWtN##l`s%tBRKP#EusB_geurG\5;tl
%@GJiVHo-rQ]h!Rhc+GBoC([f6Vn?!d'g.,%fr83'/7n[o_mq4W0mcJKP3:!Qe8.\aQ^[T6B:&#`<u5#P`:!lL%4qX@>h+;"?@8Tf
%M6R<2LT*8;!hQBG'mrE@iC;>Qe@r%iD)DCUdl'>6TQ,m`Sj`id6o_O>`9?8Y2(?-@Rt+*hiV@K/h[-!c?P:C4AFV+27-L-CEjQIA
%KI^qoFbbN0N=!buVK3/&l/=it`nDgEdO)DQCg=1\<b;kpEI+cYr/h5rKV7WEUJJEfTaB."ObBr)P#D2b1'oNl(EoQ;H`hB\*UMoM
%02!Gn6T?OU1E(W4n`+*3#.C/*hWS8i'#)T9Qt2>Z,ZPHc=+6Xc+c37S'#ik>c0mEF<8q]%`=kmh&&EhP.S!H035m#_ddUNsSQ+8l
%%Q[eC^`_^Nj[u^='(38qc%Y:P>)]s9j9$F]Vj?C%8Q$siJg?VXc;e2-DSQ[F2g4e.k;N^>eYG4lj<&#O6*nA6A_8rfSne9*h&dGm
%TlMF6bXkU1MQrBM*FSG2-RNIWF+o>UdNO<jO'q=o3"'^5"O.p^6#EcZ4Lu;)2KVoC/b(\gNKfE%]3.u^^_=YmZTBrh'rXoY>O-nQ
%I-Mh#H08li%Ra*^r@2LqZlVd."%Z9:+N0@2-"pn2o[G7=7J7M4a[\>VQ`cfo/la1/kpralb*)p:AqVp>=-KO!8^O1-LrGR1UG:Yp
%7[mIthZb>6f<Dicl>tI3d#cFn'@D>%3/Y8Pr"RO5PdY;,1-$\Z]%L^Z!t<UDk;qmdA"GILO!lgZ*`U$SY=FhgAo(J<]:`oMhJl^+
%T^`[`)<C"*&N)GVISd]<YGd=GC/Z8<e\?$BR@Eo^:Nkus4'7ue+\s:bLtH06]Fk_"jktZSi[:0Nb6pa,W$TN;hRM:UMVF!uJ>g(c
%<`)BK;5OCc%no8H<;[2=5l=-sZlP-^[TL.h8K&/f149TIQ8T%'7]FIOOFNdX/gHMF.7qN4<>Ml):%lYck'>DW0Xm2#JSCho?sFBZ
%l=&V]-dI+$XP&jPY1"(I;[:=<g:RoK`1>IV2e-r<Bl"uNM\Uu>=/CHp5je]:Y$a)"kNUu/RZD"ElHHD)p%5Q>4=?d*5*Lhe03)ED
%=qo1E\9jfPF0,+bO]D]sGFj\O5_I9cB7icBU.V2b9A&+Vg.3t7P-Zeb;X2Q9<f9OX2l)MU@'.RG7l/^fF9*Ad6$HS);#4nbqP?oC
%:+l&i.9"op3Pd>.EjFP^ct,jmTTB"RfoC_*0]a.s7C.lqDWr9t,OGp,Ni!ghWgpX^W]+m(h?-gU900$?k)_&/TG\Hhk7P:#@a1?>
%;.$VD\5Y!Geo!N>+ca#&%TPPsqo!o.8&YCi*FiqFO-b*=*aS=r.jo?)aX`Pc-PPR9PVV%s=heo0JZ>uZ[2-pp6.aKWKEH>3qSh-X
%%e2HOX[DP%g'5^0TV'^-ghOm.Y7:W+2lj:qjs(L=5A[bqq\e;3-QJfrjE*\0-gJ?m&*3bu[NYPEDRZuL?t6/sS:'2Bk%ROU3SCCo
%&5<"<1$qHD_b!6_h$g6OF6q`Cj;SSN.pSi.@%rHX3DBP+B_(Ql-JG`07o45=Ip`(T;\IUI[(YV4k#.Tk2J`T$&Aa##'T3K=3p_q!
%VUGIR5KY<M]nal!TP@75CKGg#a-sNm?c+.#]'9"pgO;i.T-fhDf0(p4c9&]50>ic.]?D8!^i1ra+8!4+/kQhP%lnJt*C()2D=(iX
%-h2h(ms2'M,+Ri1SUT^LbFLQFVg2%cUs?@g$dU\-a_]EgTSqc>EqeokV>G,HBm;UG.NC:mG!'2U/7i_mI\6eA&`p7(;QoPn]nRE6
%Zs)rN[f'mLdS_G&qlU0#rOTH0n`l,kAq'0>MMDO?><oH2q$,n()S>`\AoC=8-4Yo%_".!r0j+DD,3+3VC&3gh`<3!u\<Z28.Zt*U
%^nhRNS\8KZ!9NKOmn94e-F_k.CRecAPOicY3%2!f7aU-lYN$BI%+cpJ[Kn6JWu<nG6)6^npNp8Z-F`%WCK?_8LVAf$^s=m7b;U-0
%f7XUf%^S76L@<$105KlUcu=Q,c6Q4V@mc[s7pc$KCG7h8g'P-_/^;F6X1dZ+1/:'b^7YAnqlY,mBqOR!]=J$n;;l&Te@^6#)09#)
%T6A0$=;<FaE6o;>X>j2i#H]1u'^biu#>cYkI;P`h^T$l`B`"KGfB_1b\Z(Y-CO7*FmG$@Ca336.I&\@[?nZdo*lQgq8Q?9U(b^t'
%@*3[c;O;,sagn&Z.$K5QaJqLJ*H.68<+go<HLX(=:\P252mq)JJOZ'A6V!QY6`6nY6LQR1nD$J$JCdbu#.bg3QNhTGA+dP?qsp=D
%[_H>X%1:VcD*'uCTC&9'?a:ncf7Fq)G)=6o8+!BL^]"2ZVnTi"HXRfI8*F>I>SnA,4Ph]qH\e0b4*1Fmfn[?@IJi\4n,@?WrL^"^
%5Q"o>=+>Vrk35\1?iU*#l2@f8p#a0XIm#s-IeSj7P>D4_Im(Gis7G9B5JM\oq!bbbrsaWMIDMsc5Q/FDq7dtu09Q~>
%AI9_PrivateDataEnd
